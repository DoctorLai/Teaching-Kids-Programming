1
00:00:00,080 --> 00:00:05,120
hello mr ryan all right

2
00:00:02,159 --> 00:00:07,600
look so we've got a few numbers here so

3
00:00:05,120 --> 00:00:10,080
each number represents the the number of

4
00:00:07,600 --> 00:00:12,160
candies bananas okay the number of

5
00:00:10,080 --> 00:00:15,120
bananas for each pie

6
00:00:12,160 --> 00:00:17,199
okay so let's play again right

7
00:00:15,120 --> 00:00:20,640
look at this they are one banana three

8
00:00:17,199 --> 00:00:21,439
bananas two bananas six bananas in a row

9
00:00:20,640 --> 00:00:23,760
so

10
00:00:21,439 --> 00:00:27,439
you played it and i play this game put

11
00:00:23,760 --> 00:00:29,840
your time first you can pick six bananas

12
00:00:27,439 --> 00:00:32,160
yeah you can pick the bananas from the

13
00:00:29,840 --> 00:00:34,640
front or the back at each time and i got

14
00:00:32,160 --> 00:00:37,200
to pick next so you pick first i pick

15
00:00:34,640 --> 00:00:40,399
next and then you pick i pick

16
00:00:37,200 --> 00:00:44,399
so we take turns right so can you win no

17
00:00:40,399 --> 00:00:48,399
matter how i play so so put it this way

18
00:00:44,399 --> 00:00:50,800
so you and i both play optimally right

19
00:00:48,399 --> 00:00:53,600
so can you always win for this one so

20
00:00:50,800 --> 00:00:56,320
what's your strategy i take the biggest

21
00:00:53,600 --> 00:00:58,719
number okay you pick six yeah you pick

22
00:00:56,320 --> 00:01:01,680
six and then i pick uh i can pick two

23
00:00:58,719 --> 00:01:03,760
right you pick six i pick two and then

24
00:01:01,680 --> 00:01:06,080
i pick three you pick three and i pick

25
00:01:03,760 --> 00:01:08,640
one yes no matter you because you you

26
00:01:06,080 --> 00:01:11,119
pick first you pick six if i pick one

27
00:01:08,640 --> 00:01:13,200
you can pick three right you always win

28
00:01:11,119 --> 00:01:14,560
but for this one you get to pick

29
00:01:13,200 --> 00:01:17,040
can you win

30
00:01:14,560 --> 00:01:18,320
that depends on who starts first you

31
00:01:17,040 --> 00:01:20,080
always start first that's a good

32
00:01:18,320 --> 00:01:21,520
question you've always suffered can you

33
00:01:20,080 --> 00:01:24,479
win no i said

34
00:01:21,520 --> 00:01:27,759
that depends on who starts first i see

35
00:01:24,479 --> 00:01:29,600
so so i mean in this game you pick first

36
00:01:27,759 --> 00:01:31,920
so can you win

37
00:01:29,600 --> 00:01:34,159
no right because you pick one i pick 10

38
00:01:31,920 --> 00:01:36,159
you pick this one i pick 10 right

39
00:01:34,159 --> 00:01:38,799
yeah so the question is that we're given

40
00:01:36,159 --> 00:01:39,759
a row of bananas and you get to pick

41
00:01:38,799 --> 00:01:41,920
first

42
00:01:39,759 --> 00:01:42,799
and i get to pick next so each one take

43
00:01:41,920 --> 00:01:45,759
turn

44
00:01:42,799 --> 00:01:47,200
so you both play optimally ultimately

45
00:01:45,759 --> 00:01:48,960
yeah please look

46
00:01:47,200 --> 00:01:51,119
optimal

47
00:01:48,960 --> 00:01:54,159
so we want to find out if you can always

48
00:01:51,119 --> 00:01:56,880
win no matter how how good i am okay you

49
00:01:54,159 --> 00:01:59,520
get a dictionary and write down with

50
00:01:56,880 --> 00:02:01,680
you how many scores

51
00:01:59,520 --> 00:02:03,600
okay that's a good one

52
00:02:01,680 --> 00:02:05,840
dictionary so what what's to do with the

53
00:02:03,600 --> 00:02:07,439
dictionary you write down your scores

54
00:02:05,840 --> 00:02:09,200
yeah okay so we use the dictionary to

55
00:02:07,439 --> 00:02:11,360
write down the store okay so what's the

56
00:02:09,200 --> 00:02:13,440
strategy i mean

57
00:02:11,360 --> 00:02:15,040
always pick the biggest in front or in

58
00:02:13,440 --> 00:02:17,360
the end right

59
00:02:15,040 --> 00:02:19,280
it's not always i mean this this

60
00:02:17,360 --> 00:02:20,480
question is not about

61
00:02:19,280 --> 00:02:22,959
um

62
00:02:20,480 --> 00:02:25,200
how to find the maximum

63
00:02:22,959 --> 00:02:26,560
right it's not about how finding the

64
00:02:25,200 --> 00:02:27,520
maximum

65
00:02:26,560 --> 00:02:30,640
score

66
00:02:27,520 --> 00:02:33,120
it's about winning right at each term

67
00:02:30,640 --> 00:02:35,519
you if you get to play you have to join

68
00:02:33,120 --> 00:02:36,640
you pick in the front or in the back

69
00:02:35,519 --> 00:02:38,879
right

70
00:02:36,640 --> 00:02:40,879
you only have two choice so we can

71
00:02:38,879 --> 00:02:42,319
obviously we can prove us right all

72
00:02:40,879 --> 00:02:43,680
right so

73
00:02:42,319 --> 00:02:46,879
for example

74
00:02:43,680 --> 00:02:48,480
if i were you i i i owe you here i got

75
00:02:46,879 --> 00:02:50,800
to pick

76
00:02:48,480 --> 00:02:53,120
i got to pick this one or this one so i

77
00:02:50,800 --> 00:02:55,519
only have two choices right so i can

78
00:02:53,120 --> 00:02:58,400
roof off this if i pick this one

79
00:02:55,519 --> 00:02:59,760
then i have a smaller size of problem if

80
00:02:58,400 --> 00:03:01,760
i pick this one

81
00:02:59,760 --> 00:03:05,360
i have a smaller size of problem and

82
00:03:01,760 --> 00:03:06,400
which one is is bigger right which is

83
00:03:05,360 --> 00:03:09,599
bigger

84
00:03:06,400 --> 00:03:10,640
i always pick the one which gives me the

85
00:03:09,599 --> 00:03:12,400
most

86
00:03:10,640 --> 00:03:14,879
advantage right

87
00:03:12,400 --> 00:03:16,959
and a disadvantage if it's more than you

88
00:03:14,879 --> 00:03:20,000
this is like a two player zero sum game

89
00:03:16,959 --> 00:03:22,959
right two player i picked one score

90
00:03:20,000 --> 00:03:25,519
yo i'm trying to maximize the numbers i

91
00:03:22,959 --> 00:03:28,239
pick and then you're trying to minimize

92
00:03:25,519 --> 00:03:30,080
and we talk about that mean max scan

93
00:03:28,239 --> 00:03:32,799
mean max

94
00:03:30,080 --> 00:03:35,360
right so this game three right

95
00:03:32,799 --> 00:03:35,360
remember

96
00:03:38,560 --> 00:03:43,680
so and here i'm trying to maximize two

97
00:03:41,040 --> 00:03:46,159
and three right and and your turn is

98
00:03:43,680 --> 00:03:48,720
trying to minimize and then maximize

99
00:03:46,159 --> 00:03:51,120
minimize maximize minimize each term two

100
00:03:48,720 --> 00:03:53,439
player right i'm trying to maximize this

101
00:03:51,120 --> 00:03:55,680
you're trying to minimize it okay so

102
00:03:53,439 --> 00:03:56,879
look this is all positive positive

103
00:03:55,680 --> 00:03:58,879
numbers

104
00:03:56,879 --> 00:04:01,040
so i'm trying to maximize so i can add

105
00:03:58,879 --> 00:04:02,640
numbers you're trying to minimize

106
00:04:01,040 --> 00:04:05,120
and you can subtract

107
00:04:02,640 --> 00:04:07,599
so who will win if i'm winning so the

108
00:04:05,120 --> 00:04:09,920
sum will be positive am right

109
00:04:07,599 --> 00:04:11,040
yeah look if i pick six and you pick

110
00:04:09,920 --> 00:04:12,959
seven

111
00:04:11,040 --> 00:04:16,720
six minus seven smaller than zero you

112
00:04:12,959 --> 00:04:18,479
win if i pick six you pick two

113
00:04:16,720 --> 00:04:21,199
the difference would be four and i'm

114
00:04:18,479 --> 00:04:23,680
winning so we're just trying to compute

115
00:04:21,199 --> 00:04:25,280
the sum right i'm trying to maximize i'm

116
00:04:23,680 --> 00:04:27,680
trying to add the numbers you're trying

117
00:04:25,280 --> 00:04:29,520
to subtract the numbers

118
00:04:27,680 --> 00:04:32,080
i know even the sum

119
00:04:29,520 --> 00:04:34,880
is positive i'm winning if the sum is

120
00:04:32,080 --> 00:04:36,240
negative you're winning right

121
00:04:34,880 --> 00:04:38,080
so um

122
00:04:36,240 --> 00:04:41,199
we talk about the mean max min max

123
00:04:38,080 --> 00:04:43,840
function we can have this

124
00:04:41,199 --> 00:04:45,680
you know we have this 10 right 10 whose

125
00:04:43,840 --> 00:04:48,800
10 is it and then we want to give a

126
00:04:45,680 --> 00:04:51,600
range from two right i and j right

127
00:04:48,800 --> 00:04:52,800
i and j means that the the sub array the

128
00:04:51,600 --> 00:04:54,880
sub array

129
00:04:52,800 --> 00:04:57,280
who is 10 whose turn is it on the sub

130
00:04:54,880 --> 00:04:59,120
subarray and this returns a score this

131
00:04:57,280 --> 00:05:01,199
is score if it's bigger than zero i'm

132
00:04:59,120 --> 00:05:02,800
winning if it's smaller than zero you're

133
00:05:01,199 --> 00:05:05,120
winning right

134
00:05:02,800 --> 00:05:06,800
but since uh this is a two player game

135
00:05:05,120 --> 00:05:08,560
so if i'm adding this number you are

136
00:05:06,800 --> 00:05:09,759
subtracting this number we can get rid

137
00:05:08,560 --> 00:05:13,520
of this term

138
00:05:09,759 --> 00:05:15,600
right we just have to subtract in it so

139
00:05:13,520 --> 00:05:17,199
so to put it this way

140
00:05:15,600 --> 00:05:18,960
to put it this way let's define the

141
00:05:17,199 --> 00:05:19,919
function define

142
00:05:18,960 --> 00:05:23,600
f

143
00:05:19,919 --> 00:05:26,400
i j right look p p equals this array

144
00:05:23,600 --> 00:05:28,080
right f i j means that start from index

145
00:05:26,400 --> 00:05:31,199
i up to

146
00:05:28,080 --> 00:05:32,479
index j inclusive so we want to find out

147
00:05:31,199 --> 00:05:35,840
the score

148
00:05:32,479 --> 00:05:39,199
as i am picking right if this num this

149
00:05:35,840 --> 00:05:41,120
function returns a positive number then

150
00:05:39,199 --> 00:05:43,280
i'm winning if it's a negative number

151
00:05:41,120 --> 00:05:44,240
you're winning right remember that right

152
00:05:43,280 --> 00:05:46,800
so look

153
00:05:44,240 --> 00:05:48,160
if i equal equals j

154
00:05:46,800 --> 00:05:49,919
we're trying to prove something at this

155
00:05:48,160 --> 00:05:52,160
point if i equal equal to

156
00:05:49,919 --> 00:05:54,479
so if only number so what should we

157
00:05:52,160 --> 00:05:56,000
return just return itself right at this

158
00:05:54,479 --> 00:05:57,840
point i'm picking right

159
00:05:56,000 --> 00:05:58,880
look at this there are three bananas

160
00:05:57,840 --> 00:06:00,319
here

161
00:05:58,880 --> 00:06:02,880
my turn

162
00:06:00,319 --> 00:06:04,960
so what you do pick it yeah that's three

163
00:06:02,880 --> 00:06:08,080
that's the return

164
00:06:04,960 --> 00:06:09,919
p i right rpg doesn't matter we have two

165
00:06:08,080 --> 00:06:11,919
choice right so we have two choice we

166
00:06:09,919 --> 00:06:14,560
want to pick to the maximum we just

167
00:06:11,919 --> 00:06:15,520
return maximum maximum what

168
00:06:14,560 --> 00:06:17,919
look

169
00:06:15,520 --> 00:06:18,960
if i'm picking the left

170
00:06:17,919 --> 00:06:21,600
right

171
00:06:18,960 --> 00:06:23,280
picking the left so it's p i this is the

172
00:06:21,600 --> 00:06:25,680
number right here

173
00:06:23,280 --> 00:06:28,319
and then the next you're picking right

174
00:06:25,680 --> 00:06:30,560
you're picking so you pick the numbers

175
00:06:28,319 --> 00:06:33,199
from the i plus one to j right because i

176
00:06:30,560 --> 00:06:37,280
already picked the i here right

177
00:06:33,199 --> 00:06:38,479
it's minus look f i plus one

178
00:06:37,280 --> 00:06:40,000
j

179
00:06:38,479 --> 00:06:42,000
p i

180
00:06:40,000 --> 00:06:45,199
this is the bananas

181
00:06:42,000 --> 00:06:48,000
if i pick the left most

182
00:06:45,199 --> 00:06:50,560
right and then your turn your turn is f

183
00:06:48,000 --> 00:06:52,880
i plus one j but you have to

184
00:06:50,560 --> 00:06:54,639
neglect this remember i'm trying to

185
00:06:52,880 --> 00:06:56,080
maximize you're trying to minimize right

186
00:06:54,639 --> 00:06:58,560
this is the

187
00:06:56,080 --> 00:07:00,720
subtract yeah and the other way if i

188
00:06:58,560 --> 00:07:04,800
pick this one right look

189
00:07:00,720 --> 00:07:05,680
if pick the brightness so as pj

190
00:07:04,800 --> 00:07:07,520
f

191
00:07:05,680 --> 00:07:09,440
minus can give me this

192
00:07:07,520 --> 00:07:11,680
look i picked the right mouse so what's

193
00:07:09,440 --> 00:07:11,680
left

194
00:07:11,840 --> 00:07:16,639
we're done i to j minus one

195
00:07:14,560 --> 00:07:17,759
and then i just have to say look if we

196
00:07:16,639 --> 00:07:21,360
turn f

197
00:07:17,759 --> 00:07:22,639
zero from zero to length of the p minus

198
00:07:21,360 --> 00:07:24,720
one

199
00:07:22,639 --> 00:07:27,280
this is the score right and if i'm

200
00:07:24,720 --> 00:07:28,800
winning if if i can always win so this

201
00:07:27,280 --> 00:07:31,520
number needs to be

202
00:07:28,800 --> 00:07:34,240
bigger and yellow or smaller than zero

203
00:07:31,520 --> 00:07:36,960
bigger bigger than zero well done yeah

204
00:07:34,240 --> 00:07:38,960
what's the missing what's missing

205
00:07:36,960 --> 00:07:40,639
where down before i don't put the cash

206
00:07:38,960 --> 00:07:42,560
that's a blue form

207
00:07:40,639 --> 00:07:44,479
yeah i'm every time i have two choice

208
00:07:42,560 --> 00:07:46,160
pick the left or pick the right right

209
00:07:44,479 --> 00:07:48,080
and then we just

210
00:07:46,160 --> 00:07:50,639
make it a smaller problem by recursion

211
00:07:48,080 --> 00:07:53,360
but that's going to take ages because

212
00:07:50,639 --> 00:07:55,199
some of these sub problems might be

213
00:07:53,360 --> 00:07:58,280
calculated over and over again if i put

214
00:07:55,199 --> 00:07:58,280
a cache

215
00:07:58,400 --> 00:08:02,879
if i put a cache means that i want this

216
00:08:00,160 --> 00:08:05,039
f function to be remember the values to

217
00:08:02,879 --> 00:08:07,680
be remembered as long as we have it

218
00:08:05,039 --> 00:08:11,199
right so look i is from 0

219
00:08:07,680 --> 00:08:12,639
to n minus 1 j is from 0 to n minus 1.

220
00:08:11,199 --> 00:08:15,280
so

221
00:08:12,639 --> 00:08:17,599
for i the m choice for j they're in

222
00:08:15,280 --> 00:08:19,360
choice so all to get less n times n so

223
00:08:17,599 --> 00:08:21,440
we have n

224
00:08:19,360 --> 00:08:23,680
square

225
00:08:21,440 --> 00:08:25,599
state because we put a cache so the time

226
00:08:23,680 --> 00:08:27,759
complexity is o n square the space

227
00:08:25,599 --> 00:08:29,680
complexity o n square right we're

228
00:08:27,759 --> 00:08:31,199
putting in cash this is basically

229
00:08:29,680 --> 00:08:33,200
top-down dynamic programming we talk

230
00:08:31,199 --> 00:08:35,279
about it right remember recursion with

231
00:08:33,200 --> 00:08:37,839
the minimization it's basically a top

232
00:08:35,279 --> 00:08:39,120
down so we're given this f zero for

233
00:08:37,839 --> 00:08:42,719
example f

234
00:08:39,120 --> 00:08:46,880
f 0 let's say 10 okay now in order to

235
00:08:42,719 --> 00:08:48,640
calculate f 0 10 it will calculate p 0

236
00:08:46,880 --> 00:08:50,080
minus f

237
00:08:48,640 --> 00:08:52,399
1 10

238
00:08:50,080 --> 00:08:56,080
and p

239
00:08:52,399 --> 00:08:58,480
10 minus f19 right

240
00:08:56,080 --> 00:09:00,720
which one is the maximum get the maximum

241
00:08:58,480 --> 00:09:03,279
oh

242
00:09:00,720 --> 00:09:05,680
right you'll calculate this value right

243
00:09:03,279 --> 00:09:08,560
yeah because in order to get f zero time

244
00:09:05,680 --> 00:09:11,519
you need these two values look f110

245
00:09:08,560 --> 00:09:13,519
again you need two value f1 9 again it

246
00:09:11,519 --> 00:09:15,760
needs two value so this is the third

247
00:09:13,519 --> 00:09:18,320
string this is the search tree right

248
00:09:15,760 --> 00:09:20,399
f function is basically a search tree

249
00:09:18,320 --> 00:09:22,240
every time it has two values

250
00:09:20,399 --> 00:09:23,519
you will take a two value and some of

251
00:09:22,240 --> 00:09:25,760
these values

252
00:09:23,519 --> 00:09:27,839
may be calculated over and over again so

253
00:09:25,760 --> 00:09:29,839
that's why we have this cash function

254
00:09:27,839 --> 00:09:32,320
to remember once we have it this is like

255
00:09:29,839 --> 00:09:34,080
fibonacci number when we calculate this

256
00:09:32,320 --> 00:09:36,240
value we store it using the notebook

257
00:09:34,080 --> 00:09:37,440
cache remember it so basically saying

258
00:09:36,240 --> 00:09:38,480
that okay

259
00:09:37,440 --> 00:09:41,279
let's say

260
00:09:38,480 --> 00:09:43,600
somehow f34 i have calculated again the

261
00:09:41,279 --> 00:09:45,600
first time okay the value is five and i

262
00:09:43,600 --> 00:09:47,519
put down in the notebook

263
00:09:45,600 --> 00:09:49,680
no book right no book

264
00:09:47,519 --> 00:09:52,320
so the next time okay i need the f3 for

265
00:09:49,680 --> 00:09:54,720
our value again i look it up

266
00:09:52,320 --> 00:09:57,279
it's there then i just return instead of

267
00:09:54,720 --> 00:09:59,279
calling this function recursively to do

268
00:09:57,279 --> 00:10:01,279
it do you get it yeah

269
00:09:59,279 --> 00:10:03,279
this is top down we can convert it to

270
00:10:01,279 --> 00:10:05,200
butter up right we can convert it over

271
00:10:03,279 --> 00:10:08,240
using the arrays to two dimensional

272
00:10:05,200 --> 00:10:09,279
arrays to uh to store it so we can do

273
00:10:08,240 --> 00:10:12,640
this

274
00:10:09,279 --> 00:10:14,959
we can do this okay this is the same um

275
00:10:12,640 --> 00:10:15,920
so dp value

276
00:10:14,959 --> 00:10:19,360
and

277
00:10:15,920 --> 00:10:21,040
we know this area n equals length p

278
00:10:19,360 --> 00:10:23,839
dt equals

279
00:10:21,040 --> 00:10:28,880
zero times n for this is a two

280
00:10:23,839 --> 00:10:28,880
dimensional rate of underscore in range

281
00:10:29,440 --> 00:10:32,440
and

282
00:10:32,640 --> 00:10:38,880
for i we need to initialize the value

283
00:10:35,519 --> 00:10:38,880
for i in range and

284
00:10:39,200 --> 00:10:45,200
dp

285
00:10:40,880 --> 00:10:48,000
i i right dbi equals pi right look dpi

286
00:10:45,200 --> 00:10:50,000
equals pi because if i equals zero if we

287
00:10:48,000 --> 00:10:51,920
have only one number

288
00:10:50,000 --> 00:10:54,000
if we only have one pi banana we just

289
00:10:51,920 --> 00:10:55,279
take it we will just rotate it right

290
00:10:54,000 --> 00:10:56,959
yeah

291
00:10:55,279 --> 00:10:57,839
you're not allowed to skip by the way

292
00:10:56,959 --> 00:10:58,720
okay

293
00:10:57,839 --> 00:11:00,959
yeah

294
00:10:58,720 --> 00:11:02,720
this one ten one

295
00:11:00,959 --> 00:11:04,399
then you can just drop that you go first

296
00:11:02,720 --> 00:11:08,079
then i would say okay you go first

297
00:11:04,399 --> 00:11:09,839
nobody will start speaking so cpii i if

298
00:11:08,079 --> 00:11:13,040
from i took i

299
00:11:09,839 --> 00:11:13,839
a single pile of bananas which

300
00:11:13,040 --> 00:11:17,040
return is

301
00:11:13,839 --> 00:11:19,519
okay for i in range

302
00:11:17,040 --> 00:11:23,360
start from from the right so i will go

303
00:11:19,519 --> 00:11:23,360
this way i will go this way

304
00:11:23,519 --> 00:11:29,920
so we start the index i this way

305
00:11:27,440 --> 00:11:33,040
and then j will start from

306
00:11:29,920 --> 00:11:34,880
here okay from i to the end

307
00:11:33,040 --> 00:11:39,519
so from

308
00:11:34,880 --> 00:11:41,600
for i in range m minus 2 to minus 1 -1

309
00:11:39,519 --> 00:11:43,120
we start from the second to the last

310
00:11:41,600 --> 00:11:45,519
index backwards

311
00:11:43,120 --> 00:11:46,880
and for j in

312
00:11:45,519 --> 00:11:50,000
range

313
00:11:46,880 --> 00:11:51,920
i plus 1 to the n right so now we just

314
00:11:50,000 --> 00:11:53,760
have to do this

315
00:11:51,920 --> 00:11:55,440
so dp

316
00:11:53,760 --> 00:11:56,560
i j

317
00:11:55,440 --> 00:11:57,519
equals

318
00:11:56,560 --> 00:11:58,639
so

319
00:11:57,519 --> 00:12:00,320
basically

320
00:11:58,639 --> 00:12:01,600
is least the same

321
00:12:00,320 --> 00:12:04,800
p i

322
00:12:01,600 --> 00:12:10,240
minus d p i plus 1 j

323
00:12:04,800 --> 00:12:12,160
or d p j minus d p i j minus 1 so so

324
00:12:10,240 --> 00:12:15,279
this expression is the same and then at

325
00:12:12,160 --> 00:12:17,200
the end we just return dp from the zero

326
00:12:15,279 --> 00:12:18,959
to the minus one so

327
00:12:17,200 --> 00:12:22,000
meaning that this is that we are given

328
00:12:18,959 --> 00:12:24,560
these uh uh the entire piles and bananas

329
00:12:22,000 --> 00:12:27,279
we want to find out the score if it's

330
00:12:24,560 --> 00:12:29,760
bigger than zero right

331
00:12:27,279 --> 00:12:32,240
yeah so the the left one is the top-down

332
00:12:29,760 --> 00:12:34,880
dynamic programming this is done by the

333
00:12:32,240 --> 00:12:37,200
question with minimization the right one

334
00:12:34,880 --> 00:12:38,720
is the bottom-up dynamic programming

335
00:12:37,200 --> 00:12:40,560
yeah look

336
00:12:38,720 --> 00:12:42,079
we're using restoring the values in the

337
00:12:40,560 --> 00:12:44,000
dp array

338
00:12:42,079 --> 00:12:46,639
and then we can compute

339
00:12:44,000 --> 00:12:48,800
the values ourselves right so let the

340
00:12:46,639 --> 00:12:51,680
time complexion space complexities for

341
00:12:48,800 --> 00:12:53,440
both implementations are the same

342
00:12:51,680 --> 00:12:55,839
but practically speaking

343
00:12:53,440 --> 00:12:57,839
the one on the right the bottom up is

344
00:12:55,839 --> 00:13:01,200
generally faster because we we don't

345
00:12:57,839 --> 00:13:04,000
have risk overhead of calling the

346
00:13:01,200 --> 00:13:05,680
uh according to recursion okay

347
00:13:04,000 --> 00:13:08,000
yeah

348
00:13:05,680 --> 00:13:10,880
okay so what have you learned today

349
00:13:08,000 --> 00:13:12,480
right what have you learned today

350
00:13:10,880 --> 00:13:13,600
okay okay so

351
00:13:12,480 --> 00:13:14,800
speaking

352
00:13:13,600 --> 00:13:16,959
whatever

353
00:13:14,800 --> 00:13:18,480
what accurate are we using so what's the

354
00:13:16,959 --> 00:13:21,040
problem what's the picking the effort

355
00:13:18,480 --> 00:13:21,040
and how do we

356
00:13:31,120 --> 00:13:35,600
okay okay and then what are we doing so

357
00:13:33,279 --> 00:13:37,360
each turn we can pick

358
00:13:35,600 --> 00:13:39,440
we have two choices pick the front and

359
00:13:37,360 --> 00:13:41,680
pick the right right pick people back

360
00:13:39,440 --> 00:13:41,680
back

361
00:13:42,320 --> 00:13:45,600
and you want to find out how you could

362
00:13:44,079 --> 00:13:47,920
win

363
00:13:45,600 --> 00:13:50,560
you can always always win

364
00:13:47,920 --> 00:13:52,480
no matter what no matter your opponent

365
00:13:50,560 --> 00:13:54,320
and you can't skip you can yeah your

366
00:13:52,480 --> 00:13:57,199
opponent comes

367
00:13:54,320 --> 00:14:00,560
both players can't skip and your both

368
00:13:57,199 --> 00:14:03,120
players play ultimately right ultimately

369
00:14:00,560 --> 00:14:05,920
so we want to find out that

370
00:14:03,120 --> 00:14:08,160
programming programming fij means that

371
00:14:05,920 --> 00:14:09,600
we want to find out the score the you

372
00:14:08,160 --> 00:14:10,880
know because i'm playing i'm trying to

373
00:14:09,600 --> 00:14:13,199
maximize you're playing trying to

374
00:14:10,880 --> 00:14:14,720
minimize it's a mean mag tree

375
00:14:13,199 --> 00:14:16,320
right it's a mean back tree if this

376
00:14:14,720 --> 00:14:18,320
score is bigger than zero then i'm

377
00:14:16,320 --> 00:14:20,240
winning if it's smaller than zero then

378
00:14:18,320 --> 00:14:21,839
you're winning right so to calculate

379
00:14:20,240 --> 00:14:23,920
this function we need to find out the

380
00:14:21,839 --> 00:14:26,959
maximum of these two values so the first

381
00:14:23,920 --> 00:14:29,360
one p i minus f i plus one j basically

382
00:14:26,959 --> 00:14:31,279
meaning that if i pick the first one

383
00:14:29,360 --> 00:14:32,399
if i pick the first one then that's the

384
00:14:31,279 --> 00:14:33,920
remaining

385
00:14:32,399 --> 00:14:36,160
if you pick the last one that's the

386
00:14:33,920 --> 00:14:38,880
remaining and now we put a negative

387
00:14:36,160 --> 00:14:41,600
sound because the next player

388
00:14:38,880 --> 00:14:43,120
right i'm maximized and then you are

389
00:14:41,600 --> 00:14:44,959
you're minimized you're subtracting

390
00:14:43,120 --> 00:14:46,639
right right

391
00:14:44,959 --> 00:14:49,040
so look one

392
00:14:46,639 --> 00:14:52,000
nigga will be minus one

393
00:14:49,040 --> 00:14:53,920
and nigga that will be one right

394
00:14:52,000 --> 00:14:56,560
so every time you call the recursion the

395
00:14:53,920 --> 00:14:58,800
mi max three the sign will be negative

396
00:14:56,560 --> 00:14:59,839
and that's that's just like two players

397
00:14:58,800 --> 00:15:01,519
playing you

398
00:14:59,839 --> 00:15:02,880
i'm trying to maximize and you're trying

399
00:15:01,519 --> 00:15:04,399
to minimize it and that might turn

400
00:15:02,880 --> 00:15:06,399
maximizing again and your turn

401
00:15:04,399 --> 00:15:08,560
minimizing the game okay and then if

402
00:15:06,399 --> 00:15:10,399
this score is bigger than zero then

403
00:15:08,560 --> 00:15:11,839
then great i'm winning if it's smaller

404
00:15:10,399 --> 00:15:15,279
than zero length

405
00:15:11,839 --> 00:15:17,519
your wing and if it's equal to zero

406
00:15:15,279 --> 00:15:19,839
then that's a draw right

407
00:15:17,519 --> 00:15:22,480
yeah if it's equal to zero this function

408
00:15:19,839 --> 00:15:24,720
is it returns you know then it's

409
00:15:22,480 --> 00:15:27,040
um it means that you're not always

410
00:15:24,720 --> 00:15:28,880
winning okay that'll be for today good

411
00:15:27,040 --> 00:15:31,880
job bye bye

412
00:15:28,880 --> 00:15:31,880
bye

