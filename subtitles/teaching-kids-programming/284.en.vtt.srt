1
00:00:00,719 --> 00:00:02,389

hello

2
00:00:02,389 --> 00:00:02,399
hello
 

3
00:00:02,399 --> 00:00:06,309
hello
hello are you all right mr eric mr ryan

4
00:00:06,309 --> 00:00:06,319
hello are you all right mr eric mr ryan
 

5
00:00:06,319 --> 00:00:07,190
hello are you all right mr eric mr ryan
okay

6
00:00:07,190 --> 00:00:07,200
okay
 

7
00:00:07,200 --> 00:00:08,790
okay
so today we talk about another problem

8
00:00:08,790 --> 00:00:08,800
so today we talk about another problem
 

9
00:00:08,800 --> 00:00:10,390
so today we talk about another problem
which is called the longest substring

10
00:00:10,390 --> 00:00:10,400
which is called the longest substring
 

11
00:00:10,400 --> 00:00:12,070
which is called the longest substring
yeah we know the longest substrate

12
00:00:12,070 --> 00:00:12,080
yeah we know the longest substrate
 

13
00:00:12,080 --> 00:00:14,070
yeah we know the longest substrate
remember a few days ago we talked about

14
00:00:14,070 --> 00:00:14,080
remember a few days ago we talked about
 

15
00:00:14,080 --> 00:00:15,669
remember a few days ago we talked about
a long distance with at least two

16
00:00:15,669 --> 00:00:15,679
a long distance with at least two
 

17
00:00:15,679 --> 00:00:18,150
a long distance with at least two
distinct characters remember yeah and we

18
00:00:18,150 --> 00:00:18,160
distinct characters remember yeah and we
 

19
00:00:18,160 --> 00:00:20,470
distinct characters remember yeah and we
use the two sliding windows and yeah

20
00:00:20,470 --> 00:00:20,480
use the two sliding windows and yeah
 

21
00:00:20,480 --> 00:00:22,790
use the two sliding windows and yeah
sliding window okay so today we'll talk

22
00:00:22,790 --> 00:00:22,800
sliding window okay so today we'll talk
 

23
00:00:22,800 --> 00:00:24,470
sliding window okay so today we'll talk
about a similar problem with longest

24
00:00:24,470 --> 00:00:24,480
about a similar problem with longest
 

25
00:00:24,480 --> 00:00:27,349
about a similar problem with longest
substring

26
00:00:27,349 --> 00:00:27,359

 

27
00:00:27,359 --> 00:00:29,349

but we want to make sure that each

28
00:00:29,349 --> 00:00:29,359
but we want to make sure that each
 

29
00:00:29,359 --> 00:00:32,630
but we want to make sure that each
character in a substring has at least k

30
00:00:32,630 --> 00:00:32,640
character in a substring has at least k
 

31
00:00:32,640 --> 00:00:35,510
character in a substring has at least k
with at least k

32
00:00:35,510 --> 00:00:35,520
with at least k
 

33
00:00:35,520 --> 00:00:37,910
with at least k
at least k characters

34
00:00:37,910 --> 00:00:37,920
at least k characters
 

35
00:00:37,920 --> 00:00:40,150
at least k characters
what does that even mean

36
00:00:40,150 --> 00:00:40,160
what does that even mean
 

37
00:00:40,160 --> 00:00:42,869
what does that even mean
okay at least k times appearing at least

38
00:00:42,869 --> 00:00:42,879
okay at least k times appearing at least
 

39
00:00:42,879 --> 00:00:47,750
okay at least k times appearing at least
k times okay let me give you an example

40
00:00:47,750 --> 00:00:47,760

 

41
00:00:47,760 --> 00:00:54,150

a b c c d d e f g if this is s is the

42
00:00:54,150 --> 00:00:54,160
a b c c d d e f g if this is s is the
 

43
00:00:54,160 --> 00:00:57,990
a b c c d d e f g if this is s is the
is this string yeah and if k equals two

44
00:00:57,990 --> 00:00:58,000
is this string yeah and if k equals two
 

45
00:00:58,000 --> 00:00:59,910
is this string yeah and if k equals two
k equals two what does it mean

46
00:00:59,910 --> 00:00:59,920
k equals two what does it mean
 

47
00:00:59,920 --> 00:01:01,910
k equals two what does it mean
so what what kind of substring can you

48
00:01:01,910 --> 00:01:01,920
so what what kind of substring can you
 

49
00:01:01,920 --> 00:01:05,109
so what what kind of substring can you
find in in in in this given string

50
00:01:05,109 --> 00:01:05,119
find in in in in this given string
 

51
00:01:05,119 --> 00:01:08,149
find in in in in this given string
a lot a lot and which one yeah can you

52
00:01:08,149 --> 00:01:08,159
a lot a lot and which one yeah can you
 

53
00:01:08,159 --> 00:01:10,310
a lot a lot and which one yeah can you
find the one which has the longest

54
00:01:10,310 --> 00:01:10,320
find the one which has the longest
 

55
00:01:10,320 --> 00:01:12,070
find the one which has the longest
it's the longest and every character

56
00:01:12,070 --> 00:01:12,080
it's the longest and every character
 

57
00:01:12,080 --> 00:01:14,149
it's the longest and every character
appears at least two times

58
00:01:14,149 --> 00:01:14,159
appears at least two times
 

59
00:01:14,159 --> 00:01:16,070
appears at least two times
so every character every character

60
00:01:16,070 --> 00:01:16,080
so every character every character
 

61
00:01:16,080 --> 00:01:18,710
so every character every character
appears at least k times so for example

62
00:01:18,710 --> 00:01:18,720
appears at least k times so for example
 

63
00:01:18,720 --> 00:01:19,830
appears at least k times so for example
like

64
00:01:19,830 --> 00:01:19,840
like
 

65
00:01:19,840 --> 00:01:22,870
like
is this a requirement a b c c

66
00:01:22,870 --> 00:01:22,880
is this a requirement a b c c
 

67
00:01:22,880 --> 00:01:24,950
is this a requirement a b c c
by the way the exception is continuous

68
00:01:24,950 --> 00:01:24,960
by the way the exception is continuous
 

69
00:01:24,960 --> 00:01:27,270
by the way the exception is continuous
right yeah substring

70
00:01:27,270 --> 00:01:27,280
right yeah substring
 

71
00:01:27,280 --> 00:01:29,270
right yeah substring
but subsequently it's not sufficient

72
00:01:29,270 --> 00:01:29,280
but subsequently it's not sufficient
 

73
00:01:29,280 --> 00:01:31,270
but subsequently it's not sufficient
subsequent you can pick a c

74
00:01:31,270 --> 00:01:31,280
subsequent you can pick a c
 

75
00:01:31,280 --> 00:01:33,030
subsequent you can pick a c
d f g here

76
00:01:33,030 --> 00:01:33,040
d f g here
 

77
00:01:33,040 --> 00:01:34,870
d f g here
subsequence is the

78
00:01:34,870 --> 00:01:34,880
subsequence is the
 

79
00:01:34,880 --> 00:01:37,990
subsequence is the
seek is a string that you delete one or

80
00:01:37,990 --> 00:01:38,000
seek is a string that you delete one or
 

81
00:01:38,000 --> 00:01:38,870
seek is a string that you delete one or
more

82
00:01:38,870 --> 00:01:38,880
more
 

83
00:01:38,880 --> 00:01:40,550
more
characters from the original string yeah

84
00:01:40,550 --> 00:01:40,560
characters from the original string yeah
 

85
00:01:40,560 --> 00:01:42,230
characters from the original string yeah
you can delete one or more and it

86
00:01:42,230 --> 00:01:42,240
you can delete one or more and it
 

87
00:01:42,240 --> 00:01:43,910
you can delete one or more and it
becomes a substrate but we are talking

88
00:01:43,910 --> 00:01:43,920
becomes a substrate but we are talking
 

89
00:01:43,920 --> 00:01:46,789
becomes a substrate but we are talking
about a substring a subsequent uh

90
00:01:46,789 --> 00:01:46,799
about a substring a subsequent uh
 

91
00:01:46,799 --> 00:01:48,310
about a substring a subsequent uh
we have talking about a substring okay

92
00:01:48,310 --> 00:01:48,320
we have talking about a substring okay
 

93
00:01:48,320 --> 00:01:49,670
we have talking about a substring okay
subsequence is

94
00:01:49,670 --> 00:01:49,680
subsequence is
 

95
00:01:49,680 --> 00:01:51,429
subsequence is
you delete one or more character from

96
00:01:51,429 --> 00:01:51,439
you delete one or more character from
 

97
00:01:51,439 --> 00:01:52,550
you delete one or more character from
the original that becomes the

98
00:01:52,550 --> 00:01:52,560
the original that becomes the
 

99
00:01:52,560 --> 00:01:54,630
the original that becomes the
subsequence but substring is that you it

100
00:01:54,630 --> 00:01:54,640
subsequence but substring is that you it
 

101
00:01:54,640 --> 00:01:57,109
subsequence but substring is that you it
has to be continuous right so look this

102
00:01:57,109 --> 00:01:57,119
has to be continuous right so look this
 

103
00:01:57,119 --> 00:01:59,510
has to be continuous right so look this
is a substring a b c c and can you tell

104
00:01:59,510 --> 00:01:59,520
is a substring a b c c and can you tell
 

105
00:01:59,520 --> 00:02:01,350
is a substring a b c c and can you tell
me if they are at least

106
00:02:01,350 --> 00:02:01,360
me if they are at least
 

107
00:02:01,360 --> 00:02:02,789
me if they are at least
if each character in the substrate

108
00:02:02,789 --> 00:02:02,799
if each character in the substrate
 

109
00:02:02,799 --> 00:02:06,389
if each character in the substrate
appears at this place

110
00:02:06,389 --> 00:02:06,399

 

111
00:02:06,399 --> 00:02:08,630

because a appears one b appear one c

112
00:02:08,630 --> 00:02:08,640
because a appears one b appear one c
 

113
00:02:08,640 --> 00:02:11,029
because a appears one b appear one c
yeah okay so we want to look for the z

114
00:02:11,029 --> 00:02:11,039
yeah okay so we want to look for the z
 

115
00:02:11,039 --> 00:02:12,229
yeah okay so we want to look for the z
d

116
00:02:12,229 --> 00:02:12,239
d
 

117
00:02:12,239 --> 00:02:15,110
d
okay c c d d

118
00:02:15,110 --> 00:02:15,120
okay c c d d
 

119
00:02:15,120 --> 00:02:17,110
okay c c d d
this is longest we're done yeah yeah

120
00:02:17,110 --> 00:02:17,120
this is longest we're done yeah yeah
 

121
00:02:17,120 --> 00:02:19,589
this is longest we're done yeah yeah
because each one appears at least twice

122
00:02:19,589 --> 00:02:19,599
because each one appears at least twice
 

123
00:02:19,599 --> 00:02:20,390
because each one appears at least twice
right

124
00:02:20,390 --> 00:02:20,400
right
 

125
00:02:20,400 --> 00:02:22,070
right
and then it's longest you can find

126
00:02:22,070 --> 00:02:22,080
and then it's longest you can find
 

127
00:02:22,080 --> 00:02:23,510
and then it's longest you can find
anymore which is

128
00:02:23,510 --> 00:02:23,520
anymore which is
 

129
00:02:23,520 --> 00:02:26,390
anymore which is
uh longer than that right yeah

130
00:02:26,390 --> 00:02:26,400
uh longer than that right yeah
 

131
00:02:26,400 --> 00:02:29,270
uh longer than that right yeah
so how can we do this with the suction

132
00:02:29,270 --> 00:02:29,280
so how can we do this with the suction
 

133
00:02:29,280 --> 00:02:31,030
so how can we do this with the suction
you know

134
00:02:31,030 --> 00:02:31,040
you know
 

135
00:02:31,040 --> 00:02:32,710
you know
every problem

136
00:02:32,710 --> 00:02:32,720
every problem
 

137
00:02:32,720 --> 00:02:34,070
every problem
almost every problem yeah with a

138
00:02:34,070 --> 00:02:34,080
almost every problem yeah with a
 

139
00:02:34,080 --> 00:02:38,150
almost every problem yeah with a
substring the first idea is to do what

140
00:02:38,150 --> 00:02:38,160
substring the first idea is to do what
 

141
00:02:38,160 --> 00:02:39,910
substring the first idea is to do what
yeah performing because what we can

142
00:02:39,910 --> 00:02:39,920
yeah performing because what we can
 

143
00:02:39,920 --> 00:02:42,150
yeah performing because what we can
easily perform right what's the time

144
00:02:42,150 --> 00:02:42,160
easily perform right what's the time
 

145
00:02:42,160 --> 00:02:45,030
easily perform right what's the time
complexity to prove for the substrate

146
00:02:45,030 --> 00:02:45,040
complexity to prove for the substrate
 

147
00:02:45,040 --> 00:02:47,270
complexity to prove for the substrate
substring look if this is a string

148
00:02:47,270 --> 00:02:47,280
substring look if this is a string
 

149
00:02:47,280 --> 00:02:48,309
substring look if this is a string
what's the

150
00:02:48,309 --> 00:02:48,319
what's the
 

151
00:02:48,319 --> 00:02:51,110
what's the
how do we profess the substring

152
00:02:51,110 --> 00:02:51,120
how do we profess the substring
 

153
00:02:51,120 --> 00:02:53,030
how do we profess the substring
how do we profess a substring proof of

154
00:02:53,030 --> 00:02:53,040
how do we profess a substring proof of
 

155
00:02:53,040 --> 00:02:54,869
how do we profess a substring proof of
the substring

156
00:02:54,869 --> 00:02:54,879
the substring
 

157
00:02:54,879 --> 00:02:57,990
the substring
how do you profess it

158
00:02:57,990 --> 00:02:58,000

 

159
00:02:58,000 --> 00:03:02,710

um we just check everything sliding yeah

160
00:03:02,710 --> 00:03:02,720
um we just check everything sliding yeah
 

161
00:03:02,720 --> 00:03:05,190
um we just check everything sliding yeah
the substring is to have a flow index

162
00:03:05,190 --> 00:03:05,200
the substring is to have a flow index
 

163
00:03:05,200 --> 00:03:06,790
the substring is to have a flow index
and two index yeah

164
00:03:06,790 --> 00:03:06,800
and two index yeah
 

165
00:03:06,800 --> 00:03:09,110
and two index yeah
from index to index for the position

166
00:03:09,110 --> 00:03:09,120
from index to index for the position
 

167
00:03:09,120 --> 00:03:10,630
from index to index for the position
when it starts and the partition when

168
00:03:10,630 --> 00:03:10,640
when it starts and the partition when
 

169
00:03:10,640 --> 00:03:13,030
when it starts and the partition when
the substring ends so we can blue force

170
00:03:13,030 --> 00:03:13,040
the substring ends so we can blue force
 

171
00:03:13,040 --> 00:03:14,309
the substring ends so we can blue force
this right

172
00:03:14,309 --> 00:03:14,319
this right
 

173
00:03:14,319 --> 00:03:17,509
this right
so for if if length is n then we can do

174
00:03:17,509 --> 00:03:17,519
so for if if length is n then we can do
 

175
00:03:17,519 --> 00:03:19,830
so for if if length is n then we can do
this for i in range

176
00:03:19,830 --> 00:03:19,840
this for i in range
 

177
00:03:19,840 --> 00:03:22,630
this for i in range
n and for j in range

178
00:03:22,630 --> 00:03:22,640
n and for j in range
 

179
00:03:22,640 --> 00:03:26,229
n and for j in range
range i or for j in range i

180
00:03:26,229 --> 00:03:26,239
range i or for j in range i
 

181
00:03:26,239 --> 00:03:29,509
range i or for j in range i
n right okay so let's in o n square

182
00:03:29,509 --> 00:03:29,519
n right okay so let's in o n square
 

183
00:03:29,519 --> 00:03:30,390
n right okay so let's in o n square
right

184
00:03:30,390 --> 00:03:30,400
right
 

185
00:03:30,400 --> 00:03:31,509
right
right

186
00:03:31,509 --> 00:03:31,519
right
 

187
00:03:31,519 --> 00:03:32,869
right
yeah

188
00:03:32,869 --> 00:03:32,879
yeah
 

189
00:03:32,879 --> 00:03:35,270
yeah
okay so once we have a substring we can

190
00:03:35,270 --> 00:03:35,280
okay so once we have a substring we can
 

191
00:03:35,280 --> 00:03:37,830
okay so once we have a substring we can
check if it if each character appears at

192
00:03:37,830 --> 00:03:37,840
check if it if each character appears at
 

193
00:03:37,840 --> 00:03:40,390
check if it if each character appears at
least k times how can we check it

194
00:03:40,390 --> 00:03:40,400
least k times how can we check it
 

195
00:03:40,400 --> 00:03:43,750
least k times how can we check it
remember how can you check it

196
00:03:43,750 --> 00:03:43,760
remember how can you check it
 

197
00:03:43,760 --> 00:03:46,789
remember how can you check it
um

198
00:03:46,789 --> 00:03:46,799

 

199
00:03:46,799 --> 00:03:48,789

when we said we want to count the number

200
00:03:48,789 --> 00:03:48,799
when we said we want to count the number
 

201
00:03:48,799 --> 00:03:50,229
when we said we want to count the number
of characters

202
00:03:50,229 --> 00:03:50,239
of characters
 

203
00:03:50,239 --> 00:03:52,229
of characters
appearing in a substring in a string

204
00:03:52,229 --> 00:03:52,239
appearing in a substring in a string
 

205
00:03:52,239 --> 00:03:54,630
appearing in a substring in a string
what kind of data structure what kind of

206
00:03:54,630 --> 00:03:54,640
what kind of data structure what kind of
 

207
00:03:54,640 --> 00:03:55,670
what kind of data structure what kind of
uh

208
00:03:55,670 --> 00:03:55,680
uh
 

209
00:03:55,680 --> 00:03:58,070
uh
thing we can use to do this to count to

210
00:03:58,070 --> 00:03:58,080
thing we can use to do this to count to
 

211
00:03:58,080 --> 00:04:02,070
thing we can use to do this to count to
count what's that counter yeah okay so

212
00:04:02,070 --> 00:04:02,080
count what's that counter yeah okay so
 

213
00:04:02,080 --> 00:04:04,070
count what's that counter yeah okay so
let's implement this proof of thing

214
00:04:04,070 --> 00:04:04,080
let's implement this proof of thing
 

215
00:04:04,080 --> 00:04:05,509
let's implement this proof of thing
first okay

216
00:04:05,509 --> 00:04:05,519
first okay
 

217
00:04:05,519 --> 00:04:08,390
first okay
defy okay let's just call it foo

218
00:04:08,390 --> 00:04:08,400
defy okay let's just call it foo
 

219
00:04:08,400 --> 00:04:10,550
defy okay let's just call it foo
sk

220
00:04:10,550 --> 00:04:10,560
sk
 

221
00:04:10,560 --> 00:04:13,429
sk
so n equals length actually first we

222
00:04:13,429 --> 00:04:13,439
so n equals length actually first we
 

223
00:04:13,439 --> 00:04:14,949
so n equals length actually first we
don't want to get the lens of the string

224
00:04:14,949 --> 00:04:14,959
don't want to get the lens of the string
 

225
00:04:14,959 --> 00:04:17,670
don't want to get the lens of the string
yeah eric what you're doing

226
00:04:17,670 --> 00:04:17,680
yeah eric what you're doing
 

227
00:04:17,680 --> 00:04:19,430
yeah eric what you're doing
so we want to

228
00:04:19,430 --> 00:04:19,440
so we want to
 

229
00:04:19,440 --> 00:04:21,030
so we want to
so how can we write the blue first thing

230
00:04:21,030 --> 00:04:21,040
so how can we write the blue first thing
 

231
00:04:21,040 --> 00:04:22,629
so how can we write the blue first thing
come on come on

232
00:04:22,629 --> 00:04:22,639
come on come on
 

233
00:04:22,639 --> 00:04:24,390
come on come on
four

234
00:04:24,390 --> 00:04:24,400
four
 

235
00:04:24,400 --> 00:04:25,510
four
for i

236
00:04:25,510 --> 00:04:25,520
for i
 

237
00:04:25,520 --> 00:04:27,670
for i
in range n right

238
00:04:27,670 --> 00:04:27,680
in range n right
 

239
00:04:27,680 --> 00:04:31,430
in range n right
this is the left part yeah and then

240
00:04:31,430 --> 00:04:31,440
this is the left part yeah and then
 

241
00:04:31,440 --> 00:04:33,110
this is the left part yeah and then
sit there please so i can talk to you

242
00:04:33,110 --> 00:04:33,120
sit there please so i can talk to you
 

243
00:04:33,120 --> 00:04:35,510
sit there please so i can talk to you
see that please

244
00:04:35,510 --> 00:04:35,520
see that please
 

245
00:04:35,520 --> 00:04:38,070
see that please
ryan can you see that

246
00:04:38,070 --> 00:04:38,080
ryan can you see that
 

247
00:04:38,080 --> 00:04:39,670
ryan can you see that
for j

248
00:04:39,670 --> 00:04:39,680
for j
 

249
00:04:39,680 --> 00:04:49,490
for j
in range

250
00:04:49,490 --> 00:04:49,500

 

251
00:04:49,500 --> 00:04:51,670

[Music]

252
00:04:51,670 --> 00:04:51,680
[Music]
 

253
00:04:51,680 --> 00:04:53,189
[Music]
there are two ways of writing you can

254
00:04:53,189 --> 00:04:53,199
there are two ways of writing you can
 

255
00:04:53,199 --> 00:04:54,710
there are two ways of writing you can
write okay so if

256
00:04:54,710 --> 00:04:54,720
write okay so if
 

257
00:04:54,720 --> 00:04:58,870
write okay so if
the string is s i j plus one so

258
00:04:58,870 --> 00:04:58,880
the string is s i j plus one so
 

259
00:04:58,880 --> 00:05:02,070
the string is s i j plus one so
i and where that i said okay or if it

260
00:05:02,070 --> 00:05:02,080
i and where that i said okay or if it
 

261
00:05:02,080 --> 00:05:03,590
i and where that i said okay or if it
you can do it if j

262
00:05:03,590 --> 00:05:03,600
you can do it if j
 

263
00:05:03,600 --> 00:05:04,469
you can do it if j
i

264
00:05:04,469 --> 00:05:04,479
i
 

265
00:05:04,479 --> 00:05:06,469
i
plus one right then you can

266
00:05:06,469 --> 00:05:06,479
plus one right then you can
 

267
00:05:06,479 --> 00:05:09,110
plus one right then you can
call j in range i okay

268
00:05:09,110 --> 00:05:09,120
call j in range i okay
 

269
00:05:09,120 --> 00:05:11,029
call j in range i okay
it's just almost the same right

270
00:05:11,029 --> 00:05:11,039
it's just almost the same right
 

271
00:05:11,039 --> 00:05:12,950
it's just almost the same right
okay so now what's this what's the

272
00:05:12,950 --> 00:05:12,960
okay so now what's this what's the
 

273
00:05:12,960 --> 00:05:15,749
okay so now what's this what's the
substring x equals s

274
00:05:15,749 --> 00:05:15,759
substring x equals s
 

275
00:05:15,759 --> 00:05:19,110
substring x equals s
i to j plus one right

276
00:05:19,110 --> 00:05:19,120
i to j plus one right
 

277
00:05:19,120 --> 00:05:21,029
i to j plus one right
all right so this is the substring now

278
00:05:21,029 --> 00:05:21,039
all right so this is the substring now
 

279
00:05:21,039 --> 00:05:22,710
all right so this is the substring now
we want to check if the substring

280
00:05:22,710 --> 00:05:22,720
we want to check if the substring
 

281
00:05:22,720 --> 00:05:24,469
we want to check if the substring
contains any scaling numbers then we put

282
00:05:24,469 --> 00:05:24,479
contains any scaling numbers then we put
 

283
00:05:24,479 --> 00:05:27,830
contains any scaling numbers then we put
it in the counter c equals counter

284
00:05:27,830 --> 00:05:27,840
it in the counter c equals counter
 

285
00:05:27,840 --> 00:05:29,350
it in the counter c equals counter
counter x

286
00:05:29,350 --> 00:05:29,360
counter x
 

287
00:05:29,360 --> 00:05:30,390
counter x
right

288
00:05:30,390 --> 00:05:30,400
right
 

289
00:05:30,400 --> 00:05:33,029
right
yeah now we have a counter so

290
00:05:33,029 --> 00:05:33,039
yeah now we have a counter so
 

291
00:05:33,039 --> 00:05:34,710
yeah now we have a counter so
see the value

292
00:05:34,710 --> 00:05:34,720
see the value
 

293
00:05:34,720 --> 00:05:37,670
see the value
if it's the substring seed of values so

294
00:05:37,670 --> 00:05:37,680
if it's the substring seed of values so
 

295
00:05:37,680 --> 00:05:40,070
if it's the substring seed of values so
how can we check if all those characters

296
00:05:40,070 --> 00:05:40,080
how can we check if all those characters
 

297
00:05:40,080 --> 00:05:42,629
how can we check if all those characters
appear at least k times using the seed

298
00:05:42,629 --> 00:05:42,639
appear at least k times using the seed
 

299
00:05:42,639 --> 00:05:43,830
appear at least k times using the seed
of values

300
00:05:43,830 --> 00:05:43,840
of values
 

301
00:05:43,840 --> 00:05:46,310
of values
remember what's in the counter how the

302
00:05:46,310 --> 00:05:46,320
remember what's in the counter how the
 

303
00:05:46,320 --> 00:05:48,629
remember what's in the counter how the
keys are the numbers yeah uh

304
00:05:48,629 --> 00:05:48,639
keys are the numbers yeah uh
 

305
00:05:48,639 --> 00:05:51,110
keys are the numbers yeah uh
them unless characters yeah

306
00:05:51,110 --> 00:05:51,120
them unless characters yeah
 

307
00:05:51,120 --> 00:05:53,350
them unless characters yeah
and the values will be what the number

308
00:05:53,350 --> 00:05:53,360
and the values will be what the number
 

309
00:05:53,360 --> 00:05:55,189
and the values will be what the number
of times they appear right

310
00:05:55,189 --> 00:05:55,199
of times they appear right
 

311
00:05:55,199 --> 00:05:57,909
of times they appear right
and if the minimum of c the values is

312
00:05:57,909 --> 00:05:57,919
and if the minimum of c the values is
 

313
00:05:57,919 --> 00:06:01,430
and if the minimum of c the values is
still bigger than k or equal in k

314
00:06:01,430 --> 00:06:01,440
still bigger than k or equal in k
 

315
00:06:01,440 --> 00:06:03,830
still bigger than k or equal in k
what does that mean

316
00:06:03,830 --> 00:06:03,840
what does that mean
 

317
00:06:03,840 --> 00:06:04,830
what does that mean
what does that

318
00:06:04,830 --> 00:06:04,840
what does that
 

319
00:06:04,840 --> 00:06:07,029
what does that
mean if mean

320
00:06:07,029 --> 00:06:07,039
mean if mean
 

321
00:06:07,039 --> 00:06:10,629
mean if mean
see the values

322
00:06:10,629 --> 00:06:10,639

 

323
00:06:10,639 --> 00:06:13,110

bigger than k bigger than equals k what

324
00:06:13,110 --> 00:06:13,120
bigger than k bigger than equals k what
 

325
00:06:13,120 --> 00:06:16,790
bigger than k bigger than equals k what
does it mean

326
00:06:16,790 --> 00:06:16,800

 

327
00:06:16,800 --> 00:06:18,550

it means what

328
00:06:18,550 --> 00:06:18,560
it means what
 

329
00:06:18,560 --> 00:06:20,309
it means what
what does it mean if the values the

330
00:06:20,309 --> 00:06:20,319
what does it mean if the values the
 

331
00:06:20,319 --> 00:06:23,510
what does it mean if the values the
minimum values look as i said the keys

332
00:06:23,510 --> 00:06:23,520
minimum values look as i said the keys
 

333
00:06:23,520 --> 00:06:25,350
minimum values look as i said the keys
are the number of the characters and the

334
00:06:25,350 --> 00:06:25,360
are the number of the characters and the
 

335
00:06:25,360 --> 00:06:27,110
are the number of the characters and the
values are the number of times they

336
00:06:27,110 --> 00:06:27,120
values are the number of times they
 

337
00:06:27,120 --> 00:06:28,710
values are the number of times they
appear right in the substring right in a

338
00:06:28,710 --> 00:06:28,720
appear right in the substring right in a
 

339
00:06:28,720 --> 00:06:31,350
appear right in the substring right in a
string if the minimum of the values is

340
00:06:31,350 --> 00:06:31,360
string if the minimum of the values is
 

341
00:06:31,360 --> 00:06:34,550
string if the minimum of the values is
bigger than k what does that mean

342
00:06:34,550 --> 00:06:34,560
bigger than k what does that mean
 

343
00:06:34,560 --> 00:06:37,270
bigger than k what does that mean
it means that it's not

344
00:06:37,270 --> 00:06:37,280
it means that it's not
 

345
00:06:37,280 --> 00:06:41,670
it means that it's not
there is what that is what there is one

346
00:06:41,670 --> 00:06:41,680

 

347
00:06:41,680 --> 00:06:44,469

each character appears what i leave

348
00:06:44,469 --> 00:06:44,479
each character appears what i leave
 

349
00:06:44,479 --> 00:06:46,550
each character appears what i leave
yeah yeah and then we want to remember

350
00:06:46,550 --> 00:06:46,560
yeah yeah and then we want to remember
 

351
00:06:46,560 --> 00:06:48,550
yeah yeah and then we want to remember
that longest answer equals zero and

352
00:06:48,550 --> 00:06:48,560
that longest answer equals zero and
 

353
00:06:48,560 --> 00:06:50,150
that longest answer equals zero and
answer equals one

354
00:06:50,150 --> 00:06:50,160
answer equals one
 

355
00:06:50,160 --> 00:06:52,390
answer equals one
maximum answer and then what's the

356
00:06:52,390 --> 00:06:52,400
maximum answer and then what's the
 

357
00:06:52,400 --> 00:06:56,150
maximum answer and then what's the
length of the sun string

358
00:06:56,150 --> 00:06:56,160

 

359
00:06:56,160 --> 00:06:57,830

[Music]

360
00:06:57,830 --> 00:06:57,840
[Music]
 

361
00:06:57,840 --> 00:07:00,550
[Music]
j minus or length x or you can say j

362
00:07:00,550 --> 00:07:00,560
j minus or length x or you can say j
 

363
00:07:00,560 --> 00:07:02,550
j minus or length x or you can say j
minus i plus one right

364
00:07:02,550 --> 00:07:02,560
minus i plus one right
 

365
00:07:02,560 --> 00:07:03,350
minus i plus one right
yeah

366
00:07:03,350 --> 00:07:03,360
yeah
 

367
00:07:03,360 --> 00:07:05,510
yeah
and return answer yeah

368
00:07:05,510 --> 00:07:05,520
and return answer yeah
 

369
00:07:05,520 --> 00:07:08,410
and return answer yeah
what's the time complexity come on

370
00:07:08,410 --> 00:07:08,420
what's the time complexity come on
 

371
00:07:08,420 --> 00:07:10,309
what's the time complexity come on
[Music]

372
00:07:10,309 --> 00:07:10,319
[Music]
 

373
00:07:10,319 --> 00:07:11,589
[Music]
square

374
00:07:11,589 --> 00:07:11,599
square
 

375
00:07:11,599 --> 00:07:14,070
square
overlays

376
00:07:14,070 --> 00:07:14,080
overlays
 

377
00:07:14,080 --> 00:07:15,990
overlays
yeah look don't forget this this is our

378
00:07:15,990 --> 00:07:16,000
yeah look don't forget this this is our
 

379
00:07:16,000 --> 00:07:19,750
yeah look don't forget this this is our
inquiry what's the space complexity

380
00:07:19,750 --> 00:07:19,760

 

381
00:07:19,760 --> 00:07:20,950

[Music]

382
00:07:20,950 --> 00:07:20,960
[Music]
 

383
00:07:20,960 --> 00:07:26,629
[Music]
any space we are using yeah there

384
00:07:26,629 --> 00:07:26,639

 

385
00:07:26,639 --> 00:07:28,710

when we say counter we we are using

386
00:07:28,710 --> 00:07:28,720
when we say counter we we are using
 

387
00:07:28,720 --> 00:07:30,150
when we say counter we we are using
space right you can see because we

388
00:07:30,150 --> 00:07:30,160
space right you can see because we
 

389
00:07:30,160 --> 00:07:33,670
space right you can see because we
decide the notebook thing oh and yeah

390
00:07:33,670 --> 00:07:33,680
decide the notebook thing oh and yeah
 

391
00:07:33,680 --> 00:07:36,950
decide the notebook thing oh and yeah
right yeah that's slime let's go

392
00:07:36,950 --> 00:07:36,960
right yeah that's slime let's go
 

393
00:07:36,960 --> 00:07:39,350
right yeah that's slime let's go
can we do better

394
00:07:39,350 --> 00:07:39,360
can we do better
 

395
00:07:39,360 --> 00:07:42,710
can we do better
can we do better

396
00:07:42,710 --> 00:07:42,720

 

397
00:07:42,720 --> 00:07:45,189

okay so again this one okay

398
00:07:45,189 --> 00:07:45,199
okay so again this one okay
 

399
00:07:45,199 --> 00:07:46,550
okay so again this one okay
a b

400
00:07:46,550 --> 00:07:46,560
a b
 

401
00:07:46,560 --> 00:07:49,670
a b
b c c d

402
00:07:49,670 --> 00:07:49,680
b c c d
 

403
00:07:49,680 --> 00:07:50,550
b c c d
b

404
00:07:50,550 --> 00:07:50,560
b
 

405
00:07:50,560 --> 00:07:53,510
b
e f g okay k equals two okay k equals

406
00:07:53,510 --> 00:07:53,520
e f g okay k equals two okay k equals
 

407
00:07:53,520 --> 00:07:55,909
e f g okay k equals two okay k equals
two so what's the longest okay what's

408
00:07:55,909 --> 00:07:55,919
two so what's the longest okay what's
 

409
00:07:55,919 --> 00:07:57,909
two so what's the longest okay what's
the longest what's the longest substring

410
00:07:57,909 --> 00:07:57,919
the longest what's the longest substring
 

411
00:07:57,919 --> 00:07:59,510
the longest what's the longest substring
that every character appears at least

412
00:07:59,510 --> 00:07:59,520
that every character appears at least
 

413
00:07:59,520 --> 00:08:00,550
that every character appears at least
two

414
00:08:00,550 --> 00:08:00,560
two
 

415
00:08:00,560 --> 00:08:03,510
two
what's the longest you can find b b c c

416
00:08:03,510 --> 00:08:03,520
what's the longest you can find b b c c
 

417
00:08:03,520 --> 00:08:04,550
what's the longest you can find b b c c
d d

418
00:08:04,550 --> 00:08:04,560
d d
 

419
00:08:04,560 --> 00:08:06,390
d d
yeah you see

420
00:08:06,390 --> 00:08:06,400
yeah you see
 

421
00:08:06,400 --> 00:08:09,350
yeah you see
okay so now if i said

422
00:08:09,350 --> 00:08:09,360
okay so now if i said
 

423
00:08:09,360 --> 00:08:12,710
okay so now if i said
if i i know a character if i know a

424
00:08:12,710 --> 00:08:12,720
if i i know a character if i know a
 

425
00:08:12,720 --> 00:08:14,550
if i i know a character if i know a
character look if i know a character

426
00:08:14,550 --> 00:08:14,560
character look if i know a character
 

427
00:08:14,560 --> 00:08:17,189
character look if i know a character
which it only appears

428
00:08:17,189 --> 00:08:17,199
which it only appears
 

429
00:08:17,199 --> 00:08:19,189
which it only appears
once less than k times can it be

430
00:08:19,189 --> 00:08:19,199
once less than k times can it be
 

431
00:08:19,199 --> 00:08:22,950
once less than k times can it be
included in the longest substring

432
00:08:22,950 --> 00:08:22,960
included in the longest substring
 

433
00:08:22,960 --> 00:08:24,710
included in the longest substring
it's like e f g

434
00:08:24,710 --> 00:08:24,720
it's like e f g
 

435
00:08:24,720 --> 00:08:30,629
it's like e f g
a

436
00:08:30,629 --> 00:08:30,639

 

437
00:08:30,639 --> 00:08:33,430

include in the final longest substring

438
00:08:33,430 --> 00:08:33,440
include in the final longest substring
 

439
00:08:33,440 --> 00:08:35,190
include in the final longest substring
no that's right because we are looking

440
00:08:35,190 --> 00:08:35,200
no that's right because we are looking
 

441
00:08:35,200 --> 00:08:37,509
no that's right because we are looking
for the string that can every every

442
00:08:37,509 --> 00:08:37,519
for the string that can every every
 

443
00:08:37,519 --> 00:08:39,190
for the string that can every every
character appear at least can't have

444
00:08:39,190 --> 00:08:39,200
character appear at least can't have
 

445
00:08:39,200 --> 00:08:41,589
character appear at least can't have
right so this is at least

446
00:08:41,589 --> 00:08:41,599
right so this is at least
 

447
00:08:41,599 --> 00:08:43,829
right so this is at least
every every one

448
00:08:43,829 --> 00:08:43,839
every every one
 

449
00:08:43,839 --> 00:08:44,630
every every one
no

450
00:08:44,630 --> 00:08:44,640
no
 

451
00:08:44,640 --> 00:08:47,030
no
no characters appear

452
00:08:47,030 --> 00:08:47,040
no characters appear
 

453
00:08:47,040 --> 00:08:50,230
no characters appear
at least k times good job then empty

454
00:08:50,230 --> 00:08:50,240
at least k times good job then empty
 

455
00:08:50,240 --> 00:08:51,430
at least k times good job then empty
string

456
00:08:51,430 --> 00:08:51,440
string
 

457
00:08:51,440 --> 00:08:52,870
string
yeah

458
00:08:52,870 --> 00:08:52,880
yeah
 

459
00:08:52,880 --> 00:08:56,070
yeah
yeah

460
00:08:56,070 --> 00:08:56,080

 

461
00:08:56,080 --> 00:08:57,990

okay so look because we're looking for

462
00:08:57,990 --> 00:08:58,000
okay so look because we're looking for
 

463
00:08:58,000 --> 00:08:59,829
okay so look because we're looking for
every every character they appear at

464
00:08:59,829 --> 00:08:59,839
every every character they appear at
 

465
00:08:59,839 --> 00:09:03,190
every every character they appear at
least k times then if we find out

466
00:09:03,190 --> 00:09:03,200
least k times then if we find out
 

467
00:09:03,200 --> 00:09:05,430
least k times then if we find out
if we find out

468
00:09:05,430 --> 00:09:05,440
if we find out
 

469
00:09:05,440 --> 00:09:08,790
if we find out
this character is appears less than 10

470
00:09:08,790 --> 00:09:08,800
this character is appears less than 10
 

471
00:09:08,800 --> 00:09:11,350
this character is appears less than 10
times right less than k times

472
00:09:11,350 --> 00:09:11,360
times right less than k times
 

473
00:09:11,360 --> 00:09:13,269
times right less than k times
so it cannot be included in the final

474
00:09:13,269 --> 00:09:13,279
so it cannot be included in the final
 

475
00:09:13,279 --> 00:09:15,110
so it cannot be included in the final
string so what does it mean

476
00:09:15,110 --> 00:09:15,120
string so what does it mean
 

477
00:09:15,120 --> 00:09:17,990
string so what does it mean
so it means that i i can we we can split

478
00:09:17,990 --> 00:09:18,000
so it means that i i can we we can split
 

479
00:09:18,000 --> 00:09:19,990
so it means that i i can we we can split
the the string into this character so

480
00:09:19,990 --> 00:09:20,000
the the string into this character so
 

481
00:09:20,000 --> 00:09:23,590
the the string into this character so
let's do this look

482
00:09:23,590 --> 00:09:23,600
let's do this look
 

483
00:09:23,600 --> 00:09:26,230
let's do this look
um maybe this is not very good number

484
00:09:26,230 --> 00:09:26,240
um maybe this is not very good number
 

485
00:09:26,240 --> 00:09:27,750
um maybe this is not very good number
let me look at another example okay

486
00:09:27,750 --> 00:09:27,760
let me look at another example okay
 

487
00:09:27,760 --> 00:09:28,870
let me look at another example okay
let's play

488
00:09:28,870 --> 00:09:28,880
let's play
 

489
00:09:28,880 --> 00:09:30,389
let's play
say a

490
00:09:30,389 --> 00:09:30,399
say a
 

491
00:09:30,399 --> 00:09:32,389
say a
k equals three okay

492
00:09:32,389 --> 00:09:32,399
k equals three okay
 

493
00:09:32,399 --> 00:09:39,750
k equals three okay
a b b c c c

494
00:09:39,750 --> 00:09:39,760

 

495
00:09:39,760 --> 00:09:41,910

what's the answer that appears what's

496
00:09:41,910 --> 00:09:41,920
what's the answer that appears what's
 

497
00:09:41,920 --> 00:09:44,150
what's the answer that appears what's
the what's this answer for every

498
00:09:44,150 --> 00:09:44,160
the what's this answer for every
 

499
00:09:44,160 --> 00:09:45,590
the what's this answer for every
substring the wrong substring that

500
00:09:45,590 --> 00:09:45,600
substring the wrong substring that
 

501
00:09:45,600 --> 00:09:46,550
substring the wrong substring that
appears

502
00:09:46,550 --> 00:09:46,560
appears
 

503
00:09:46,560 --> 00:09:48,070
appears
before each character in the substring

504
00:09:48,070 --> 00:09:48,080
before each character in the substring
 

505
00:09:48,080 --> 00:09:50,389
before each character in the substring
appears at least three times what's this

506
00:09:50,389 --> 00:09:50,399
appears at least three times what's this
 

507
00:09:50,399 --> 00:09:53,930
appears at least three times what's this
can you give me what's that um

508
00:09:53,930 --> 00:09:53,940
can you give me what's that um
 

509
00:09:53,940 --> 00:09:55,829
can you give me what's that um
[Music]

510
00:09:55,829 --> 00:09:55,839
[Music]
 

511
00:09:55,839 --> 00:09:57,509
[Music]
that's the only substring that uh

512
00:09:57,509 --> 00:09:57,519
that's the only substring that uh
 

513
00:09:57,519 --> 00:09:59,829
that's the only substring that uh
satisfy this requirement okay so look at

514
00:09:59,829 --> 00:09:59,839
satisfy this requirement okay so look at
 

515
00:09:59,839 --> 00:10:01,030
satisfy this requirement okay so look at
it

516
00:10:01,030 --> 00:10:01,040
it
 

517
00:10:01,040 --> 00:10:05,990
it
yeah yeah if what if

518
00:10:05,990 --> 00:10:06,000

 

519
00:10:06,000 --> 00:10:08,870

if if let's say let's say look there's

520
00:10:08,870 --> 00:10:08,880
if if let's say let's say look there's
 

521
00:10:08,880 --> 00:10:11,430
if if let's say let's say look there's
loads of a's

522
00:10:11,430 --> 00:10:11,440
loads of a's
 

523
00:10:11,440 --> 00:10:12,630
loads of a's
yeah that looks

524
00:10:12,630 --> 00:10:12,640
yeah that looks
 

525
00:10:12,640 --> 00:10:14,710
yeah that looks
like what i'm saying is that look if

526
00:10:14,710 --> 00:10:14,720
like what i'm saying is that look if
 

527
00:10:14,720 --> 00:10:16,710
like what i'm saying is that look if
look at this a

528
00:10:16,710 --> 00:10:16,720
look at this a
 

529
00:10:16,720 --> 00:10:19,910
look at this a
it's a what does it count how many it

530
00:10:19,910 --> 00:10:19,920
it's a what does it count how many it
 

531
00:10:19,920 --> 00:10:22,710
it's a what does it count how many it
appears in the whole string one it's so

532
00:10:22,710 --> 00:10:22,720
appears in the whole string one it's so
 

533
00:10:22,720 --> 00:10:25,670
appears in the whole string one it's so
it's less than k right yeah

534
00:10:25,670 --> 00:10:25,680
it's less than k right yeah
 

535
00:10:25,680 --> 00:10:28,150
it's less than k right yeah
so it's let's say okay so we can divide

536
00:10:28,150 --> 00:10:28,160
so it's let's say okay so we can divide
 

537
00:10:28,160 --> 00:10:31,590
so it's let's say okay so we can divide
this a into two half two times

538
00:10:31,590 --> 00:10:31,600
this a into two half two times
 

539
00:10:31,600 --> 00:10:33,910
this a into two half two times
right we can divide this into two

540
00:10:33,910 --> 00:10:33,920
right we can divide this into two
 

541
00:10:33,920 --> 00:10:35,269
right we can divide this into two
because what

542
00:10:35,269 --> 00:10:35,279
because what
 

543
00:10:35,279 --> 00:10:37,350
because what
what does it mean because we can we can

544
00:10:37,350 --> 00:10:37,360
what does it mean because we can we can
 

545
00:10:37,360 --> 00:10:39,269
what does it mean because we can we can
divide it by a look at this release

546
00:10:39,269 --> 00:10:39,279
divide it by a look at this release
 

547
00:10:39,279 --> 00:10:41,829
divide it by a look at this release
another a here and another a

548
00:10:41,829 --> 00:10:41,839
another a here and another a
 

549
00:10:41,839 --> 00:10:44,389
another a here and another a
and then a yeah okay

550
00:10:44,389 --> 00:10:44,399
and then a yeah okay
 

551
00:10:44,399 --> 00:10:45,590
and then a yeah okay
so so

552
00:10:45,590 --> 00:10:45,600
so so
 

553
00:10:45,600 --> 00:10:48,550
so so
look a as i said a cannot be included in

554
00:10:48,550 --> 00:10:48,560
look a as i said a cannot be included in
 

555
00:10:48,560 --> 00:10:50,389
look a as i said a cannot be included in
the final string right because it only

556
00:10:50,389 --> 00:10:50,399
the final string right because it only
 

557
00:10:50,399 --> 00:10:52,310
the final string right because it only
appears less than twice three times

558
00:10:52,310 --> 00:10:52,320
appears less than twice three times
 

559
00:10:52,320 --> 00:10:54,069
appears less than twice three times
right yeah

560
00:10:54,069 --> 00:10:54,079
right yeah
 

561
00:10:54,079 --> 00:10:56,150
right yeah
so we can split the string the entire

562
00:10:56,150 --> 00:10:56,160
so we can split the string the entire
 

563
00:10:56,160 --> 00:10:57,910
so we can split the string the entire
string in by a

564
00:10:57,910 --> 00:10:57,920
string in by a
 

565
00:10:57,920 --> 00:11:00,870
string in by a
so we have what we have b

566
00:11:00,870 --> 00:11:00,880
so we have what we have b
 

567
00:11:00,880 --> 00:11:02,550
so we have what we have b
c c c

568
00:11:02,550 --> 00:11:02,560
c c c
 

569
00:11:02,560 --> 00:11:06,069
c c c
d d e right we have we we have these

570
00:11:06,069 --> 00:11:06,079
d d e right we have we we have these
 

571
00:11:06,079 --> 00:11:07,430
d d e right we have we we have these
right

572
00:11:07,430 --> 00:11:07,440
right
 

573
00:11:07,440 --> 00:11:08,230
right
yeah

574
00:11:08,230 --> 00:11:08,240
yeah
 

575
00:11:08,240 --> 00:11:10,069
yeah
because a which you can just ignore it

576
00:11:10,069 --> 00:11:10,079
because a which you can just ignore it
 

577
00:11:10,079 --> 00:11:12,710
because a which you can just ignore it
right because it can be

578
00:11:12,710 --> 00:11:12,720
right because it can be
 

579
00:11:12,720 --> 00:11:15,829
right because it can be
included by the in the final string

580
00:11:15,829 --> 00:11:15,839
included by the in the final string
 

581
00:11:15,839 --> 00:11:17,990
included by the in the final string
right so b

582
00:11:17,990 --> 00:11:18,000
right so b
 

583
00:11:18,000 --> 00:11:20,550
right so b
so the answer will be the maximum of the

584
00:11:20,550 --> 00:11:20,560
so the answer will be the maximum of the
 

585
00:11:20,560 --> 00:11:23,269
so the answer will be the maximum of the
recursion we solve the left part so

586
00:11:23,269 --> 00:11:23,279
recursion we solve the left part so
 

587
00:11:23,279 --> 00:11:26,630
recursion we solve the left part so
solve this part right we have to get it

588
00:11:26,630 --> 00:11:26,640
solve this part right we have to get it
 

589
00:11:26,640 --> 00:11:28,389
solve this part right we have to get it
so we have a function to solve this

590
00:11:28,389 --> 00:11:28,399
so we have a function to solve this
 

591
00:11:28,399 --> 00:11:31,030
so we have a function to solve this
problem and then we now split more than

592
00:11:31,030 --> 00:11:31,040
problem and then we now split more than
 

593
00:11:31,040 --> 00:11:32,150
problem and then we now split more than
two

594
00:11:32,150 --> 00:11:32,160
two
 

595
00:11:32,160 --> 00:11:34,310
two
yeah yeah but what we talked about

596
00:11:34,310 --> 00:11:34,320
yeah yeah but what we talked about
 

597
00:11:34,320 --> 00:11:35,110
yeah yeah but what we talked about
more

598
00:11:35,110 --> 00:11:35,120
more
 

599
00:11:35,120 --> 00:11:35,910
more
than

600
00:11:35,910 --> 00:11:35,920
than
 

601
00:11:35,920 --> 00:11:38,630
than
two parts yeah even more than two pi

602
00:11:38,630 --> 00:11:38,640
two parts yeah even more than two pi
 

603
00:11:38,640 --> 00:11:40,550
two parts yeah even more than two pi
that's okay we for each part look we

604
00:11:40,550 --> 00:11:40,560
that's okay we for each part look we
 

605
00:11:40,560 --> 00:11:43,509
that's okay we for each part look we
have another but we have if that we say

606
00:11:43,509 --> 00:11:43,519
have another but we have if that we say
 

607
00:11:43,519 --> 00:11:45,829
have another but we have if that we say
we have k equals four okay and then we

608
00:11:45,829 --> 00:11:45,839
we have k equals four okay and then we
 

609
00:11:45,839 --> 00:11:47,670
we have k equals four okay and then we
have another a here

610
00:11:47,670 --> 00:11:47,680
have another a here
 

611
00:11:47,680 --> 00:11:49,990
have another a here
okay a a still appears three times and

612
00:11:49,990 --> 00:11:50,000
okay a a still appears three times and
 

613
00:11:50,000 --> 00:11:53,110
okay a a still appears three times and
then we can split into c c c and

614
00:11:53,110 --> 00:11:53,120
then we can split into c c c and
 

615
00:11:53,120 --> 00:11:55,670
then we can split into c c c and
and d e right yeah three part so what

616
00:11:55,670 --> 00:11:55,680
and d e right yeah three part so what
 

617
00:11:55,680 --> 00:11:57,350
and d e right yeah three part so what
does this mean the answer

618
00:11:57,350 --> 00:11:57,360
does this mean the answer
 

619
00:11:57,360 --> 00:11:58,790
does this mean the answer
the answer

620
00:11:58,790 --> 00:11:58,800
the answer
 

621
00:11:58,800 --> 00:12:01,829
the answer
the answer is the longest substring with

622
00:12:01,829 --> 00:12:01,839
the answer is the longest substring with
 

623
00:12:01,839 --> 00:12:03,910
the answer is the longest substring with
every character appearing at this k time

624
00:12:03,910 --> 00:12:03,920
every character appearing at this k time
 

625
00:12:03,920 --> 00:12:06,949
every character appearing at this k time
must be in this kind of yeah

626
00:12:06,949 --> 00:12:06,959
must be in this kind of yeah
 

627
00:12:06,959 --> 00:12:09,269
must be in this kind of yeah
in these we just need to solve these

628
00:12:09,269 --> 00:12:09,279
in these we just need to solve these
 

629
00:12:09,279 --> 00:12:11,430
in these we just need to solve these
three parts right and how to resolve

630
00:12:11,430 --> 00:12:11,440
three parts right and how to resolve
 

631
00:12:11,440 --> 00:12:12,629
three parts right and how to resolve
these three five we can do this

632
00:12:12,629 --> 00:12:12,639
these three five we can do this
 

633
00:12:12,639 --> 00:12:15,350
these three five we can do this
recursively right so we are dividing the

634
00:12:15,350 --> 00:12:15,360
recursively right so we are dividing the
 

635
00:12:15,360 --> 00:12:17,509
recursively right so we are dividing the
program bigger problem into the smaller

636
00:12:17,509 --> 00:12:17,519
program bigger problem into the smaller
 

637
00:12:17,519 --> 00:12:19,829
program bigger problem into the smaller
one

638
00:12:19,829 --> 00:12:19,839

 

639
00:12:19,839 --> 00:12:21,430

yeah

640
00:12:21,430 --> 00:12:21,440
yeah
 

641
00:12:21,440 --> 00:12:22,870
yeah
this makes sense and then the answer

642
00:12:22,870 --> 00:12:22,880
this makes sense and then the answer
 

643
00:12:22,880 --> 00:12:25,590
this makes sense and then the answer
will be the maximum of all the

644
00:12:25,590 --> 00:12:25,600
will be the maximum of all the
 

645
00:12:25,600 --> 00:12:27,030
will be the maximum of all the
the

646
00:12:27,030 --> 00:12:27,040
the
 

647
00:12:27,040 --> 00:12:29,829
the
the solution to the sub problem right

648
00:12:29,829 --> 00:12:29,839
the solution to the sub problem right
 

649
00:12:29,839 --> 00:12:31,030
the solution to the sub problem right
okay

650
00:12:31,030 --> 00:12:31,040
okay
 

651
00:12:31,040 --> 00:12:31,990
okay
yeah

652
00:12:31,990 --> 00:12:32,000
yeah
 

653
00:12:32,000 --> 00:12:34,470
yeah
if we can't find any character if we can

654
00:12:34,470 --> 00:12:34,480
if we can't find any character if we can
 

655
00:12:34,480 --> 00:12:37,350
if we can't find any character if we can
find any character less less than k then

656
00:12:37,350 --> 00:12:37,360
find any character less less than k then
 

657
00:12:37,360 --> 00:12:39,910
find any character less less than k then
if every character appearing at at least

658
00:12:39,910 --> 00:12:39,920
if every character appearing at at least
 

659
00:12:39,920 --> 00:12:41,910
if every character appearing at at least
k time then what's the

660
00:12:41,910 --> 00:12:41,920
k time then what's the
 

661
00:12:41,920 --> 00:12:42,949
k time then what's the
longest

662
00:12:42,949 --> 00:12:42,959
longest
 

663
00:12:42,959 --> 00:12:44,550
longest
substring

664
00:12:44,550 --> 00:12:44,560
substring
 

665
00:12:44,560 --> 00:12:46,710
substring
if we can't find if we can't divide it

666
00:12:46,710 --> 00:12:46,720
if we can't find if we can't divide it
 

667
00:12:46,720 --> 00:12:49,190
if we can't find if we can't divide it
into the one group so what's the

668
00:12:49,190 --> 00:12:49,200
into the one group so what's the
 

669
00:12:49,200 --> 00:12:50,710
into the one group so what's the
what's the

670
00:12:50,710 --> 00:12:50,720
what's the
 

671
00:12:50,720 --> 00:12:53,269
what's the
mean so if look if it goes through this

672
00:12:53,269 --> 00:12:53,279
mean so if look if it goes through this
 

673
00:12:53,279 --> 00:12:56,310
mean so if look if it goes through this
if k equals one okay at least one time a

674
00:12:56,310 --> 00:12:56,320
if k equals one okay at least one time a
 

675
00:12:56,320 --> 00:12:57,670
if k equals one okay at least one time a
b c d e

676
00:12:57,670 --> 00:12:57,680
b c d e
 

677
00:12:57,680 --> 00:13:00,629
b c d e
and g so what's the longest substring

678
00:13:00,629 --> 00:13:00,639
and g so what's the longest substring
 

679
00:13:00,639 --> 00:13:02,949
and g so what's the longest substring
of that's what i'm saying if you can't

680
00:13:02,949 --> 00:13:02,959
of that's what i'm saying if you can't
 

681
00:13:02,959 --> 00:13:04,870
of that's what i'm saying if you can't
find any invalid we call this invalid

682
00:13:04,870 --> 00:13:04,880
find any invalid we call this invalid
 

683
00:13:04,880 --> 00:13:06,710
find any invalid we call this invalid
character yeah if we can't find any

684
00:13:06,710 --> 00:13:06,720
character yeah if we can't find any
 

685
00:13:06,720 --> 00:13:08,150
character yeah if we can't find any
invalid character then we determine the

686
00:13:08,150 --> 00:13:08,160
invalid character then we determine the
 

687
00:13:08,160 --> 00:13:10,150
invalid character then we determine the
length of the current longest because

688
00:13:10,150 --> 00:13:10,160
length of the current longest because
 

689
00:13:10,160 --> 00:13:12,790
length of the current longest because
this is that's the requirement yeah

690
00:13:12,790 --> 00:13:12,800
this is that's the requirement yeah
 

691
00:13:12,800 --> 00:13:15,110
this is that's the requirement yeah
got it so first of all the question is

692
00:13:15,110 --> 00:13:15,120
got it so first of all the question is
 

693
00:13:15,120 --> 00:13:17,990
got it so first of all the question is
the accuracy simple first of all

694
00:13:17,990 --> 00:13:18,000
the accuracy simple first of all
 

695
00:13:18,000 --> 00:13:19,910
the accuracy simple first of all
we go through we use the counter to

696
00:13:19,910 --> 00:13:19,920
we go through we use the counter to
 

697
00:13:19,920 --> 00:13:21,509
we go through we use the counter to
count the number of characters and then

698
00:13:21,509 --> 00:13:21,519
count the number of characters and then
 

699
00:13:21,519 --> 00:13:23,750
count the number of characters and then
the number of times they appear right

700
00:13:23,750 --> 00:13:23,760
the number of times they appear right
 

701
00:13:23,760 --> 00:13:26,710
the number of times they appear right
and then we go through these invalid

702
00:13:26,710 --> 00:13:26,720
and then we go through these invalid
 

703
00:13:26,720 --> 00:13:29,990
and then we go through these invalid
invalid characters and divide you and

704
00:13:29,990 --> 00:13:30,000
invalid characters and divide you and
 

705
00:13:30,000 --> 00:13:32,389
invalid characters and divide you and
include these by these inventive

706
00:13:32,389 --> 00:13:32,399
include these by these inventive
 

707
00:13:32,399 --> 00:13:34,790
include these by these inventive
specifier using a split

708
00:13:34,790 --> 00:13:34,800
specifier using a split
 

709
00:13:34,800 --> 00:13:37,590
specifier using a split
slit by these characters

710
00:13:37,590 --> 00:13:37,600
slit by these characters
 

711
00:13:37,600 --> 00:13:40,150
slit by these characters
and then the answer will be the maximum

712
00:13:40,150 --> 00:13:40,160
and then the answer will be the maximum
 

713
00:13:40,160 --> 00:13:41,509
and then the answer will be the maximum
of all these

714
00:13:41,509 --> 00:13:41,519
of all these
 

715
00:13:41,519 --> 00:13:43,269
of all these
sub problems

716
00:13:43,269 --> 00:13:43,279
sub problems
 

717
00:13:43,279 --> 00:13:44,790
sub problems
okay

718
00:13:44,790 --> 00:13:44,800
okay
 

719
00:13:44,800 --> 00:13:46,389
okay
yeah

720
00:13:46,389 --> 00:13:46,399
yeah
 

721
00:13:46,399 --> 00:13:48,790
yeah
okay that's do it so it'll be easier to

722
00:13:48,790 --> 00:13:48,800
okay that's do it so it'll be easier to
 

723
00:13:48,800 --> 00:13:50,790
okay that's do it so it'll be easier to
write and then

724
00:13:50,790 --> 00:13:50,800
write and then
 

725
00:13:50,800 --> 00:13:53,910
write and then
this agreement is quite elegant right

726
00:13:53,910 --> 00:13:53,920
this agreement is quite elegant right
 

727
00:13:53,920 --> 00:13:57,189
this agreement is quite elegant right
define

728
00:13:57,189 --> 00:13:57,199

 

729
00:13:57,199 --> 00:13:59,910

sk

730
00:13:59,910 --> 00:13:59,920

 

731
00:13:59,920 --> 00:14:01,590

okay so how can we

732
00:14:01,590 --> 00:14:01,600
okay so how can we
 

733
00:14:01,600 --> 00:14:05,269
okay so how can we
check look if look c equals counter

734
00:14:05,269 --> 00:14:05,279
check look if look c equals counter
 

735
00:14:05,279 --> 00:14:07,110
check look if look c equals counter
first of all we check the counter as

736
00:14:07,110 --> 00:14:07,120
first of all we check the counter as
 

737
00:14:07,120 --> 00:14:07,990
first of all we check the counter as
right

738
00:14:07,990 --> 00:14:08,000
right
 

739
00:14:08,000 --> 00:14:09,350
right
right

740
00:14:09,350 --> 00:14:09,360
right
 

741
00:14:09,360 --> 00:14:10,629
right
and then we need to go through each

742
00:14:10,629 --> 00:14:10,639
and then we need to go through each
 

743
00:14:10,639 --> 00:14:12,949
and then we need to go through each
character for our

744
00:14:12,949 --> 00:14:12,959
character for our
 

745
00:14:12,959 --> 00:14:14,150
character for our
the

746
00:14:14,150 --> 00:14:14,160
the
 

747
00:14:14,160 --> 00:14:15,509
the
the

748
00:14:15,509 --> 00:14:15,519
the
 

749
00:14:15,519 --> 00:14:17,670
the
let's say the key and value we have key

750
00:14:17,670 --> 00:14:17,680
let's say the key and value we have key
 

751
00:14:17,680 --> 00:14:19,030
let's say the key and value we have key
and value

752
00:14:19,030 --> 00:14:19,040
and value
 

753
00:14:19,040 --> 00:14:20,150
and value
in

754
00:14:20,150 --> 00:14:20,160
in
 

755
00:14:20,160 --> 00:14:21,910
in
see the items

756
00:14:21,910 --> 00:14:21,920
see the items
 

757
00:14:21,920 --> 00:14:24,550
see the items
yes what's see the items see the items

758
00:14:24,550 --> 00:14:24,560
yes what's see the items see the items
 

759
00:14:24,560 --> 00:14:27,509
yes what's see the items see the items
return a pair a tuple key and value the

760
00:14:27,509 --> 00:14:27,519
return a pair a tuple key and value the
 

761
00:14:27,519 --> 00:14:30,389
return a pair a tuple key and value the
keys under the character right and the

762
00:14:30,389 --> 00:14:30,399
keys under the character right and the
 

763
00:14:30,399 --> 00:14:32,470
keys under the character right and the
value hour

764
00:14:32,470 --> 00:14:32,480
value hour
 

765
00:14:32,480 --> 00:14:35,110
value hour
and the value hour i said the key key

766
00:14:35,110 --> 00:14:35,120
and the value hour i said the key key
 

767
00:14:35,120 --> 00:14:36,949
and the value hour i said the key key
value player what's key keys number of

768
00:14:36,949 --> 00:14:36,959
value player what's key keys number of
 

769
00:14:36,959 --> 00:14:39,430
value player what's key keys number of
these keys and characters and the value

770
00:14:39,430 --> 00:14:39,440
these keys and characters and the value
 

771
00:14:39,440 --> 00:14:43,030
these keys and characters and the value
what are the values

772
00:14:43,030 --> 00:14:43,040

 

773
00:14:43,040 --> 00:14:44,790

in the counter remember what are we

774
00:14:44,790 --> 00:14:44,800
in the counter remember what are we
 

775
00:14:44,800 --> 00:14:46,389
in the counter remember what are we
trying to do here

776
00:14:46,389 --> 00:14:46,399
trying to do here
 

777
00:14:46,399 --> 00:14:48,470
trying to do here
we're trying to um

778
00:14:48,470 --> 00:14:48,480
we're trying to um
 

779
00:14:48,480 --> 00:14:50,870
we're trying to um
reinforce yeah i know what what i mean

780
00:14:50,870 --> 00:14:50,880
reinforce yeah i know what what i mean
 

781
00:14:50,880 --> 00:14:52,870
reinforce yeah i know what what i mean
is the counter if you use the counter

782
00:14:52,870 --> 00:14:52,880
is the counter if you use the counter
 

783
00:14:52,880 --> 00:14:54,310
is the counter if you use the counter
object

784
00:14:54,310 --> 00:14:54,320
object
 

785
00:14:54,320 --> 00:14:57,350
object
a a b c so what does it contain what

786
00:14:57,350 --> 00:14:57,360
a a b c so what does it contain what
 

787
00:14:57,360 --> 00:14:59,430
a a b c so what does it contain what
does it give us counter you kill a

788
00:14:59,430 --> 00:14:59,440
does it give us counter you kill a
 

789
00:14:59,440 --> 00:15:01,430
does it give us counter you kill a
dictionary

790
00:15:01,430 --> 00:15:01,440
dictionary
 

791
00:15:01,440 --> 00:15:02,389
dictionary
a

792
00:15:02,389 --> 00:15:02,399
a
 

793
00:15:02,399 --> 00:15:03,829
a
what

794
00:15:03,829 --> 00:15:03,839
what
 

795
00:15:03,839 --> 00:15:04,870
what
b

796
00:15:04,870 --> 00:15:04,880
b
 

797
00:15:04,880 --> 00:15:05,829
b
one

798
00:15:05,829 --> 00:15:05,839
one
 

799
00:15:05,839 --> 00:15:06,090
one
c

800
00:15:06,090 --> 00:15:06,100
c
 

801
00:15:06,100 --> 00:15:07,430
c
[Music]

802
00:15:07,430 --> 00:15:07,440
[Music]
 

803
00:15:07,440 --> 00:15:11,750
[Music]
one okay so key value you see the

804
00:15:11,750 --> 00:15:11,760
one okay so key value you see the
 

805
00:15:11,760 --> 00:15:13,990
one okay so key value you see the
yeah yeah yeah i know see the items

806
00:15:13,990 --> 00:15:14,000
yeah yeah yeah i know see the items
 

807
00:15:14,000 --> 00:15:15,829
yeah yeah yeah i know see the items
it return the tuper

808
00:15:15,829 --> 00:15:15,839
it return the tuper
 

809
00:15:15,839 --> 00:15:17,430
it return the tuper
a

810
00:15:17,430 --> 00:15:17,440
a
 

811
00:15:17,440 --> 00:15:19,350
a
two

812
00:15:19,350 --> 00:15:19,360
two
 

813
00:15:19,360 --> 00:15:21,110
two
b one

814
00:15:21,110 --> 00:15:21,120
b one
 

815
00:15:21,120 --> 00:15:25,110
b one
c one okay so k is these the keys so the

816
00:15:25,110 --> 00:15:25,120
c one okay so k is these the keys so the
 

817
00:15:25,120 --> 00:15:27,189
c one okay so k is these the keys so the
v what's the v

818
00:15:27,189 --> 00:15:27,199
v what's the v
 

819
00:15:27,199 --> 00:15:29,829
v what's the v
hey you haven't did the keyboard on the

820
00:15:29,829 --> 00:15:29,839
hey you haven't did the keyboard on the
 

821
00:15:29,839 --> 00:15:30,629
hey you haven't did the keyboard on the
c

822
00:15:30,629 --> 00:15:30,639
c
 

823
00:15:30,639 --> 00:15:32,230
c
yeah yeah i know i know what's what's

824
00:15:32,230 --> 00:15:32,240
yeah yeah i know i know what's what's
 

825
00:15:32,240 --> 00:15:34,629
yeah yeah i know i know what's what's
the value

826
00:15:34,629 --> 00:15:34,639
the value
 

827
00:15:34,639 --> 00:15:37,110
the value
what's this what does that mean um how

828
00:15:37,110 --> 00:15:37,120
what's this what does that mean um how
 

829
00:15:37,120 --> 00:15:39,189
what's this what does that mean um how
much time how many times they appear in

830
00:15:39,189 --> 00:15:39,199
much time how many times they appear in
 

831
00:15:39,199 --> 00:15:41,670
much time how many times they appear in
the original stream so these how many

832
00:15:41,670 --> 00:15:41,680
the original stream so these how many
 

833
00:15:41,680 --> 00:15:43,670
the original stream so these how many
times they appear in the string

834
00:15:43,670 --> 00:15:43,680
times they appear in the string
 

835
00:15:43,680 --> 00:15:45,269
times they appear in the string
okay so v

836
00:15:45,269 --> 00:15:45,279
okay so v
 

837
00:15:45,279 --> 00:15:46,470
okay so v
if v

838
00:15:46,470 --> 00:15:46,480
if v
 

839
00:15:46,480 --> 00:15:49,350
if v
smaller than k right what does that mean

840
00:15:49,350 --> 00:15:49,360
smaller than k right what does that mean
 

841
00:15:49,360 --> 00:15:51,990
smaller than k right what does that mean
yeah if we found this k

842
00:15:51,990 --> 00:15:52,000
yeah if we found this k
 

843
00:15:52,000 --> 00:15:55,269
yeah if we found this k
k character yeah this is an invalid

844
00:15:55,269 --> 00:15:55,279
k character yeah this is an invalid
 

845
00:15:55,279 --> 00:15:57,030
k character yeah this is an invalid
character because it appears less than k

846
00:15:57,030 --> 00:15:57,040
character because it appears less than k
 

847
00:15:57,040 --> 00:15:58,389
character because it appears less than k
times right

848
00:15:58,389 --> 00:15:58,399
times right
 

849
00:15:58,399 --> 00:16:00,870
times right
yeah now we need to do a split file yeah

850
00:16:00,870 --> 00:16:00,880
yeah now we need to do a split file yeah
 

851
00:16:00,880 --> 00:16:03,189
yeah now we need to do a split file yeah
we need we can specify it right so this

852
00:16:03,189 --> 00:16:03,199
we need we can specify it right so this
 

853
00:16:03,199 --> 00:16:04,710
we need we can specify it right so this
s dot

854
00:16:04,710 --> 00:16:04,720
s dot
 

855
00:16:04,720 --> 00:16:06,310
s dot
split

856
00:16:06,310 --> 00:16:06,320
split
 

857
00:16:06,320 --> 00:16:09,350
split
spring work kov

858
00:16:09,350 --> 00:16:09,360
spring work kov
 

859
00:16:09,360 --> 00:16:10,570
spring work kov
b

860
00:16:10,570 --> 00:16:10,580
b
 

861
00:16:10,580 --> 00:16:11,910
b
[Music]

862
00:16:11,910 --> 00:16:11,920
[Music]
 

863
00:16:11,920 --> 00:16:12,550
[Music]
k

864
00:16:12,550 --> 00:16:12,560
k
 

865
00:16:12,560 --> 00:16:14,870
k
k v is the value yeah we split by it and

866
00:16:14,870 --> 00:16:14,880
k v is the value yeah we split by it and
 

867
00:16:14,880 --> 00:16:16,949
k v is the value yeah we split by it and
then we're calling the cell fool right

868
00:16:16,949 --> 00:16:16,959
then we're calling the cell fool right
 

869
00:16:16,959 --> 00:16:18,150
then we're calling the cell fool right
right

870
00:16:18,150 --> 00:16:18,160
right
 

871
00:16:18,160 --> 00:16:19,350
right
split by

872
00:16:19,350 --> 00:16:19,360
split by
 

873
00:16:19,360 --> 00:16:20,829
split by
split by k

874
00:16:20,829 --> 00:16:20,839
split by k
 

875
00:16:20,839 --> 00:16:25,509
split by k
uh so we want to return we can return

876
00:16:25,509 --> 00:16:25,519
uh so we want to return we can return
 

877
00:16:25,519 --> 00:16:27,509
uh so we want to return we can return
maximum

878
00:16:27,509 --> 00:16:27,519
maximum
 

879
00:16:27,519 --> 00:16:28,629
maximum
maximum

880
00:16:28,629 --> 00:16:28,639
maximum
 

881
00:16:28,639 --> 00:16:31,269
maximum
of foo

882
00:16:31,269 --> 00:16:31,279
of foo
 

883
00:16:31,279 --> 00:16:32,230
of foo
i

884
00:16:32,230 --> 00:16:32,240
i
 

885
00:16:32,240 --> 00:16:34,470
i
yeah for i

886
00:16:34,470 --> 00:16:34,480
yeah for i
 

887
00:16:34,480 --> 00:16:37,829
yeah for i
so i'm calling it for i k

888
00:16:37,829 --> 00:16:37,839
so i'm calling it for i k
 

889
00:16:37,839 --> 00:16:38,870
so i'm calling it for i k
for

890
00:16:38,870 --> 00:16:38,880
for
 

891
00:16:38,880 --> 00:16:39,829
for
i

892
00:16:39,829 --> 00:16:39,839
i
 

893
00:16:39,839 --> 00:16:40,870
i
in

894
00:16:40,870 --> 00:16:40,880
in
 

895
00:16:40,880 --> 00:16:43,829
in
s dot split

896
00:16:43,829 --> 00:16:43,839
s dot split
 

897
00:16:43,839 --> 00:16:46,629
s dot split
strip spring one three

898
00:16:46,629 --> 00:16:46,639
strip spring one three
 

899
00:16:46,639 --> 00:16:48,949
strip spring one three
oh we use another case so

900
00:16:48,949 --> 00:16:48,959
oh we use another case so
 

901
00:16:48,959 --> 00:16:50,949
oh we use another case so
let's not use the k here

902
00:16:50,949 --> 00:16:50,959
let's not use the k here
 

903
00:16:50,959 --> 00:16:53,829
let's not use the k here
uh

904
00:16:53,829 --> 00:16:53,839

 

905
00:16:53,839 --> 00:16:56,389

c okay let's use the c okay

906
00:16:56,389 --> 00:16:56,399
c okay let's use the c okay
 

907
00:16:56,399 --> 00:16:58,069
c okay let's use the c okay
c

908
00:16:58,069 --> 00:16:58,079
c
 

909
00:16:58,079 --> 00:17:00,870
c
for i k is the number of times it needs

910
00:17:00,870 --> 00:17:00,880
for i k is the number of times it needs
 

911
00:17:00,880 --> 00:17:03,110
for i k is the number of times it needs
to be at least a k times then c is the

912
00:17:03,110 --> 00:17:03,120
to be at least a k times then c is the
 

913
00:17:03,120 --> 00:17:04,949
to be at least a k times then c is the
character so we want to split like c

914
00:17:04,949 --> 00:17:04,959
character so we want to split like c
 

915
00:17:04,959 --> 00:17:05,829
character so we want to split like c
right

916
00:17:05,829 --> 00:17:05,839
right
 

917
00:17:05,839 --> 00:17:07,350
right
right

918
00:17:07,350 --> 00:17:07,360
right
 

919
00:17:07,360 --> 00:17:10,870
right
so we we have s dot split by c it it you

920
00:17:10,870 --> 00:17:10,880
so we we have s dot split by c it it you
 

921
00:17:10,880 --> 00:17:12,949
so we we have s dot split by c it it you
will split the string by the inverticule

922
00:17:12,949 --> 00:17:12,959
will split the string by the inverticule
 

923
00:17:12,959 --> 00:17:14,949
will split the string by the inverticule
you actually remove the invalid

924
00:17:14,949 --> 00:17:14,959
you actually remove the invalid
 

925
00:17:14,959 --> 00:17:17,429
you actually remove the invalid
characters and then for each inver uh

926
00:17:17,429 --> 00:17:17,439
characters and then for each inver uh
 

927
00:17:17,439 --> 00:17:18,390
characters and then for each inver uh
each

928
00:17:18,390 --> 00:17:18,400
each
 

929
00:17:18,400 --> 00:17:20,150
each
remember if this is a yeah do you

930
00:17:20,150 --> 00:17:20,160
remember if this is a yeah do you
 

931
00:17:20,160 --> 00:17:23,110
remember if this is a yeah do you
remember a if only appears

932
00:17:23,110 --> 00:17:23,120
remember a if only appears
 

933
00:17:23,120 --> 00:17:25,590
remember a if only appears
up here if k equals three

934
00:17:25,590 --> 00:17:25,600
up here if k equals three
 

935
00:17:25,600 --> 00:17:28,309
up here if k equals three
a only appears twice look at this

936
00:17:28,309 --> 00:17:28,319
a only appears twice look at this
 

937
00:17:28,319 --> 00:17:31,350
a only appears twice look at this
right so s dot x split by a so we have

938
00:17:31,350 --> 00:17:31,360
right so s dot x split by a so we have
 

939
00:17:31,360 --> 00:17:33,750
right so s dot x split by a so we have
three groups and we want to find out the

940
00:17:33,750 --> 00:17:33,760
three groups and we want to find out the
 

941
00:17:33,760 --> 00:17:36,150
three groups and we want to find out the
answer

942
00:17:36,150 --> 00:17:36,160
answer
 

943
00:17:36,160 --> 00:17:38,549
answer
the maximum of the answer to these three

944
00:17:38,549 --> 00:17:38,559
the maximum of the answer to these three
 

945
00:17:38,559 --> 00:17:41,350
the maximum of the answer to these three
sub sub problems which is four i k for i

946
00:17:41,350 --> 00:17:41,360
sub sub problems which is four i k for i
 

947
00:17:41,360 --> 00:17:43,029
sub sub problems which is four i k for i
in that right

948
00:17:43,029 --> 00:17:43,039
in that right
 

949
00:17:43,039 --> 00:17:44,150
in that right
yeah

950
00:17:44,150 --> 00:17:44,160
yeah
 

951
00:17:44,160 --> 00:17:46,390
yeah
and if we can't find this we return what

952
00:17:46,390 --> 00:17:46,400
and if we can't find this we return what
 

953
00:17:46,400 --> 00:17:51,990
and if we can't find this we return what
retirement if we if retirement nothing

954
00:17:51,990 --> 00:17:52,000
retirement if we if retirement nothing
 

955
00:17:52,000 --> 00:17:54,630
retirement if we if retirement nothing
if we can't split if we we can't find

956
00:17:54,630 --> 00:17:54,640
if we can't split if we we can't find
 

957
00:17:54,640 --> 00:17:56,390
if we can't split if we we can't find
any character which is

958
00:17:56,390 --> 00:17:56,400
any character which is
 

959
00:17:56,400 --> 00:17:58,710
any character which is
less than k it means all characters are

960
00:17:58,710 --> 00:17:58,720
less than k it means all characters are
 

961
00:17:58,720 --> 00:18:01,190
less than k it means all characters are
appearing at most k at least k time so

962
00:18:01,190 --> 00:18:01,200
appearing at most k at least k time so
 

963
00:18:01,200 --> 00:18:03,110
appearing at most k at least k time so
we'll determine what

964
00:18:03,110 --> 00:18:03,120
we'll determine what
 

965
00:18:03,120 --> 00:18:04,470
we'll determine what
whatever

966
00:18:04,470 --> 00:18:04,480
whatever
 

967
00:18:04,480 --> 00:18:07,270
whatever
return what come on

968
00:18:07,270 --> 00:18:07,280
return what come on
 

969
00:18:07,280 --> 00:18:11,350
return what come on
i said k equals one and a b c d e

970
00:18:11,350 --> 00:18:11,360
i said k equals one and a b c d e
 

971
00:18:11,360 --> 00:18:14,710
i said k equals one and a b c d e
what's the longest i just say acid oh

972
00:18:14,710 --> 00:18:14,720
what's the longest i just say acid oh
 

973
00:18:14,720 --> 00:18:17,029
what's the longest i just say acid oh
wait so okay so look if we can't find

974
00:18:17,029 --> 00:18:17,039
wait so okay so look if we can't find
 

975
00:18:17,039 --> 00:18:19,830
wait so okay so look if we can't find
any character left is smaller than k

976
00:18:19,830 --> 00:18:19,840
any character left is smaller than k
 

977
00:18:19,840 --> 00:18:22,390
any character left is smaller than k
so it means at here at this point

978
00:18:22,390 --> 00:18:22,400
so it means at here at this point
 

979
00:18:22,400 --> 00:18:25,430
so it means at here at this point
the whole string appear satisfy this

980
00:18:25,430 --> 00:18:25,440
the whole string appear satisfy this
 

981
00:18:25,440 --> 00:18:26,870
the whole string appear satisfy this
requirement which is every character

982
00:18:26,870 --> 00:18:26,880
requirement which is every character
 

983
00:18:26,880 --> 00:18:28,470
requirement which is every character
appears at least k time so we need to

984
00:18:28,470 --> 00:18:28,480
appears at least k time so we need to
 

985
00:18:28,480 --> 00:18:30,630
appears at least k time so we need to
return the current length of the string

986
00:18:30,630 --> 00:18:30,640
return the current length of the string
 

987
00:18:30,640 --> 00:18:35,270
return the current length of the string
which is what length

988
00:18:35,270 --> 00:18:35,280

 

989
00:18:35,280 --> 00:18:36,710

okay

990
00:18:36,710 --> 00:18:36,720
okay
 

991
00:18:36,720 --> 00:18:39,510
okay
yeah remember the previous angle is o

992
00:18:39,510 --> 00:18:39,520
yeah remember the previous angle is o
 

993
00:18:39,520 --> 00:18:40,390
yeah remember the previous angle is o
and

994
00:18:40,390 --> 00:18:40,400
and
 

995
00:18:40,400 --> 00:18:44,390
and
qb right yeah and for this one it's one

996
00:18:44,390 --> 00:18:44,400
qb right yeah and for this one it's one
 

997
00:18:44,400 --> 00:18:46,789
qb right yeah and for this one it's one
it's o and

998
00:18:46,789 --> 00:18:46,799
it's o and
 

999
00:18:46,799 --> 00:18:48,630
it's o and
o and one square right is that one

1000
00:18:48,630 --> 00:18:48,640
o and one square right is that one
 

1001
00:18:48,640 --> 00:18:50,310
o and one square right is that one
square

1002
00:18:50,310 --> 00:18:50,320
square
 

1003
00:18:50,320 --> 00:18:52,789
square
it's kind of open square yeah yeah this

1004
00:18:52,789 --> 00:18:52,799
it's kind of open square yeah yeah this
 

1005
00:18:52,799 --> 00:18:53,590
it's kind of open square yeah yeah this
is

1006
00:18:53,590 --> 00:18:53,600
is
 

1007
00:18:53,600 --> 00:18:56,630
is
still quite slow but it's better it's

1008
00:18:56,630 --> 00:18:56,640
still quite slow but it's better it's
 

1009
00:18:56,640 --> 00:18:58,549
still quite slow but it's better it's
far better yeah is it

1010
00:18:58,549 --> 00:18:58,559
far better yeah is it
 

1011
00:18:58,559 --> 00:19:01,750
far better yeah is it
still quite slow

1012
00:19:01,750 --> 00:19:01,760
still quite slow
 

1013
00:19:01,760 --> 00:19:03,750
still quite slow
why is it quite slow uh

1014
00:19:03,750 --> 00:19:03,760
why is it quite slow uh
 

1015
00:19:03,760 --> 00:19:06,870
why is it quite slow uh
look we first of all look at abc's

1016
00:19:06,870 --> 00:19:06,880
look we first of all look at abc's
 

1017
00:19:06,880 --> 00:19:08,950
look we first of all look at abc's
first of a string we go through this one

1018
00:19:08,950 --> 00:19:08,960
first of a string we go through this one
 

1019
00:19:08,960 --> 00:19:12,549
first of a string we go through this one
time right and then we split by these

1020
00:19:12,549 --> 00:19:12,559
time right and then we split by these
 

1021
00:19:12,559 --> 00:19:15,190
time right and then we split by these
by this and we do this again and again

1022
00:19:15,190 --> 00:19:15,200
by this and we do this again and again
 

1023
00:19:15,200 --> 00:19:16,789
by this and we do this again and again
do this

1024
00:19:16,789 --> 00:19:16,799
do this
 

1025
00:19:16,799 --> 00:19:20,950
do this
right go this so

1026
00:19:20,950 --> 00:19:20,960

 

1027
00:19:20,960 --> 00:19:25,110

yeah

1028
00:19:25,110 --> 00:19:25,120

 

1029
00:19:25,120 --> 00:19:26,549

okay

1030
00:19:26,549 --> 00:19:26,559
okay
 

1031
00:19:26,559 --> 00:19:31,830
okay
actually i think i think it's on yes

1032
00:19:31,830 --> 00:19:31,840

 

1033
00:19:31,840 --> 00:19:33,430

yeah pretty good yeah

1034
00:19:33,430 --> 00:19:33,440
yeah pretty good yeah
 

1035
00:19:33,440 --> 00:19:35,909
yeah pretty good yeah
especially if it is the

1036
00:19:35,909 --> 00:19:35,919
especially if it is the
 

1037
00:19:35,919 --> 00:19:38,789
especially if it is the
s if it only contains the

1038
00:19:38,789 --> 00:19:38,799
s if it only contains the
 

1039
00:19:38,799 --> 00:19:41,110
s if it only contains the
for example if it contains the lowercase

1040
00:19:41,110 --> 00:19:41,120
for example if it contains the lowercase
 

1041
00:19:41,120 --> 00:19:42,470
for example if it contains the lowercase
characters

1042
00:19:42,470 --> 00:19:42,480
characters
 

1043
00:19:42,480 --> 00:19:43,190
characters
so

1044
00:19:43,190 --> 00:19:43,200
so
 

1045
00:19:43,200 --> 00:19:44,549
so
there's only

1046
00:19:44,549 --> 00:19:44,559
there's only
 

1047
00:19:44,559 --> 00:19:47,510
there's only
at most o 26 n if we can do this

1048
00:19:47,510 --> 00:19:47,520
at most o 26 n if we can do this
 

1049
00:19:47,520 --> 00:19:50,470
at most o 26 n if we can do this
alternative six then which is one right

1050
00:19:50,470 --> 00:19:50,480
alternative six then which is one right
 

1051
00:19:50,480 --> 00:19:52,070
alternative six then which is one right
yeah

1052
00:19:52,070 --> 00:19:52,080
yeah
 

1053
00:19:52,080 --> 00:19:53,430
yeah
okay

1054
00:19:53,430 --> 00:19:53,440
okay
 

1055
00:19:53,440 --> 00:19:55,430
okay
got it because these see those items yes

1056
00:19:55,430 --> 00:19:55,440
got it because these see those items yes
 

1057
00:19:55,440 --> 00:19:58,230
got it because these see those items yes
these are items groupie you only group

1058
00:19:58,230 --> 00:19:58,240
these are items groupie you only group
 

1059
00:19:58,240 --> 00:19:59,270
these are items groupie you only group
it

1060
00:19:59,270 --> 00:19:59,280
it
 

1061
00:19:59,280 --> 00:20:02,870
it
once right okay

1062
00:20:02,870 --> 00:20:02,880

 

1063
00:20:02,880 --> 00:20:04,710

okay so which one

1064
00:20:04,710 --> 00:20:04,720
okay so which one
 

1065
00:20:04,720 --> 00:20:07,590
okay so which one
do we um you can remember

1066
00:20:07,590 --> 00:20:07,600
do we um you can remember
 

1067
00:20:07,600 --> 00:20:09,909
do we um you can remember
none of them none of them okay so let me

1068
00:20:09,909 --> 00:20:09,919
none of them none of them okay so let me
 

1069
00:20:09,919 --> 00:20:10,870
none of them none of them okay so let me
let me

1070
00:20:10,870 --> 00:20:10,880
let me
 

1071
00:20:10,880 --> 00:20:13,029
let me
write this okay so again so can you

1072
00:20:13,029 --> 00:20:13,039
write this okay so again so can you
 

1073
00:20:13,039 --> 00:20:15,909
write this okay so again so can you
explain to me what's these dividends

1074
00:20:15,909 --> 00:20:15,919
explain to me what's these dividends
 

1075
00:20:15,919 --> 00:20:17,909
explain to me what's these dividends
divide and conquer we call it divide and

1076
00:20:17,909 --> 00:20:17,919
divide and conquer we call it divide and
 

1077
00:20:17,919 --> 00:20:28,560
divide and conquer we call it divide and
conquer

1078
00:20:28,560 --> 00:20:28,570

 

1079
00:20:28,570 --> 00:20:32,230

[Music]

1080
00:20:32,230 --> 00:20:32,240

 

1081
00:20:32,240 --> 00:20:34,310

look this is the dividing conga first of

1082
00:20:34,310 --> 00:20:34,320
look this is the dividing conga first of
 

1083
00:20:34,320 --> 00:20:37,110
look this is the dividing conga first of
all we divide this problem into a few

1084
00:20:37,110 --> 00:20:37,120
all we divide this problem into a few
 

1085
00:20:37,120 --> 00:20:38,470
all we divide this problem into a few
sub problems

1086
00:20:38,470 --> 00:20:38,480
sub problems
 

1087
00:20:38,480 --> 00:20:40,710
sub problems
and now we solve this it's like location

1088
00:20:40,710 --> 00:20:40,720
and now we solve this it's like location
 

1089
00:20:40,720 --> 00:20:41,909
and now we solve this it's like location
we solve these

1090
00:20:41,909 --> 00:20:41,919
we solve these
 

1091
00:20:41,919 --> 00:20:45,029
we solve these
smaller problems right

1092
00:20:45,029 --> 00:20:45,039
smaller problems right
 

1093
00:20:45,039 --> 00:20:47,190
smaller problems right
okay

1094
00:20:47,190 --> 00:20:47,200
okay
 

1095
00:20:47,200 --> 00:20:50,710
okay
does it make sense

1096
00:20:50,710 --> 00:20:50,720

 

1097
00:20:50,720 --> 00:20:51,750

yeah

1098
00:20:51,750 --> 00:20:51,760
yeah
 

1099
00:20:51,760 --> 00:20:53,110
yeah
yeah

1100
00:20:53,110 --> 00:20:53,120
yeah
 

1101
00:20:53,120 --> 00:20:55,990
yeah
so we have a bigger problem and then in

1102
00:20:55,990 --> 00:20:56,000
so we have a bigger problem and then in
 

1103
00:20:56,000 --> 00:20:58,149
so we have a bigger problem and then in
order to solve this bigger problem we

1104
00:20:58,149 --> 00:20:58,159
order to solve this bigger problem we
 

1105
00:20:58,159 --> 00:21:00,789
order to solve this bigger problem we
can divide it into three small problems

1106
00:21:00,789 --> 00:21:00,799
can divide it into three small problems
 

1107
00:21:00,799 --> 00:21:02,630
can divide it into three small problems
in order to solve this problem we can

1108
00:21:02,630 --> 00:21:02,640
in order to solve this problem we can
 

1109
00:21:02,640 --> 00:21:04,710
in order to solve this problem we can
further divide it that's what it means

1110
00:21:04,710 --> 00:21:04,720
further divide it that's what it means
 

1111
00:21:04,720 --> 00:21:06,390
further divide it that's what it means
the first of all how do we divide we

1112
00:21:06,390 --> 00:21:06,400
the first of all how do we divide we
 

1113
00:21:06,400 --> 00:21:08,470
the first of all how do we divide we
first of all find a

1114
00:21:08,470 --> 00:21:08,480
first of all find a
 

1115
00:21:08,480 --> 00:21:10,470
first of all find a
invalid character which is less than k

1116
00:21:10,470 --> 00:21:10,480
invalid character which is less than k
 

1117
00:21:10,480 --> 00:21:12,549
invalid character which is less than k
times right because we are based on this

1118
00:21:12,549 --> 00:21:12,559
times right because we are based on this
 

1119
00:21:12,559 --> 00:21:14,870
times right because we are based on this
assumption that this invalid character

1120
00:21:14,870 --> 00:21:14,880
assumption that this invalid character
 

1121
00:21:14,880 --> 00:21:17,750
assumption that this invalid character
cannot be included in any

1122
00:21:17,750 --> 00:21:17,760
cannot be included in any
 

1123
00:21:17,760 --> 00:21:20,390
cannot be included in any
substring right it cannot be included in

1124
00:21:20,390 --> 00:21:20,400
substring right it cannot be included in
 

1125
00:21:20,400 --> 00:21:22,789
substring right it cannot be included in
any substring that's why

1126
00:21:22,789 --> 00:21:22,799
any substring that's why
 

1127
00:21:22,799 --> 00:21:24,070
any substring that's why
that's why i want

1128
00:21:24,070 --> 00:21:24,080
that's why i want
 

1129
00:21:24,080 --> 00:21:27,350
that's why i want
that's why we can use it to as the split

1130
00:21:27,350 --> 00:21:27,360
that's why we can use it to as the split
 

1131
00:21:27,360 --> 00:21:29,510
that's why we can use it to as the split
so when we split look if this is a we

1132
00:21:29,510 --> 00:21:29,520
so when we split look if this is a we
 

1133
00:21:29,520 --> 00:21:30,470
so when we split look if this is a we
split it

1134
00:21:30,470 --> 00:21:30,480
split it
 

1135
00:21:30,480 --> 00:21:32,149
split it
a cannot be included in the longest

1136
00:21:32,149 --> 00:21:32,159
a cannot be included in the longest
 

1137
00:21:32,159 --> 00:21:33,909
a cannot be included in the longest
substring so i can take it out right if

1138
00:21:33,909 --> 00:21:33,919
substring so i can take it out right if
 

1139
00:21:33,919 --> 00:21:36,070
substring so i can take it out right if
any substring included a

1140
00:21:36,070 --> 00:21:36,080
any substring included a
 

1141
00:21:36,080 --> 00:21:37,669
any substring included a
what does it mean

1142
00:21:37,669 --> 00:21:37,679
what does it mean
 

1143
00:21:37,679 --> 00:21:40,390
what does it mean
it cannot be the longest substring right

1144
00:21:40,390 --> 00:21:40,400
it cannot be the longest substring right
 

1145
00:21:40,400 --> 00:21:42,830
it cannot be the longest substring right
it cannot be the substring that

1146
00:21:42,830 --> 00:21:42,840
it cannot be the substring that
 

1147
00:21:42,840 --> 00:21:45,430
it cannot be the substring that
uh let's satisfy this at the current so

1148
00:21:45,430 --> 00:21:45,440
uh let's satisfy this at the current so
 

1149
00:21:45,440 --> 00:21:47,110
uh let's satisfy this at the current so
we take it out

1150
00:21:47,110 --> 00:21:47,120
we take it out
 

1151
00:21:47,120 --> 00:21:49,750
we take it out
so the the answer could be the longest

1152
00:21:49,750 --> 00:21:49,760
so the the answer could be the longest
 

1153
00:21:49,760 --> 00:21:52,070
so the the answer could be the longest
option could be in three parts could be

1154
00:21:52,070 --> 00:21:52,080
option could be in three parts could be
 

1155
00:21:52,080 --> 00:21:54,070
option could be in three parts could be
in here could be in here or it could be

1156
00:21:54,070 --> 00:21:54,080
in here could be in here or it could be
 

1157
00:21:54,080 --> 00:21:56,789
in here could be in here or it could be
in here and look yeah we know how to

1158
00:21:56,789 --> 00:21:56,799
in here and look yeah we know how to
 

1159
00:21:56,799 --> 00:21:58,870
in here and look yeah we know how to
solve this smaller problem right and

1160
00:21:58,870 --> 00:21:58,880
solve this smaller problem right and
 

1161
00:21:58,880 --> 00:22:00,310
solve this smaller problem right and
here we can

1162
00:22:00,310 --> 00:22:00,320
here we can
 

1163
00:22:00,320 --> 00:22:03,029
here we can
until if we find us

1164
00:22:03,029 --> 00:22:03,039
until if we find us
 

1165
00:22:03,039 --> 00:22:06,149
until if we find us
if if we if we can't find any invalid

1166
00:22:06,149 --> 00:22:06,159
if if we if we can't find any invalid
 

1167
00:22:06,159 --> 00:22:07,830
if if we if we can't find any invalid
character we just return the length of

1168
00:22:07,830 --> 00:22:07,840
character we just return the length of
 

1169
00:22:07,840 --> 00:22:09,350
character we just return the length of
the substring right

1170
00:22:09,350 --> 00:22:09,360
the substring right
 

1171
00:22:09,360 --> 00:22:12,149
the substring right
got it and this is your location divide

1172
00:22:12,149 --> 00:22:12,159
got it and this is your location divide
 

1173
00:22:12,159 --> 00:22:14,390
got it and this is your location divide
and conquer yeah got it

1174
00:22:14,390 --> 00:22:14,400
and conquer yeah got it
 

1175
00:22:14,400 --> 00:22:16,390
and conquer yeah got it
okay good job that's all for today good

1176
00:22:16,390 --> 00:22:16,400
okay good job that's all for today good
 

1177
00:22:16,400 --> 00:22:19,720
okay good job that's all for today good
job bye

