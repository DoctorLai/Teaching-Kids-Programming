1
00:00:12,080 --> 00:00:13,110

yes good job

2
00:00:13,110 --> 00:00:13,120
yes good job
 

3
00:00:13,120 --> 00:00:14,870
yes good job
okay so remember yesterday we talked

4
00:00:14,870 --> 00:00:14,880
okay so remember yesterday we talked
 

5
00:00:14,880 --> 00:00:17,189
okay so remember yesterday we talked
about binary search tree

6
00:00:17,189 --> 00:00:17,199
about binary search tree
 

7
00:00:17,199 --> 00:00:19,029
about binary search tree
to search your value in the final search

8
00:00:19,029 --> 00:00:19,039
to search your value in the final search
 

9
00:00:19,039 --> 00:00:20,390
to search your value in the final search
too am right yeah

10
00:00:20,390 --> 00:00:20,400
too am right yeah
 

11
00:00:20,400 --> 00:00:21,990
too am right yeah
so can you tell me what's the binary

12
00:00:21,990 --> 00:00:22,000
so can you tell me what's the binary
 

13
00:00:22,000 --> 00:00:23,670
so can you tell me what's the binary
search tree it's like

14
00:00:23,670 --> 00:00:23,680
search tree it's like
 

15
00:00:23,680 --> 00:00:28,390
search tree it's like
a a tree with numbers yeah exactly

16
00:00:28,390 --> 00:00:28,400
a a tree with numbers yeah exactly
 

17
00:00:28,400 --> 00:00:30,020
a a tree with numbers yeah exactly
in circles

18
00:00:30,020 --> 00:00:30,030
in circles
 

19
00:00:30,030 --> 00:00:38,050
in circles
[Music]

20
00:00:38,050 --> 00:00:38,060

 

21
00:00:38,060 --> 00:00:43,030

[Music]

22
00:00:43,030 --> 00:00:43,040

 

23
00:00:43,040 --> 00:00:46,549

yes so today our job is to validate a

24
00:00:46,549 --> 00:00:46,559
yes so today our job is to validate a
 

25
00:00:46,559 --> 00:00:48,790
yes so today our job is to validate a
tree if it's a binary search tree so we

26
00:00:48,790 --> 00:00:48,800
tree if it's a binary search tree so we
 

27
00:00:48,800 --> 00:00:49,830
tree if it's a binary search tree so we
call it validate

28
00:00:49,830 --> 00:00:49,840
call it validate
 

29
00:00:49,840 --> 00:00:53,029
call it validate
the agreement to very valid date

30
00:00:53,029 --> 00:00:53,039
the agreement to very valid date
 

31
00:00:53,039 --> 00:00:56,069
the agreement to very valid date
binary surgery so given the tree we have

32
00:00:56,069 --> 00:00:56,079
binary surgery so given the tree we have
 

33
00:00:56,079 --> 00:00:57,029
binary surgery so given the tree we have
to value

34
00:00:57,029 --> 00:00:57,039
to value
 

35
00:00:57,039 --> 00:00:59,430
to value
to check if it's a very valid financial

36
00:00:59,430 --> 00:00:59,440
to check if it's a very valid financial
 

37
00:00:59,440 --> 00:01:01,510
to check if it's a very valid financial
stream a binary search tree

38
00:01:01,510 --> 00:01:01,520
stream a binary search tree
 

39
00:01:01,520 --> 00:01:04,070
stream a binary search tree
is a the first of all it's a binary tree

40
00:01:04,070 --> 00:01:04,080
is a the first of all it's a binary tree
 

41
00:01:04,080 --> 00:01:04,869
is a the first of all it's a binary tree
right

42
00:01:04,869 --> 00:01:04,879
right
 

43
00:01:04,879 --> 00:01:07,270
right
so the final search it has to be a

44
00:01:07,270 --> 00:01:07,280
so the final search it has to be a
 

45
00:01:07,280 --> 00:01:08,789
so the final search it has to be a
binary tree

46
00:01:08,789 --> 00:01:08,799
binary tree
 

47
00:01:08,799 --> 00:01:12,070
binary tree
yeah what's binary two

48
00:01:12,070 --> 00:01:12,080
yeah what's binary two
 

49
00:01:12,080 --> 00:01:14,390
yeah what's binary two
yeah we're done finding two yeah two two

50
00:01:14,390 --> 00:01:14,400
yeah we're done finding two yeah two two
 

51
00:01:14,400 --> 00:01:15,830
yeah we're done finding two yeah two two
kids left or right

52
00:01:15,830 --> 00:01:15,840
kids left or right
 

53
00:01:15,840 --> 00:01:18,550
kids left or right
the second one finance search three the

54
00:01:18,550 --> 00:01:18,560
the second one finance search three the
 

55
00:01:18,560 --> 00:01:19,429
the second one finance search three the
empty

56
00:01:19,429 --> 00:01:19,439
empty
 

57
00:01:19,439 --> 00:01:22,870
empty
empty tree is also a valid financial

58
00:01:22,870 --> 00:01:22,880
empty tree is also a valid financial
 

59
00:01:22,880 --> 00:01:24,469
empty tree is also a valid financial
street okay

60
00:01:24,469 --> 00:01:24,479
street okay
 

61
00:01:24,479 --> 00:01:27,109
street okay
third that's the one the important what

62
00:01:27,109 --> 00:01:27,119
third that's the one the important what
 

63
00:01:27,119 --> 00:01:27,590
third that's the one the important what
about

64
00:01:27,590 --> 00:01:27,600
about
 

65
00:01:27,600 --> 00:01:30,469
about
this just one number it's a fine

66
00:01:30,469 --> 00:01:30,479
this just one number it's a fine
 

67
00:01:30,479 --> 00:01:31,429
this just one number it's a fine
research tree

68
00:01:31,429 --> 00:01:31,439
research tree
 

69
00:01:31,439 --> 00:01:34,390
research tree
it it's a very it's a final tree it's

70
00:01:34,390 --> 00:01:34,400
it it's a very it's a final tree it's
 

71
00:01:34,400 --> 00:01:35,990
it it's a very it's a final tree it's
also a fine research tree because it's

72
00:01:35,990 --> 00:01:36,000
also a fine research tree because it's
 

73
00:01:36,000 --> 00:01:38,830
also a fine research tree because it's
valid right

74
00:01:38,830 --> 00:01:38,840

 

75
00:01:38,840 --> 00:01:41,270

yeah apparently

76
00:01:41,270 --> 00:01:41,280
yeah apparently
 

77
00:01:41,280 --> 00:01:44,710
yeah apparently
thick this is okay and also the third to

78
00:01:44,710 --> 00:01:44,720
thick this is okay and also the third to
 

79
00:01:44,720 --> 00:01:46,469
thick this is okay and also the third to
do very important

80
00:01:46,469 --> 00:01:46,479
do very important
 

81
00:01:46,479 --> 00:01:50,149
do very important
which is the root value has to bigger

82
00:01:50,149 --> 00:01:50,159
which is the root value has to bigger
 

83
00:01:50,159 --> 00:01:51,910
which is the root value has to bigger
than

84
00:01:51,910 --> 00:01:51,920
than
 

85
00:01:51,920 --> 00:01:55,590
than
the left

86
00:01:55,590 --> 00:01:55,600
the left
 

87
00:01:55,600 --> 00:01:58,069
the left
no no this is one node is the thing uh a

88
00:01:58,069 --> 00:01:58,079
no no this is one node is the thing uh a
 

89
00:01:58,079 --> 00:02:00,149
no no this is one node is the thing uh a
valid binary and final assertion

90
00:02:00,149 --> 00:02:00,159
valid binary and final assertion
 

91
00:02:00,159 --> 00:02:02,469
valid binary and final assertion
and then and the loot has two smaller

92
00:02:02,469 --> 00:02:02,479
and then and the loot has two smaller
 

93
00:02:02,479 --> 00:02:03,990
and then and the loot has two smaller
than one

94
00:02:03,990 --> 00:02:04,000
than one
 

95
00:02:04,000 --> 00:02:07,270
than one
the right the right yes okay is this a

96
00:02:07,270 --> 00:02:07,280
the right the right yes okay is this a
 

97
00:02:07,280 --> 00:02:07,990
the right the right yes okay is this a
final research

98
00:02:07,990 --> 00:02:08,000
final research
 

99
00:02:08,000 --> 00:02:11,029
final research
tree no

100
00:02:11,029 --> 00:02:11,039
tree no
 

101
00:02:11,039 --> 00:02:14,150
tree no
why yes yes because this is bigger than

102
00:02:14,150 --> 00:02:14,160
why yes yes because this is bigger than
 

103
00:02:14,160 --> 00:02:14,710
why yes yes because this is bigger than
river

104
00:02:14,710 --> 00:02:14,720
river
 

105
00:02:14,720 --> 00:02:16,790
river
that's right okay remember yesterday we

106
00:02:16,790 --> 00:02:16,800
that's right okay remember yesterday we
 

107
00:02:16,800 --> 00:02:18,869
that's right okay remember yesterday we
talked about certain nodes in binary

108
00:02:18,869 --> 00:02:18,879
talked about certain nodes in binary
 

109
00:02:18,879 --> 00:02:19,910
talked about certain nodes in binary
street first tree

110
00:02:19,910 --> 00:02:19,920
street first tree
 

111
00:02:19,920 --> 00:02:22,710
street first tree
if it's a binary search tree like one

112
00:02:22,710 --> 00:02:22,720
if it's a binary search tree like one
 

113
00:02:22,720 --> 00:02:23,990
if it's a binary search tree like one
zero

114
00:02:23,990 --> 00:02:24,000
zero
 

115
00:02:24,000 --> 00:02:27,510
zero
two three and then

116
00:02:27,510 --> 00:02:27,520
two three and then
 

117
00:02:27,520 --> 00:02:31,030
two three and then
let's minus one and then maybe one

118
00:02:31,030 --> 00:02:31,040
let's minus one and then maybe one
 

119
00:02:31,040 --> 00:02:34,390
let's minus one and then maybe one
no it can't be one can it be two

120
00:02:34,390 --> 00:02:34,400
no it can't be one can it be two
 

121
00:02:34,400 --> 00:02:37,750
no it can't be one can it be two
no no because look this is this

122
00:02:37,750 --> 00:02:37,760
no no because look this is this
 

123
00:02:37,760 --> 00:02:40,949
no no because look this is this
is smaller than one but this is small

124
00:02:40,949 --> 00:02:40,959
is smaller than one but this is small
 

125
00:02:40,959 --> 00:02:43,589
is smaller than one but this is small
bigger than one so this can only be like

126
00:02:43,589 --> 00:02:43,599
bigger than one so this can only be like
 

127
00:02:43,599 --> 00:02:44,949
bigger than one so this can only be like
0.5

128
00:02:44,949 --> 00:02:44,959
0.5
 

129
00:02:44,959 --> 00:02:47,830
0.5
got it because 0.5 bigger than zero

130
00:02:47,830 --> 00:02:47,840
got it because 0.5 bigger than zero
 

131
00:02:47,840 --> 00:02:49,270
got it because 0.5 bigger than zero
smaller than one okay

132
00:02:49,270 --> 00:02:49,280
smaller than one okay
 

133
00:02:49,280 --> 00:02:52,550
smaller than one okay
so if you want to locate 0.5

134
00:02:52,550 --> 00:02:52,560
so if you want to locate 0.5
 

135
00:02:52,560 --> 00:02:56,229
so if you want to locate 0.5
is it smaller than one yes

136
00:02:56,229 --> 00:02:56,239
is it smaller than one yes
 

137
00:02:56,239 --> 00:02:59,990
is it smaller than one yes
so go left or right is it smaller than

138
00:02:59,990 --> 00:03:00,000
so go left or right is it smaller than
 

139
00:03:00,000 --> 00:03:03,350
so go left or right is it smaller than
zero

140
00:03:03,350 --> 00:03:03,360

 

141
00:03:03,360 --> 00:03:06,550

circle y or get left

142
00:03:06,550 --> 00:03:06,560
circle y or get left
 

143
00:03:06,560 --> 00:03:08,869
circle y or get left
but yeah okay we found it so the

144
00:03:08,869 --> 00:03:08,879
but yeah okay we found it so the
 

145
00:03:08,879 --> 00:03:13,030
but yeah okay we found it so the
complexity is what

146
00:03:13,030 --> 00:03:13,040

 

147
00:03:13,040 --> 00:03:15,509

yeah because it because n is the number

148
00:03:15,509 --> 00:03:15,519
yeah because it because n is the number
 

149
00:03:15,519 --> 00:03:16,949
yeah because it because n is the number
of the notes in the tree

150
00:03:16,949 --> 00:03:16,959
of the notes in the tree
 

151
00:03:16,959 --> 00:03:19,750
of the notes in the tree
and on average if it's this highly

152
00:03:19,750 --> 00:03:19,760
and on average if it's this highly
 

153
00:03:19,760 --> 00:03:20,309
and on average if it's this highly
balanced

154
00:03:20,309 --> 00:03:20,319
balanced
 

155
00:03:20,319 --> 00:03:23,110
balanced
what i mean high dependence is is that

156
00:03:23,110 --> 00:03:23,120
what i mean high dependence is is that
 

157
00:03:23,120 --> 00:03:23,430
what i mean high dependence is is that
the

158
00:03:23,430 --> 00:03:23,440
the
 

159
00:03:23,440 --> 00:03:25,190
the
difference the maximum difference

160
00:03:25,190 --> 00:03:25,200
difference the maximum difference
 

161
00:03:25,200 --> 00:03:28,070
difference the maximum difference
between any left tree or right tree

162
00:03:28,070 --> 00:03:28,080
between any left tree or right tree
 

163
00:03:28,080 --> 00:03:31,509
between any left tree or right tree
is at most one okay this is

164
00:03:31,509 --> 00:03:31,519
is at most one okay this is
 

165
00:03:31,519 --> 00:03:35,190
is at most one okay this is
uh is this uh uh valid

166
00:03:35,190 --> 00:03:35,200
uh is this uh uh valid
 

167
00:03:35,200 --> 00:03:37,990
uh is this uh uh valid
uh is it is a verified research tree yes

168
00:03:37,990 --> 00:03:38,000
uh is it is a verified research tree yes
 

169
00:03:38,000 --> 00:03:38,390
uh is it is a verified research tree yes
yes

170
00:03:38,390 --> 00:03:38,400
yes
 

171
00:03:38,400 --> 00:03:41,509
yes
yes is this a highly balanced uh balance

172
00:03:41,509 --> 00:03:41,519
yes is this a highly balanced uh balance
 

173
00:03:41,519 --> 00:03:42,869
yes is this a highly balanced uh balance
of necessity

174
00:03:42,869 --> 00:03:42,879
of necessity
 

175
00:03:42,879 --> 00:03:46,309
of necessity
no because look the difference is

176
00:03:46,309 --> 00:03:46,319
no because look the difference is
 

177
00:03:46,319 --> 00:03:49,910
no because look the difference is
this is the right no right now is

178
00:03:49,910 --> 00:03:49,920
this is the right no right now is
 

179
00:03:49,920 --> 00:03:51,990
this is the right no right now is
there's no right or but there are two so

180
00:03:51,990 --> 00:03:52,000
there's no right or but there are two so
 

181
00:03:52,000 --> 00:03:53,830
there's no right or but there are two so
the difference is more than one so okay

182
00:03:53,830 --> 00:03:53,840
the difference is more than one so okay
 

183
00:03:53,840 --> 00:03:54,949
the difference is more than one so okay
this is not

184
00:03:54,949 --> 00:03:54,959
this is not
 

185
00:03:54,959 --> 00:03:57,750
this is not
okay so now we given a tree we want to

186
00:03:57,750 --> 00:03:57,760
okay so now we given a tree we want to
 

187
00:03:57,760 --> 00:04:00,630
okay so now we given a tree we want to
find out if it's a binary search tree

188
00:04:00,630 --> 00:04:00,640
find out if it's a binary search tree
 

189
00:04:00,640 --> 00:04:03,429
find out if it's a binary search tree
so we can do it this way if we define

190
00:04:03,429 --> 00:04:03,439
so we can do it this way if we define
 

191
00:04:03,439 --> 00:04:04,149
so we can do it this way if we define
the window

192
00:04:04,149 --> 00:04:04,159
the window
 

193
00:04:04,159 --> 00:04:07,270
the window
like a minimum and maximum right yeah if

194
00:04:07,270 --> 00:04:07,280
like a minimum and maximum right yeah if
 

195
00:04:07,280 --> 00:04:08,470
like a minimum and maximum right yeah if
we know this minimum

196
00:04:08,470 --> 00:04:08,480
we know this minimum
 

197
00:04:08,480 --> 00:04:12,869
we know this minimum
maximum right and if a tree

198
00:04:12,869 --> 00:04:12,879
maximum right and if a tree
 

199
00:04:12,879 --> 00:04:15,750
maximum right and if a tree
is if a node value has has the value

200
00:04:15,750 --> 00:04:15,760
is if a node value has has the value
 

201
00:04:15,760 --> 00:04:17,590
is if a node value has has the value
outside this window and we know it's

202
00:04:17,590 --> 00:04:17,600
outside this window and we know it's
 

203
00:04:17,600 --> 00:04:19,830
outside this window and we know it's
invalid right you can't see the window

204
00:04:19,830 --> 00:04:19,840
invalid right you can't see the window
 

205
00:04:19,840 --> 00:04:20,710
invalid right you can't see the window
yeah the window

206
00:04:20,710 --> 00:04:20,720
yeah the window
 

207
00:04:20,720 --> 00:04:23,110
yeah the window
the maximum the minimum at the beginning

208
00:04:23,110 --> 00:04:23,120
the maximum the minimum at the beginning
 

209
00:04:23,120 --> 00:04:23,830
the maximum the minimum at the beginning
we just passed

210
00:04:23,830 --> 00:04:23,840
we just passed
 

211
00:04:23,840 --> 00:04:26,550
we just passed
infinity the minimum infinity and the

212
00:04:26,550 --> 00:04:26,560
infinity the minimum infinity and the
 

213
00:04:26,560 --> 00:04:28,390
infinity the minimum infinity and the
maximum infinity yeah

214
00:04:28,390 --> 00:04:28,400
maximum infinity yeah
 

215
00:04:28,400 --> 00:04:30,710
maximum infinity yeah
very rapid number very very small number

216
00:04:30,710 --> 00:04:30,720
very rapid number very very small number
 

217
00:04:30,720 --> 00:04:31,430
very rapid number very very small number
okay

218
00:04:31,430 --> 00:04:31,440
okay
 

219
00:04:31,440 --> 00:04:35,510
okay
and then when we go look this is one

220
00:04:35,510 --> 00:04:35,520
and then when we go look this is one
 

221
00:04:35,520 --> 00:04:38,790
and then when we go look this is one
this is i don't know this is something

222
00:04:38,790 --> 00:04:38,800
this is i don't know this is something
 

223
00:04:38,800 --> 00:04:41,189
this is i don't know this is something
yeah and this is something okay so the

224
00:04:41,189 --> 00:04:41,199
yeah and this is something okay so the
 

225
00:04:41,199 --> 00:04:42,230
yeah and this is something okay so the
beginning is

226
00:04:42,230 --> 00:04:42,240
beginning is
 

227
00:04:42,240 --> 00:04:45,110
beginning is
minus infinity and then pick it bigger

228
00:04:45,110 --> 00:04:45,120
minus infinity and then pick it bigger
 

229
00:04:45,120 --> 00:04:47,110
minus infinity and then pick it bigger
than infinity

230
00:04:47,110 --> 00:04:47,120
than infinity
 

231
00:04:47,120 --> 00:04:50,390
than infinity
so if we go right go left so

232
00:04:50,390 --> 00:04:50,400
so if we go right go left so
 

233
00:04:50,400 --> 00:04:53,510
so if we go right go left so
all the values in the left hand tree

234
00:04:53,510 --> 00:04:53,520
all the values in the left hand tree
 

235
00:04:53,520 --> 00:04:57,350
all the values in the left hand tree
we have no values smaller than one right

236
00:04:57,350 --> 00:04:57,360
we have no values smaller than one right
 

237
00:04:57,360 --> 00:05:00,469
we have no values smaller than one right
yeah that means the right window

238
00:05:00,469 --> 00:05:00,479
yeah that means the right window
 

239
00:05:00,479 --> 00:05:03,990
yeah that means the right window
is one right right the left window is

240
00:05:03,990 --> 00:05:04,000
is one right right the left window is
 

241
00:05:04,000 --> 00:05:05,909
is one right right the left window is
still infinity all right

242
00:05:05,909 --> 00:05:05,919
still infinity all right
 

243
00:05:05,919 --> 00:05:09,270
still infinity all right
yeah if you go left we update the right

244
00:05:09,270 --> 00:05:09,280
yeah if you go left we update the right
 

245
00:05:09,280 --> 00:05:11,990
yeah if you go left we update the right
the upper bound because it can't have

246
00:05:11,990 --> 00:05:12,000
the upper bound because it can't have
 

247
00:05:12,000 --> 00:05:12,550
the upper bound because it can't have
more than

248
00:05:12,550 --> 00:05:12,560
more than
 

249
00:05:12,560 --> 00:05:15,670
more than
you can't have values more than one yes

250
00:05:15,670 --> 00:05:15,680
you can't have values more than one yes
 

251
00:05:15,680 --> 00:05:20,629
you can't have values more than one yes
if we go to the right what would we do

252
00:05:20,629 --> 00:05:20,639

 

253
00:05:20,639 --> 00:05:23,590

the small bound is one right because you

254
00:05:23,590 --> 00:05:23,600
the small bound is one right because you
 

255
00:05:23,600 --> 00:05:24,390
the small bound is one right because you
can't have more

256
00:05:24,390 --> 00:05:24,400
can't have more
 

257
00:05:24,400 --> 00:05:27,270
can't have more
value smaller than one right so it's one

258
00:05:27,270 --> 00:05:27,280
value smaller than one right so it's one
 

259
00:05:27,280 --> 00:05:28,150
value smaller than one right so it's one
and infinity

260
00:05:28,150 --> 00:05:28,160
and infinity
 

261
00:05:28,160 --> 00:05:31,110
and infinity
all right so every time we update the

262
00:05:31,110 --> 00:05:31,120
all right so every time we update the
 

263
00:05:31,120 --> 00:05:31,510
all right so every time we update the
win

264
00:05:31,510 --> 00:05:31,520
win
 

265
00:05:31,520 --> 00:05:35,590
win
and max and then we check we recursively

266
00:05:35,590 --> 00:05:35,600
and max and then we check we recursively
 

267
00:05:35,600 --> 00:05:37,590
and max and then we check we recursively
remember verification yeah calling

268
00:05:37,590 --> 00:05:37,600
remember verification yeah calling
 

269
00:05:37,600 --> 00:05:39,430
remember verification yeah calling
itself in the lesson one right

270
00:05:39,430 --> 00:05:39,440
itself in the lesson one right
 

271
00:05:39,440 --> 00:05:41,270
itself in the lesson one right
calling itself recursively update the

272
00:05:41,270 --> 00:05:41,280
calling itself recursively update the
 

273
00:05:41,280 --> 00:05:42,550
calling itself recursively update the
value to

274
00:05:42,550 --> 00:05:42,560
value to
 

275
00:05:42,560 --> 00:05:44,710
value to
update the windows and just check if

276
00:05:44,710 --> 00:05:44,720
update the windows and just check if
 

277
00:05:44,720 --> 00:05:46,629
update the windows and just check if
it's a valid binary search sheet

278
00:05:46,629 --> 00:05:46,639
it's a valid binary search sheet
 

279
00:05:46,639 --> 00:05:48,390
it's a valid binary search sheet
okay so let's do the coding it will be

280
00:05:48,390 --> 00:05:48,400
okay so let's do the coding it will be
 

281
00:05:48,400 --> 00:05:50,629
okay so let's do the coding it will be
quick okay you can tell me

282
00:05:50,629 --> 00:05:50,639
quick okay you can tell me
 

283
00:05:50,639 --> 00:05:52,950
quick okay you can tell me
okay you can tell me what's right so

284
00:05:52,950 --> 00:05:52,960
okay you can tell me what's right so
 

285
00:05:52,960 --> 00:05:54,390
okay you can tell me what's right so
first first of all

286
00:05:54,390 --> 00:05:54,400
first first of all
 

287
00:05:54,400 --> 00:05:57,270
first first of all
five minutes away yeah yeah i know so

288
00:05:57,270 --> 00:05:57,280
five minutes away yeah yeah i know so
 

289
00:05:57,280 --> 00:05:57,590
five minutes away yeah yeah i know so
what

290
00:05:57,590 --> 00:05:57,600
what
 

291
00:05:57,600 --> 00:06:00,870
what
uh what's your way right now

292
00:06:00,870 --> 00:06:00,880
uh what's your way right now
 

293
00:06:00,880 --> 00:06:03,909
uh what's your way right now
and what's next

294
00:06:03,909 --> 00:06:03,919

 

295
00:06:03,919 --> 00:06:08,550

oh check bst let's call it and it takes

296
00:06:08,550 --> 00:06:08,560
oh check bst let's call it and it takes
 

297
00:06:08,560 --> 00:06:11,189
oh check bst let's call it and it takes
root load of rotary and then let's call

298
00:06:11,189 --> 00:06:11,199
root load of rotary and then let's call
 

299
00:06:11,199 --> 00:06:12,710
root load of rotary and then let's call
it

300
00:06:12,710 --> 00:06:12,720
it
 

301
00:06:12,720 --> 00:06:16,309
it
mean and let's call it max okay

302
00:06:16,309 --> 00:06:16,319
mean and let's call it max okay
 

303
00:06:16,319 --> 00:06:19,990
mean and let's call it max okay
min and max yeah

304
00:06:19,990 --> 00:06:20,000
min and max yeah
 

305
00:06:20,000 --> 00:06:22,550
min and max yeah
so we need to check the base cases if

306
00:06:22,550 --> 00:06:22,560
so we need to check the base cases if
 

307
00:06:22,560 --> 00:06:26,309
so we need to check the base cases if
the root is empty what should we do

308
00:06:26,309 --> 00:06:26,319

 

309
00:06:26,319 --> 00:06:31,110

tell me what to do okay if root

310
00:06:31,110 --> 00:06:31,120
tell me what to do okay if root
 

311
00:06:31,120 --> 00:06:35,110
tell me what to do okay if root
is noun okay or you can simply write if

312
00:06:35,110 --> 00:06:35,120
is noun okay or you can simply write if
 

313
00:06:35,120 --> 00:06:35,590
is noun okay or you can simply write if
not

314
00:06:35,590 --> 00:06:35,600
not
 

315
00:06:35,600 --> 00:06:38,070
not
good it's the same thing if not blue or

316
00:06:38,070 --> 00:06:38,080
good it's the same thing if not blue or
 

317
00:06:38,080 --> 00:06:38,629
good it's the same thing if not blue or
if

318
00:06:38,629 --> 00:06:38,639
if
 

319
00:06:38,639 --> 00:06:41,110
if
loot is long it's the same thing return

320
00:06:41,110 --> 00:06:41,120
loot is long it's the same thing return
 

321
00:06:41,120 --> 00:06:42,950
loot is long it's the same thing return
what

322
00:06:42,950 --> 00:06:42,960
what
 

323
00:06:42,960 --> 00:06:46,309
what
yes be confident yeah return true not

324
00:06:46,309 --> 00:06:46,319
yes be confident yeah return true not
 

325
00:06:46,319 --> 00:06:47,110
yes be confident yeah return true not
return true

326
00:06:47,110 --> 00:06:47,120
return true
 

327
00:06:47,120 --> 00:06:49,440
return true
return true okay

328
00:06:49,440 --> 00:06:49,450
return true okay
 

329
00:06:49,450 --> 00:06:51,029
return true okay
[Music]

330
00:06:51,029 --> 00:06:51,039
[Music]
 

331
00:06:51,039 --> 00:06:52,710
[Music]
okay now then we need to check the value

332
00:06:52,710 --> 00:06:52,720
okay now then we need to check the value
 

333
00:06:52,720 --> 00:06:56,309
okay now then we need to check the value
if it's inside a bench right

334
00:06:56,309 --> 00:06:56,319

 

335
00:06:56,319 --> 00:06:59,430

look look if

336
00:06:59,430 --> 00:06:59,440
look look if
 

337
00:06:59,440 --> 00:07:02,629
look look if
not stop value if it's

338
00:07:02,629 --> 00:07:02,639
not stop value if it's
 

339
00:07:02,639 --> 00:07:05,990
not stop value if it's
smaller than mean or

340
00:07:05,990 --> 00:07:06,000
smaller than mean or
 

341
00:07:06,000 --> 00:07:09,670
smaller than mean or
lose the value if it's bigger than

342
00:07:09,670 --> 00:07:09,680
lose the value if it's bigger than
 

343
00:07:09,680 --> 00:07:12,629
lose the value if it's bigger than
max column what you need to return

344
00:07:12,629 --> 00:07:12,639
max column what you need to return
 

345
00:07:12,639 --> 00:07:15,749
max column what you need to return
return

346
00:07:15,749 --> 00:07:15,759

 

347
00:07:15,759 --> 00:07:17,270

yeah because it's in the outside the

348
00:07:17,270 --> 00:07:17,280
yeah because it's in the outside the
 

349
00:07:17,280 --> 00:07:19,189
yeah because it's in the outside the
window then it's not ready right

350
00:07:19,189 --> 00:07:19,199
window then it's not ready right
 

351
00:07:19,199 --> 00:07:22,070
window then it's not ready right
yeah babe okay and then we need to

352
00:07:22,070 --> 00:07:22,080
yeah babe okay and then we need to
 

353
00:07:22,080 --> 00:07:23,830
yeah babe okay and then we need to
recursively check

354
00:07:23,830 --> 00:07:23,840
recursively check
 

355
00:07:23,840 --> 00:07:25,909
recursively check
check the left note and then the right

356
00:07:25,909 --> 00:07:25,919
check the left note and then the right
 

357
00:07:25,919 --> 00:07:27,029
check the left note and then the right
notes right

358
00:07:27,029 --> 00:07:27,039
notes right
 

359
00:07:27,039 --> 00:07:28,870
notes right
remember we talked about check the left

360
00:07:28,870 --> 00:07:28,880
remember we talked about check the left
 

361
00:07:28,880 --> 00:07:29,980
remember we talked about check the left
now

362
00:07:29,980 --> 00:07:29,990
now
 

363
00:07:29,990 --> 00:07:33,510
now
[Music]

364
00:07:33,510 --> 00:07:33,520

 

365
00:07:33,520 --> 00:07:37,909

okay so remember what do we check

366
00:07:37,909 --> 00:07:37,919
okay so remember what do we check
 

367
00:07:37,919 --> 00:07:41,270
okay so remember what do we check
return yeah

368
00:07:41,270 --> 00:07:41,280
return yeah
 

369
00:07:41,280 --> 00:07:57,749
return yeah
check bst check psg

370
00:07:57,749 --> 00:07:57,759

 

371
00:07:57,759 --> 00:08:00,070

left okay tell me what's the next two

372
00:08:00,070 --> 00:08:00,080
left okay tell me what's the next two
 

373
00:08:00,080 --> 00:08:01,830
left okay tell me what's the next two
parameters

374
00:08:01,830 --> 00:08:01,840
parameters
 

375
00:08:01,840 --> 00:08:05,270
parameters
i read the right no no no it takes the

376
00:08:05,270 --> 00:08:05,280
i read the right no no no it takes the
 

377
00:08:05,280 --> 00:08:06,710
i read the right no no no it takes the
min and max what's the mean what's the

378
00:08:06,710 --> 00:08:06,720
min and max what's the mean what's the
 

379
00:08:06,720 --> 00:08:07,909
min and max what's the mean what's the
max for the

380
00:08:07,909 --> 00:08:07,919
max for the
 

381
00:08:07,919 --> 00:08:18,869
max for the
what's the left left train oh a minimum

382
00:08:18,869 --> 00:08:18,879

 

383
00:08:18,879 --> 00:08:21,110

and the right value will be the load of

384
00:08:21,110 --> 00:08:21,120
and the right value will be the load of
 

385
00:08:21,120 --> 00:08:22,869
and the right value will be the load of
value right

386
00:08:22,869 --> 00:08:22,879
value right
 

387
00:08:22,879 --> 00:08:25,510
value right
because it can't be it can't be bigger

388
00:08:25,510 --> 00:08:25,520
because it can't be it can't be bigger
 

389
00:08:25,520 --> 00:08:27,110
because it can't be it can't be bigger
than the load right

390
00:08:27,110 --> 00:08:27,120
than the load right
 

391
00:08:27,120 --> 00:08:31,189
than the load right
yeah and then again and

392
00:08:31,189 --> 00:08:31,199
yeah and then again and
 

393
00:08:31,199 --> 00:08:34,550
yeah and then again and
check bst

394
00:08:34,550 --> 00:08:34,560
check bst
 

395
00:08:34,560 --> 00:08:38,949
check bst
blue dot right right yeah

396
00:08:38,949 --> 00:08:38,959
blue dot right right yeah
 

397
00:08:38,959 --> 00:08:43,029
blue dot right right yeah
and what's the mean what's the next

398
00:08:43,029 --> 00:08:43,039

 

399
00:08:43,039 --> 00:08:46,230

max so what's the mean

400
00:08:46,230 --> 00:08:46,240
max so what's the mean
 

401
00:08:46,240 --> 00:08:49,430
max so what's the mean
oh the right yeah right right hand side

402
00:08:49,430 --> 00:08:49,440
oh the right yeah right right hand side
 

403
00:08:49,440 --> 00:08:49,910
oh the right yeah right right hand side
what's

404
00:08:49,910 --> 00:08:49,920
what's
 

405
00:08:49,920 --> 00:08:53,509
what's
what what possible smallest number

406
00:08:53,509 --> 00:08:53,519
what what possible smallest number
 

407
00:08:53,519 --> 00:08:56,790
what what possible smallest number
yeah one which is root of val

408
00:08:56,790 --> 00:08:56,800
yeah one which is root of val
 

409
00:08:56,800 --> 00:09:00,389
yeah one which is root of val
right and

410
00:09:00,389 --> 00:09:00,399
right and
 

411
00:09:00,399 --> 00:09:04,550
right and
and what's the least what's the maximum

412
00:09:04,550 --> 00:09:04,560
and what's the least what's the maximum
 

413
00:09:04,560 --> 00:09:07,670
and what's the least what's the maximum
max yes well done

414
00:09:07,670 --> 00:09:07,680

 

415
00:09:07,680 --> 00:09:10,630

so together now it's clear yeah yeah

416
00:09:10,630 --> 00:09:10,640
so together now it's clear yeah yeah
 

417
00:09:10,640 --> 00:09:10,949
so together now it's clear yeah yeah
this

418
00:09:10,949 --> 00:09:10,959
this
 

419
00:09:10,959 --> 00:09:12,870
this
bit is checking for the loop so you call

420
00:09:12,870 --> 00:09:12,880
bit is checking for the loop so you call
 

421
00:09:12,880 --> 00:09:14,230
bit is checking for the loop so you call
itself to check

422
00:09:14,230 --> 00:09:14,240
itself to check
 

423
00:09:14,240 --> 00:09:17,350
itself to check
and here either if it's empty that will

424
00:09:17,350 --> 00:09:17,360
and here either if it's empty that will
 

425
00:09:17,360 --> 00:09:18,550
and here either if it's empty that will
return true

426
00:09:18,550 --> 00:09:18,560
return true
 

427
00:09:18,560 --> 00:09:22,070
return true
i or if it's not inside a range

428
00:09:22,070 --> 00:09:22,080
i or if it's not inside a range
 

429
00:09:22,080 --> 00:09:23,590
i or if it's not inside a range
right because it's smaller or it's

430
00:09:23,590 --> 00:09:23,600
right because it's smaller or it's
 

431
00:09:23,600 --> 00:09:25,590
right because it's smaller or it's
bigger then it's not in that range we

432
00:09:25,590 --> 00:09:25,600
bigger then it's not in that range we
 

433
00:09:25,600 --> 00:09:27,350
bigger then it's not in that range we
retain the force right

434
00:09:27,350 --> 00:09:27,360
retain the force right
 

435
00:09:27,360 --> 00:09:29,430
retain the force right
why can we do that because a valid

436
00:09:29,430 --> 00:09:29,440
why can we do that because a valid
 

437
00:09:29,440 --> 00:09:31,030
why can we do that because a valid
binary search tree

438
00:09:31,030 --> 00:09:31,040
binary search tree
 

439
00:09:31,040 --> 00:09:32,710
binary search tree
the left binary search tree and the

440
00:09:32,710 --> 00:09:32,720
the left binary search tree and the
 

441
00:09:32,720 --> 00:09:34,470
the left binary search tree and the
right band of the tree

442
00:09:34,470 --> 00:09:34,480
right band of the tree
 

443
00:09:34,480 --> 00:09:38,230
right band of the tree
is also binary right in order for the

444
00:09:38,230 --> 00:09:38,240
is also binary right in order for the
 

445
00:09:38,240 --> 00:09:39,590
is also binary right in order for the
entire tree

446
00:09:39,590 --> 00:09:39,600
entire tree
 

447
00:09:39,600 --> 00:09:42,470
entire tree
is a bst the left has to be a bst and

448
00:09:42,470 --> 00:09:42,480
is a bst the left has to be a bst and
 

449
00:09:42,480 --> 00:09:44,310
is a bst the left has to be a bst and
the right has to be sd

450
00:09:44,310 --> 00:09:44,320
the right has to be sd
 

451
00:09:44,320 --> 00:09:47,430
the right has to be sd
so this is b s t binary search should

452
00:09:47,430 --> 00:09:47,440
so this is b s t binary search should
 

453
00:09:47,440 --> 00:09:47,829
so this is b s t binary search should
look

454
00:09:47,829 --> 00:09:47,839
look
 

455
00:09:47,839 --> 00:09:51,350
look
so look what why is

456
00:09:51,350 --> 00:09:51,360
so look what why is
 

457
00:09:51,360 --> 00:09:54,230
so look what why is
but this is very simple uh recursion

458
00:09:54,230 --> 00:09:54,240
but this is very simple uh recursion
 

459
00:09:54,240 --> 00:09:54,630
but this is very simple uh recursion
look

460
00:09:54,630 --> 00:09:54,640
look
 

461
00:09:54,640 --> 00:09:57,910
look
if the note is a simple if it's nothing

462
00:09:57,910 --> 00:09:57,920
if the note is a simple if it's nothing
 

463
00:09:57,920 --> 00:09:59,750
if the note is a simple if it's nothing
if it's empty it's a binary search tree

464
00:09:59,750 --> 00:09:59,760
if it's empty it's a binary search tree
 

465
00:09:59,760 --> 00:10:00,949
if it's empty it's a binary search tree
right

466
00:10:00,949 --> 00:10:00,959
right
 

467
00:10:00,959 --> 00:10:03,590
right
if the value is not inside the range

468
00:10:03,590 --> 00:10:03,600
if the value is not inside the range
 

469
00:10:03,600 --> 00:10:04,230
if the value is not inside the range
it's not

470
00:10:04,230 --> 00:10:04,240
it's not
 

471
00:10:04,240 --> 00:10:07,430
it's not
a balanced surgery also in order for

472
00:10:07,430 --> 00:10:07,440
a balanced surgery also in order for
 

473
00:10:07,440 --> 00:10:09,590
a balanced surgery also in order for
this to be a binary search tree the left

474
00:10:09,590 --> 00:10:09,600
this to be a binary search tree the left
 

475
00:10:09,600 --> 00:10:10,230
this to be a binary search tree the left
hand

476
00:10:10,230 --> 00:10:10,240
hand
 

477
00:10:10,240 --> 00:10:12,310
hand
left tree has to be a binary search tree

478
00:10:12,310 --> 00:10:12,320
left tree has to be a binary search tree
 

479
00:10:12,320 --> 00:10:13,590
left tree has to be a binary search tree
and the right chain has to

480
00:10:13,590 --> 00:10:13,600
and the right chain has to
 

481
00:10:13,600 --> 00:10:16,389
and the right chain has to
be the binary substrate am right what a

482
00:10:16,389 --> 00:10:16,399
be the binary substrate am right what a
 

483
00:10:16,399 --> 00:10:18,230
be the binary substrate am right what a
complexity of this angular

484
00:10:18,230 --> 00:10:18,240
complexity of this angular
 

485
00:10:18,240 --> 00:10:19,050
complexity of this angular
what's the point

486
00:10:19,050 --> 00:10:19,060
what's the point
 

487
00:10:19,060 --> 00:10:23,110
what's the point
[Music]

488
00:10:23,110 --> 00:10:23,120

 

489
00:10:23,120 --> 00:10:28,230

oh what n o n yes remember

490
00:10:28,230 --> 00:10:28,240
oh what n o n yes remember
 

491
00:10:28,240 --> 00:10:33,030
oh what n o n yes remember
oh and why isn't it

492
00:10:33,030 --> 00:10:33,040
oh and why isn't it
 

493
00:10:33,040 --> 00:10:36,310
oh and why isn't it
you need to check all the numbers yeah

494
00:10:36,310 --> 00:10:36,320
you need to check all the numbers yeah
 

495
00:10:36,320 --> 00:10:39,110
you need to check all the numbers yeah
exactly because we in order to to verify

496
00:10:39,110 --> 00:10:39,120
exactly because we in order to to verify
 

497
00:10:39,120 --> 00:10:40,870
exactly because we in order to to verify
if a tree is the binary that's true we

498
00:10:40,870 --> 00:10:40,880
if a tree is the binary that's true we
 

499
00:10:40,880 --> 00:10:41,829
if a tree is the binary that's true we
have to

500
00:10:41,829 --> 00:10:41,839
have to
 

501
00:10:41,839 --> 00:10:44,310
have to
check every node right if you come if

502
00:10:44,310 --> 00:10:44,320
check every node right if you come if
 

503
00:10:44,320 --> 00:10:46,389
check every node right if you come if
you miss one note you can't be sure that

504
00:10:46,389 --> 00:10:46,399
you miss one note you can't be sure that
 

505
00:10:46,399 --> 00:10:46,949
you miss one note you can't be sure that
it's a

506
00:10:46,949 --> 00:10:46,959
it's a
 

507
00:10:46,959 --> 00:10:49,750
it's a
brand new tree right yeah okay so can

508
00:10:49,750 --> 00:10:49,760
brand new tree right yeah okay so can
 

509
00:10:49,760 --> 00:10:51,430
brand new tree right yeah okay so can
you tell me why yesterday we

510
00:10:51,430 --> 00:10:51,440
you tell me why yesterday we
 

511
00:10:51,440 --> 00:10:53,829
you tell me why yesterday we
we are searching for a note in the

512
00:10:53,829 --> 00:10:53,839
we are searching for a note in the
 

513
00:10:53,839 --> 00:10:56,470
we are searching for a note in the
binary search tree

514
00:10:56,470 --> 00:10:56,480
binary search tree
 

515
00:10:56,480 --> 00:11:08,069
binary search tree
the complexity is

516
00:11:08,069 --> 00:11:08,079

 

517
00:11:08,079 --> 00:11:10,550

yeah for example if it's if it's one

518
00:11:10,550 --> 00:11:10,560
yeah for example if it's if it's one
 

519
00:11:10,560 --> 00:11:13,190
yeah for example if it's if it's one
this is zero this is minus one if i want

520
00:11:13,190 --> 00:11:13,200
this is zero this is minus one if i want
 

521
00:11:13,200 --> 00:11:13,990
this is zero this is minus one if i want
to find minus

522
00:11:13,990 --> 00:11:14,000
to find minus
 

523
00:11:14,000 --> 00:11:17,269
to find minus
one i don't want to check

524
00:11:17,269 --> 00:11:17,279
one i don't want to check
 

525
00:11:17,279 --> 00:11:19,269
one i don't want to check
that one yeah i don't need to check the

526
00:11:19,269 --> 00:11:19,279
that one yeah i don't need to check the
 

527
00:11:19,279 --> 00:11:20,790
that one yeah i don't need to check the
right hand side yeah we're done we're

528
00:11:20,790 --> 00:11:20,800
right hand side yeah we're done we're
 

529
00:11:20,800 --> 00:11:22,389
right hand side yeah we're done we're
done good job today eric

530
00:11:22,389 --> 00:11:22,399
done good job today eric
 

531
00:11:22,399 --> 00:11:26,829
done good job today eric
ryan okay good job laughing

532
00:11:26,829 --> 00:11:26,839

 

533
00:11:26,839 --> 00:11:30,310

wow

534
00:11:30,310 --> 00:11:30,320

 

535
00:11:30,320 --> 00:11:33,519

okay good job today

