1
00:00:00,399 --> 00:00:05,680
hello mr mr rhino you're right

2
00:00:03,280 --> 00:00:07,919
so we have talked about the longest

3
00:00:05,680 --> 00:00:12,840
substring we love repeating characters

4
00:00:07,919 --> 00:00:12,840
longest substring we love repeating

5
00:00:16,560 --> 00:00:21,119
okay we talked about this two days ago

6
00:00:19,199 --> 00:00:23,039
eric ryan

7
00:00:21,119 --> 00:00:26,240
and and what's the longest substring

8
00:00:23,039 --> 00:00:29,240
that contains no duplicate numbers

9
00:00:26,240 --> 00:00:29,240
e-r-i-c-r-o-y-a

10
00:00:40,559 --> 00:00:45,760
yeah because look yeah i see ah

11
00:00:44,800 --> 00:00:47,360
okay so

12
00:00:45,760 --> 00:00:49,520
yeah we talked about this two days ago

13
00:00:47,360 --> 00:00:50,320
long is substring substring continuous

14
00:00:49,520 --> 00:00:51,920
yeah

15
00:00:50,320 --> 00:00:54,399
as opposed to

16
00:00:51,920 --> 00:00:55,920
subsequent which is does not have to be

17
00:00:54,399 --> 00:00:57,039
continuous but substring has to be

18
00:00:55,920 --> 00:00:58,640
continued now we talked about two

19
00:00:57,039 --> 00:01:02,399
solutions proof of

20
00:00:58,640 --> 00:01:04,799
there are cn1 plus cn2 number of uh this

21
00:01:02,399 --> 00:01:06,799
is total number of substrings right cn1

22
00:01:04,799 --> 00:01:09,840
means that they are the size if the n

23
00:01:06,799 --> 00:01:11,760
characters we pick one out of n and

24
00:01:09,840 --> 00:01:14,080
that's the substring of size one single

25
00:01:11,760 --> 00:01:15,920
character their end choice cn2 means

26
00:01:14,080 --> 00:01:18,000
that we pick the left

27
00:01:15,920 --> 00:01:20,799
index and we pick a right index so they

28
00:01:18,000 --> 00:01:22,799
are c and two of ways of picking the

29
00:01:20,799 --> 00:01:24,240
index for one for the left one from

30
00:01:22,799 --> 00:01:26,240
right and then

31
00:01:24,240 --> 00:01:28,960
once we have this left and right index

32
00:01:26,240 --> 00:01:30,960
we have the substring so let's represent

33
00:01:28,960 --> 00:01:32,960
the number uh the number of substring

34
00:01:30,960 --> 00:01:35,040
more than one characters and

35
00:01:32,960 --> 00:01:37,360
if we simplify these that's going to

36
00:01:35,040 --> 00:01:39,360
take n times n plus one divided by two

37
00:01:37,360 --> 00:01:41,680
this is the total number of subtree and

38
00:01:39,360 --> 00:01:44,079
look we have this n square thing yeah n

39
00:01:41,680 --> 00:01:47,119
square thing evenly we divide it by two

40
00:01:44,079 --> 00:01:50,159
this is the scale of o n squared okay

41
00:01:47,119 --> 00:01:52,799
so it takes o n squared to

42
00:01:50,159 --> 00:01:54,799
iterate o n squared to prove us all the

43
00:01:52,799 --> 00:01:56,960
substrate and for each substring we need

44
00:01:54,799 --> 00:01:58,719
to check if it has all the unique

45
00:01:56,960 --> 00:02:01,280
characters and that's going to take on

46
00:01:58,719 --> 00:02:03,680
time so overall the time complexity for

47
00:02:01,280 --> 00:02:05,840
the for this approach is the only cubic

48
00:02:03,680 --> 00:02:08,319
okay and we talked about styling the

49
00:02:05,840 --> 00:02:11,599
idea is the idea is that we could expand

50
00:02:08,319 --> 00:02:14,239
we can explain the right pointer as

51
00:02:11,599 --> 00:02:16,319
much as we can when the character is not

52
00:02:14,239 --> 00:02:18,400
in the window yeah yeah after to finish

53
00:02:16,319 --> 00:02:20,239
your opinions otherwise it's too naughty

54
00:02:18,400 --> 00:02:22,160
all right

55
00:02:20,239 --> 00:02:24,480
tell me when you finish okay because

56
00:02:22,160 --> 00:02:25,440
it's too much

57
00:02:24,480 --> 00:02:27,280
okay

58
00:02:25,440 --> 00:02:29,280
the idea is that we have this left

59
00:02:27,280 --> 00:02:30,239
pointer and then we have right point

60
00:02:29,280 --> 00:02:31,599
right

61
00:02:30,239 --> 00:02:33,040
listen

62
00:02:31,599 --> 00:02:33,840
so we

63
00:02:33,040 --> 00:02:36,080
we

64
00:02:33,840 --> 00:02:37,280
extend we move the right pointer as long

65
00:02:36,080 --> 00:02:39,200
as the

66
00:02:37,280 --> 00:02:40,959
character in the right pointer is not in

67
00:02:39,200 --> 00:02:43,760
the window right so for example yeah i

68
00:02:40,959 --> 00:02:46,080
see the current window is that but r

69
00:02:43,760 --> 00:02:49,599
is in the window if we don't move that

70
00:02:46,080 --> 00:02:52,239
pointer if we don't swing the window

71
00:02:49,599 --> 00:02:54,400
no matter how far we move the right

72
00:02:52,239 --> 00:02:57,360
pointer the substring is not ready i'm

73
00:02:54,400 --> 00:03:00,239
right can you imagine that all right

74
00:02:57,360 --> 00:03:03,519
yeah look eic i'm my current window is

75
00:03:00,239 --> 00:03:05,120
here now r is in this window right so if

76
00:03:03,519 --> 00:03:08,400
i don't move the left pointer what

77
00:03:05,120 --> 00:03:11,120
happened i keep moving the right

78
00:03:08,400 --> 00:03:12,800
the r is still in the window right so

79
00:03:11,120 --> 00:03:15,440
the only way to make the string

80
00:03:12,800 --> 00:03:17,280
substring ready is to shrink

81
00:03:15,440 --> 00:03:20,560
to move the left pointer to the right to

82
00:03:17,280 --> 00:03:22,720
shrink the window until the current r

83
00:03:20,560 --> 00:03:24,560
character is not in the window does it

84
00:03:22,720 --> 00:03:26,720
make sense this way yeah

85
00:03:24,560 --> 00:03:27,680
yeah the time complexity is our n why is

86
00:03:26,720 --> 00:03:29,519
that

87
00:03:27,680 --> 00:03:31,040
so think it this way the left we have

88
00:03:29,519 --> 00:03:32,720
two pointer

89
00:03:31,040 --> 00:03:34,879
and the pointer needs to

90
00:03:32,720 --> 00:03:36,799
goes to the right the r pointer goes one

91
00:03:34,879 --> 00:03:39,360
way the air pointer goes one way so the

92
00:03:36,799 --> 00:03:42,080
maximum number of distance that the both

93
00:03:39,360 --> 00:03:44,959
pointers travel together is o two times

94
00:03:42,080 --> 00:03:49,280
n right so that's in the scale of the uh

95
00:03:44,959 --> 00:03:51,840
linear define okay longest

96
00:03:49,280 --> 00:03:51,840
substring

97
00:03:52,159 --> 00:03:56,159
s

98
00:03:52,959 --> 00:03:58,799
first of all n equals length s

99
00:03:56,159 --> 00:03:59,760
air pointer equals r pointer equals zero

100
00:03:58,799 --> 00:04:02,159
right

101
00:03:59,760 --> 00:04:04,879
the answer at the beginning we have zero

102
00:04:02,159 --> 00:04:06,239
and now we use the window y r not

103
00:04:04,879 --> 00:04:10,000
reaching the end

104
00:04:06,239 --> 00:04:12,720
now we have to check y s r

105
00:04:10,000 --> 00:04:15,200
is in the window right so if the

106
00:04:12,720 --> 00:04:18,479
character and the right is by pointer is

107
00:04:15,200 --> 00:04:20,639
in the window what do we have to do

108
00:04:18,479 --> 00:04:22,320
now this r is in a window so what do we

109
00:04:20,639 --> 00:04:23,440
have to do

110
00:04:22,320 --> 00:04:26,320
we

111
00:04:23,440 --> 00:04:29,680
delete er and then

112
00:04:26,320 --> 00:04:32,560
so what do we have to do move the

113
00:04:29,680 --> 00:04:34,800
arrow to the right right so so window

114
00:04:32,560 --> 00:04:38,080
window dot erase

115
00:04:34,800 --> 00:04:39,360
don't remove okay remove

116
00:04:38,080 --> 00:04:42,400
sl

117
00:04:39,360 --> 00:04:46,880
and then l plus equal one right

118
00:04:42,400 --> 00:04:46,880
window dot at sr

119
00:04:47,360 --> 00:04:52,560
r plus equal one okay and then

120
00:04:50,560 --> 00:04:54,840
also we have to remember

121
00:04:52,560 --> 00:04:59,520
the longest

122
00:04:54,840 --> 00:05:02,800
answer length of the window right

123
00:04:59,520 --> 00:05:06,560
and then return answer yeah

124
00:05:02,800 --> 00:05:06,560
this is not new yeah okay

125
00:05:06,639 --> 00:05:13,039
make sense yes yeah

126
00:05:09,840 --> 00:05:14,960
yeah if this r is in the window if it is

127
00:05:13,039 --> 00:05:16,800
then we check we keep moving at that

128
00:05:14,960 --> 00:05:19,360
point right we don't know we move the

129
00:05:16,800 --> 00:05:21,840
air pointer we don't know when right we

130
00:05:19,360 --> 00:05:24,080
don't know when

131
00:05:21,840 --> 00:05:25,120
the window contains only unique digits

132
00:05:24,080 --> 00:05:26,880
right

133
00:05:25,120 --> 00:05:29,440
right all right so we have to check but

134
00:05:26,880 --> 00:05:32,080
here i'm telling you look if we have a

135
00:05:29,440 --> 00:05:34,560
dictionary d

136
00:05:32,080 --> 00:05:36,320
d if i tell you d

137
00:05:34,560 --> 00:05:37,840
r

138
00:05:36,320 --> 00:05:40,560
the character ah

139
00:05:37,840 --> 00:05:44,160
last appear position is here

140
00:05:40,560 --> 00:05:45,039
one okay look i'm visiting this r

141
00:05:44,160 --> 00:05:47,680
yeah

142
00:05:45,039 --> 00:05:50,000
so look i'm telling you the last r i

143
00:05:47,680 --> 00:05:54,479
know right is here

144
00:05:50,000 --> 00:05:57,600
can we just erase every every characters

145
00:05:54,479 --> 00:05:59,199
to r right because look up i know i the

146
00:05:57,600 --> 00:06:01,199
previous is here

147
00:05:59,199 --> 00:06:03,639
so can i just move the air pointers and

148
00:06:01,199 --> 00:06:08,639
erase everything up to r

149
00:06:03,639 --> 00:06:10,080
yep yep okay so look in this way now we

150
00:06:08,639 --> 00:06:11,759
know how many characters we need to

151
00:06:10,080 --> 00:06:14,080
remove right right

152
00:06:11,759 --> 00:06:16,560
okay so this is the slightly different

153
00:06:14,080 --> 00:06:18,720
but both are okay okay so how do we do

154
00:06:16,560 --> 00:06:21,120
it we use a d in order to do this we

155
00:06:18,720 --> 00:06:23,759
need to have this dictionary d equals

156
00:06:21,120 --> 00:06:27,360
dictionary we still need the left and

157
00:06:23,759 --> 00:06:30,000
right pointer wire so before this so x

158
00:06:27,360 --> 00:06:31,600
will be equal the current character is s

159
00:06:30,000 --> 00:06:32,880
r right

160
00:06:31,600 --> 00:06:34,479
okay and then

161
00:06:32,880 --> 00:06:38,319
the i the last

162
00:06:34,479 --> 00:06:40,080
appear position for x is d

163
00:06:38,319 --> 00:06:41,759
b dot

164
00:06:40,080 --> 00:06:44,560
get

165
00:06:41,759 --> 00:06:48,400
x minus one plus one okay this is a

166
00:06:44,560 --> 00:06:50,720
little tricky d is a dictionary

167
00:06:48,400 --> 00:06:53,440
and we want to retrieve the partition

168
00:06:50,720 --> 00:06:56,319
that the key of x x is the current

169
00:06:53,440 --> 00:06:58,319
character by default right because we we

170
00:06:56,319 --> 00:06:59,840
are declaring the dictionary just using

171
00:06:58,319 --> 00:07:02,080
a very simple

172
00:06:59,840 --> 00:07:03,599
syntax dictionary or we can do this d

173
00:07:02,080 --> 00:07:06,160
equals this

174
00:07:03,599 --> 00:07:09,360
this is the same

175
00:07:06,160 --> 00:07:10,720
the key when the key is not in the d

176
00:07:09,360 --> 00:07:13,120
right

177
00:07:10,720 --> 00:07:15,680
you also have an error unless we use the

178
00:07:13,120 --> 00:07:17,120
get d dot get the second parameter is

179
00:07:15,680 --> 00:07:19,840
the default

180
00:07:17,120 --> 00:07:22,319
value when x is nothing in the key

181
00:07:19,840 --> 00:07:25,280
right so when x is not in the key so

182
00:07:22,319 --> 00:07:28,000
when the the this letter

183
00:07:25,280 --> 00:07:29,840
has not appeared before first term

184
00:07:28,000 --> 00:07:32,800
return minus one last one that'll be

185
00:07:29,840 --> 00:07:34,880
zero if this x has appeared before it

186
00:07:32,800 --> 00:07:38,160
will return the index and the plus one

187
00:07:34,880 --> 00:07:40,160
you'll be the the index after it okay

188
00:07:38,160 --> 00:07:43,520
so wire

189
00:07:40,160 --> 00:07:45,919
wire air and small and i right so we

190
00:07:43,520 --> 00:07:47,440
want to remove everything so wind dot

191
00:07:45,919 --> 00:07:50,319
remove

192
00:07:47,440 --> 00:07:52,960
uh s air

193
00:07:50,319 --> 00:07:55,919
l plus equal one okay so slightly this

194
00:07:52,960 --> 00:07:57,039
is slightly different here

195
00:07:55,919 --> 00:08:00,000
and then

196
00:07:57,039 --> 00:08:01,599
after that we have to remember that the

197
00:08:00,000 --> 00:08:04,240
the

198
00:08:01,599 --> 00:08:06,319
least position so it will d

199
00:08:04,240 --> 00:08:08,960
x equals r

200
00:08:06,319 --> 00:08:12,400
okay this is going to here

201
00:08:08,960 --> 00:08:14,479
we're updating the last position of x is

202
00:08:12,400 --> 00:08:16,080
current partition it's current index

203
00:08:14,479 --> 00:08:19,120
this is the index this is the current

204
00:08:16,080 --> 00:08:19,120
character okay

205
00:08:19,280 --> 00:08:25,520
we are removing every character up to

206
00:08:22,240 --> 00:08:27,520
including the last r

207
00:08:25,520 --> 00:08:29,759
if every time we do this then we can

208
00:08:27,520 --> 00:08:33,599
make sure the window contains only a

209
00:08:29,759 --> 00:08:35,200
unique character but the window

210
00:08:33,599 --> 00:08:38,800
air and r right

211
00:08:35,200 --> 00:08:40,800
window this is window a

212
00:08:38,800 --> 00:08:42,800
we we don't have anything

213
00:08:40,800 --> 00:08:45,839
of a appear so that

214
00:08:42,800 --> 00:08:48,160
these would return

215
00:08:45,839 --> 00:08:50,240
i will be zero right i will be zero so

216
00:08:48,160 --> 00:08:52,320
it actually doesn't go in here doesn't

217
00:08:50,240 --> 00:08:54,959
go into the loop to remove every

218
00:08:52,320 --> 00:08:58,880
characters up to up to the previous a

219
00:08:54,959 --> 00:09:01,519
right b a b the current winter abc

220
00:08:58,880 --> 00:09:02,320
carol window abcd counter

221
00:09:01,519 --> 00:09:04,240
right

222
00:09:02,320 --> 00:09:05,040
b okay look

223
00:09:04,240 --> 00:09:07,839
b

224
00:09:05,040 --> 00:09:09,120
appears before right so we do moving

225
00:09:07,839 --> 00:09:11,519
everything

226
00:09:09,120 --> 00:09:14,399
to after p right so we do moving this

227
00:09:11,519 --> 00:09:16,320
and then we remove it okay priorities

228
00:09:14,399 --> 00:09:18,080
removing okay then our current window is

229
00:09:16,320 --> 00:09:20,160
cdb right

230
00:09:18,080 --> 00:09:22,800
okay c

231
00:09:20,160 --> 00:09:24,399
yep so remove everything up to c right

232
00:09:22,800 --> 00:09:25,839
okay

233
00:09:24,399 --> 00:09:28,880
e

234
00:09:25,839 --> 00:09:30,560
f g okay

235
00:09:28,880 --> 00:09:32,560
all the rest are the same

236
00:09:30,560 --> 00:09:34,880
the only difference is this bit how do

237
00:09:32,560 --> 00:09:37,200
we shrink the window right

238
00:09:34,880 --> 00:09:38,720
the previous method we just checked if

239
00:09:37,200 --> 00:09:41,680
that window

240
00:09:38,720 --> 00:09:45,040
does not contain this sr right when you

241
00:09:41,680 --> 00:09:46,800
can if it contains sr we keep removing

242
00:09:45,040 --> 00:09:48,320
we are using

243
00:09:46,800 --> 00:09:53,600
an additional

244
00:09:48,320 --> 00:09:55,680
space d dictionary to remember the last

245
00:09:53,600 --> 00:09:58,160
to remember the last index

246
00:09:55,680 --> 00:09:59,360
of the current character s okay what

247
00:09:58,160 --> 00:10:01,360
have you learned

248
00:09:59,360 --> 00:10:03,760
we learned what have you done what's

249
00:10:01,360 --> 00:10:05,839
your problem what have you

250
00:10:03,760 --> 00:10:07,040
same thing

251
00:10:05,839 --> 00:10:08,720
what's the problem and what have you

252
00:10:07,040 --> 00:10:10,560
learned what's the what's some what's

253
00:10:08,720 --> 00:10:12,880
the new thing that you learn today about

254
00:10:10,560 --> 00:10:15,279
the two pointers how to

255
00:10:12,880 --> 00:10:17,120
delete the priorities

256
00:10:15,279 --> 00:10:19,600
differently

257
00:10:17,120 --> 00:10:21,040
yes okay so what's the

258
00:10:19,600 --> 00:10:22,959
the approach today

259
00:10:21,040 --> 00:10:25,680
we're using two pointers yeah it's still

260
00:10:22,959 --> 00:10:29,920
two pointers we are raising

261
00:10:25,680 --> 00:10:31,040
the copy the copy and before it

262
00:10:29,920 --> 00:10:32,480
okay so

263
00:10:31,040 --> 00:10:34,480
can you explain it a little bit better

264
00:10:32,480 --> 00:10:35,760
eric can do another

265
00:10:34,480 --> 00:10:37,680
explanation

266
00:10:35,760 --> 00:10:40,480
so basically

267
00:10:37,680 --> 00:10:43,839
uh we have we given this like uh you

268
00:10:40,480 --> 00:10:46,000
know letter thing okay and then you have

269
00:10:43,839 --> 00:10:46,000
to

270
00:10:57,260 --> 00:11:00,799
[Music]

271
00:11:09,050 --> 00:11:15,640
[Music]

272
00:11:11,600 --> 00:11:15,640
yeah you start from

273
00:11:26,079 --> 00:11:31,360
yeah you remove this thing

274
00:11:28,880 --> 00:11:34,240
so how do we make sure just cut it yeah

275
00:11:31,360 --> 00:11:36,800
i know now i have i'm here and ah

276
00:11:34,240 --> 00:11:39,440
ah this is r okay so how do we make sure

277
00:11:36,800 --> 00:11:41,360
the window contains the normal r

278
00:11:39,440 --> 00:11:42,720
so we have this

279
00:11:41,360 --> 00:11:44,800
eraser

280
00:11:42,720 --> 00:11:47,040
yeah so how do we remove which letter do

281
00:11:44,800 --> 00:11:47,040
you know

282
00:11:47,120 --> 00:11:52,800
okay so we know that

283
00:11:49,920 --> 00:11:55,600
and before yeah yeah so ti is the last

284
00:11:52,800 --> 00:11:58,079
position so in case you where i eyes the

285
00:11:55,600 --> 00:11:59,839
knots are you remove everything yeah

286
00:11:58,079 --> 00:12:02,079
yeah yeah and then you will keep doing

287
00:11:59,839 --> 00:12:04,560
that right this is new today the day

288
00:12:02,079 --> 00:12:06,800
before yesterday about two days ago we

289
00:12:04,560 --> 00:12:09,360
talked about this we haven't used use

290
00:12:06,800 --> 00:12:10,399
this dr think dictionary right we

291
00:12:09,360 --> 00:12:12,720
instead

292
00:12:10,399 --> 00:12:14,959
we need to we check the we just check

293
00:12:12,720 --> 00:12:17,200
why sr in the window right so we just

294
00:12:14,959 --> 00:12:19,040
check if this r is in the window then if

295
00:12:17,200 --> 00:12:20,639
it's up in the window so we just keep

296
00:12:19,040 --> 00:12:22,000
keep moving at that point which keeps

297
00:12:20,639 --> 00:12:25,360
swinging

298
00:12:22,000 --> 00:12:27,440
that window right yeah okay so which way

299
00:12:25,360 --> 00:12:28,720
notice better you think it's better i

300
00:12:27,440 --> 00:12:30,880
mean just

301
00:12:28,720 --> 00:12:31,839
some sort which method you think is

302
00:12:30,880 --> 00:12:33,040
better

303
00:12:31,839 --> 00:12:35,360
i like

304
00:12:33,040 --> 00:12:38,720
those are okay both are two pointer both

305
00:12:35,360 --> 00:12:40,880
are sliding window both are o-n

306
00:12:38,720 --> 00:12:42,480
o and space all in time but they're

307
00:12:40,880 --> 00:12:44,240
slightly different so which one you

308
00:12:42,480 --> 00:12:46,160
think is better which one makes more

309
00:12:44,240 --> 00:12:47,519
sense

310
00:12:46,160 --> 00:12:49,200
the shorter one so which one is your

311
00:12:47,519 --> 00:12:52,240
other one

312
00:12:49,200 --> 00:12:54,240
this one which one the left or right

313
00:12:52,240 --> 00:12:56,639
okay so three

314
00:12:54,240 --> 00:12:57,760
right right you think this this is

315
00:12:56,639 --> 00:12:59,440
better right

316
00:12:57,760 --> 00:13:00,720
yep this is shorter yeah because we

317
00:12:59,440 --> 00:13:02,480
don't have that

318
00:13:00,720 --> 00:13:04,959
we don't need to have uh another

319
00:13:02,480 --> 00:13:07,200
additional degenerate we remember the

320
00:13:04,959 --> 00:13:11,090
last position of the current character

321
00:13:07,200 --> 00:13:13,519
right but this one we have an addition

322
00:13:11,090 --> 00:13:15,360
[Music]

323
00:13:13,519 --> 00:13:17,360
that's right there's no normal runway

324
00:13:15,360 --> 00:13:19,839
just personal opinion yeah

325
00:13:17,360 --> 00:13:21,680
okay but so which one you think better

326
00:13:19,839 --> 00:13:22,880
ryan likes this one you think which one

327
00:13:21,680 --> 00:13:25,200
is better

328
00:13:22,880 --> 00:13:26,560
shorter one is which one

329
00:13:25,200 --> 00:13:28,639
which one is the other one it's tight to

330
00:13:26,560 --> 00:13:30,240
be the same which one is the other one

331
00:13:28,639 --> 00:13:32,800
my one

332
00:13:30,240 --> 00:13:32,800
my one

333
00:13:32,880 --> 00:13:37,279
this one here yeah yeah

334
00:13:34,720 --> 00:13:40,720
because this one as i said we have to

335
00:13:37,279 --> 00:13:45,720
additionally declare a vision okay

336
00:13:40,720 --> 00:13:45,720
okay that's it for today bye bye bye

