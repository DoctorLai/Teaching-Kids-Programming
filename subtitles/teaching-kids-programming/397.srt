1
00:00:06,560 --> 00:00:10,880
okay so what's binary tree we talk about

2
00:00:08,960 --> 00:00:14,320
binary tree

3
00:00:10,880 --> 00:00:18,480
yeah boy what's banner say come on

4
00:00:14,320 --> 00:00:18,480
it's a tree tree okay

5
00:00:18,800 --> 00:00:23,119
a tree which is fine that doesn't make

6
00:00:20,640 --> 00:00:25,279
any sense come on boundary tree is a

7
00:00:23,119 --> 00:00:27,199
binary tree

8
00:00:25,279 --> 00:00:30,960
it's a data structure yeah that's the

9
00:00:27,199 --> 00:00:30,960
point between here so

10
00:00:31,390 --> 00:00:34,520
[Music]

11
00:00:37,180 --> 00:00:42,239
[Music]

12
00:00:40,239 --> 00:00:44,160
it doesn't have any cycles

13
00:00:42,239 --> 00:00:45,280
it's a graph it's like a structure it's

14
00:00:44,160 --> 00:00:47,680
a graph

15
00:00:45,280 --> 00:00:50,320
in it it doesn't have values in it but

16
00:00:47,680 --> 00:00:52,399
that's fine so why which one yeah i

17
00:00:50,320 --> 00:00:55,360
couldn't know a variable anyway and

18
00:00:52,399 --> 00:00:57,199
what's the what's which one is the root

19
00:00:55,360 --> 00:00:59,359
i have the top one okay i know rule

20
00:00:57,199 --> 00:01:01,600
doesn't have any parents of it which

21
00:00:59,359 --> 00:01:03,199
which no what the what are the notes

22
00:01:01,600 --> 00:01:04,799
that doesn't happen in kids what do we

23
00:01:03,199 --> 00:01:05,760
call it leave there

24
00:01:04,799 --> 00:01:07,280
and

25
00:01:05,760 --> 00:01:09,520
how many

26
00:01:07,280 --> 00:01:10,479
no what's the maximum number of kids

27
00:01:09,520 --> 00:01:12,880
that

28
00:01:10,479 --> 00:01:16,799
knows in the binary you can okay you got

29
00:01:12,880 --> 00:01:16,799
it yeah we're done okay zero

30
00:01:17,360 --> 00:01:21,840
if it's zero then it's just a duct yeah

31
00:01:19,840 --> 00:01:26,400
it's just not it's not it's not forming

32
00:01:21,840 --> 00:01:27,920
a tree okay so my today is a tree but i

33
00:01:26,400 --> 00:01:30,960
know there's a tree yeah it's kind of

34
00:01:27,920 --> 00:01:30,960
it's a very special treat

35
00:01:33,040 --> 00:01:36,560
what's parents if i said parents

36
00:01:34,960 --> 00:01:40,759
financially what's it

37
00:01:36,560 --> 00:01:40,759
like you get like this

38
00:01:40,880 --> 00:01:44,080
[Music]

39
00:01:47,420 --> 00:01:50,569
[Music]

40
00:01:53,220 --> 00:01:56,280
[Music]

41
00:01:58,560 --> 00:02:04,719
so can you write can you

42
00:02:01,200 --> 00:02:07,600
say a very very ambalanced tree binomial

43
00:02:04,719 --> 00:02:09,280
tree so it's a stream by another

44
00:02:07,600 --> 00:02:11,920
it's a stick yeah

45
00:02:09,280 --> 00:02:13,920
okay so it's a stick like that yeah okay

46
00:02:11,920 --> 00:02:15,440
this is extremely unbalanced all this

47
00:02:13,920 --> 00:02:16,720
way

48
00:02:15,440 --> 00:02:20,239
okay

49
00:02:16,720 --> 00:02:23,239
so can you draw a tree which is balanced

50
00:02:20,239 --> 00:02:23,239
uh

51
00:02:23,760 --> 00:02:28,720
yeah this is better okay so a final tree

52
00:02:26,959 --> 00:02:32,480
is balanced if

53
00:02:28,720 --> 00:02:35,440
the note if the height of it's left at

54
00:02:32,480 --> 00:02:39,200
on right differs no more than one okay

55
00:02:35,440 --> 00:02:41,760
so at any case at any note

56
00:02:39,200 --> 00:02:44,480
the difference of a height in it's both

57
00:02:41,760 --> 00:02:45,599
left and right tree is no more than one

58
00:02:44,480 --> 00:02:49,120
for example

59
00:02:45,599 --> 00:02:51,680
the depth the height yeah the height

60
00:02:49,120 --> 00:02:55,040
so t that

61
00:02:51,680 --> 00:02:57,599
minus t right

62
00:02:55,040 --> 00:03:00,480
the absolute value is smaller or equal

63
00:02:57,599 --> 00:03:03,280
than one for any node yeah what's what's

64
00:03:00,480 --> 00:03:05,120
this absolute value

65
00:03:03,280 --> 00:03:07,680
what's this absolute value remember

66
00:03:05,120 --> 00:03:07,680
what's this

67
00:03:08,400 --> 00:03:11,120
x

68
00:03:09,280 --> 00:03:14,000
x axis

69
00:03:11,120 --> 00:03:15,360
a b x x what's absolute minus b equals

70
00:03:14,000 --> 00:03:17,200
one

71
00:03:15,360 --> 00:03:18,879
yeah sorry

72
00:03:17,200 --> 00:03:21,120
so look this is the

73
00:03:18,879 --> 00:03:24,000
it's a line of numbers so in the middle

74
00:03:21,120 --> 00:03:25,519
that's zero yeah this is infinity on the

75
00:03:24,000 --> 00:03:28,799
left on the right

76
00:03:25,519 --> 00:03:32,319
so absolute value is like the distance

77
00:03:28,799 --> 00:03:33,519
to this zero okay so for positive

78
00:03:32,319 --> 00:03:36,720
numbers

79
00:03:33,519 --> 00:03:38,799
absolute x is x for the negative numbers

80
00:03:36,720 --> 00:03:40,720
the absolute x is what

81
00:03:38,799 --> 00:03:43,440
for the negative number

82
00:03:40,720 --> 00:03:46,400
the absolute x equals one okay ryan

83
00:03:43,440 --> 00:03:49,599
anybody

84
00:03:46,400 --> 00:03:52,640
no no for like negative numbers

85
00:03:49,599 --> 00:03:55,040
positive is absolute x equals x this is

86
00:03:52,640 --> 00:03:57,439
the distance to here

87
00:03:55,040 --> 00:04:01,840
if x is negative what's the distance to

88
00:03:57,439 --> 00:04:01,840
here x x is negative

89
00:04:02,000 --> 00:04:05,200
x

90
00:04:03,280 --> 00:04:07,439
minus three what's minus three you say

91
00:04:05,200 --> 00:04:09,680
three what's negative

92
00:04:07,439 --> 00:04:12,080
x is minus three so what's the distance

93
00:04:09,680 --> 00:04:12,080
to the

94
00:04:13,200 --> 00:04:19,040
that zero yeah last thing what's x

95
00:04:15,680 --> 00:04:21,919
what's less thing x is minus v so what's

96
00:04:19,040 --> 00:04:23,840
what's that thing what's do you think

97
00:04:21,919 --> 00:04:26,720
what's equal three

98
00:04:23,840 --> 00:04:26,720
that's x

99
00:04:32,240 --> 00:04:37,520
yeah what i'm saying if x is positive

100
00:04:34,800 --> 00:04:39,220
this is x if x is negative so what's

101
00:04:37,520 --> 00:04:42,369
this

102
00:04:39,220 --> 00:04:42,369
[Music]

103
00:04:42,560 --> 00:04:48,080
okay so you say positive version of x

104
00:04:44,800 --> 00:04:50,800
yeah okay so x is minus

105
00:04:48,080 --> 00:04:54,000
okay okay x is minus three so what x

106
00:04:50,800 --> 00:04:56,560
equals the three come on

107
00:04:54,000 --> 00:04:58,080
x equals minus 3 so what kind of x

108
00:04:56,560 --> 00:05:01,440
positive what's that what's your idea

109
00:04:58,080 --> 00:05:03,440
with uh you uh get rid of the negative

110
00:05:01,440 --> 00:05:05,120
sign okay so what if i get rid of

111
00:05:03,440 --> 00:05:06,720
negative sound so what should i do with

112
00:05:05,120 --> 00:05:08,080
x

113
00:05:06,720 --> 00:05:10,080
you shall

114
00:05:08,080 --> 00:05:11,840
wha what should i put in the inner wrong

115
00:05:10,080 --> 00:05:13,199
come on

116
00:05:11,840 --> 00:05:15,919
negative

117
00:05:13,199 --> 00:05:17,360
okay so that's what i'm looking for if x

118
00:05:15,919 --> 00:05:21,039
is negative

119
00:05:17,360 --> 00:05:22,960
absolute value of x equals minus x okay

120
00:05:21,039 --> 00:05:26,400
okay

121
00:05:22,960 --> 00:05:28,639
yeah so

122
00:05:26,400 --> 00:05:30,400
so do you get this point yeah what's the

123
00:05:28,639 --> 00:05:32,720
definition of the

124
00:05:30,400 --> 00:05:34,320
balance binary

125
00:05:32,720 --> 00:05:36,720
uh

126
00:05:34,320 --> 00:05:38,800
balance what's what's the definition of

127
00:05:36,720 --> 00:05:40,160
balance financially come on i was just

128
00:05:38,800 --> 00:05:42,160
explaining

129
00:05:40,160 --> 00:05:44,000
okay i i'm going to write a few balance

130
00:05:42,160 --> 00:05:46,800
trying to show you and tell me okay

131
00:05:44,000 --> 00:05:48,720
or if not in the video

132
00:05:46,800 --> 00:05:53,840
making the house sir

133
00:05:48,720 --> 00:05:53,840
at least uh parents financially no yes

134
00:06:06,400 --> 00:06:10,880
no why is not yes of course this is you

135
00:06:09,759 --> 00:06:13,840
see

136
00:06:10,880 --> 00:06:15,120
yes this is two this is one right yes

137
00:06:13,840 --> 00:06:16,319
over this

138
00:06:15,120 --> 00:06:17,919
is this

139
00:06:16,319 --> 00:06:21,400
yeah

140
00:06:17,919 --> 00:06:21,400
how about it

141
00:06:30,960 --> 00:06:36,880
any note if the left and the right it

142
00:06:33,120 --> 00:06:39,680
differs by no more than one so what's

143
00:06:36,880 --> 00:06:42,800
so if we look at the root

144
00:06:39,680 --> 00:06:44,639
what's that yes i'm sorry

145
00:06:42,800 --> 00:06:48,479
no why is that

146
00:06:44,639 --> 00:06:49,440
come on don't guess yes okay i'm here

147
00:06:48,479 --> 00:06:51,440
what's the

148
00:06:49,440 --> 00:06:52,880
what's the depth of the left left

149
00:06:51,440 --> 00:06:55,680
shoulder

150
00:06:52,880 --> 00:06:57,599
including right one two three what's the

151
00:06:55,680 --> 00:07:02,199
right subject

152
00:06:57,599 --> 00:07:02,199
nothing okay so what's the difference

153
00:07:03,120 --> 00:07:06,639
one

154
00:07:04,319 --> 00:07:06,639
one

155
00:07:08,000 --> 00:07:13,120
sorry how many no what's the depth of

156
00:07:10,479 --> 00:07:14,720
the left sub three okay that's okay two

157
00:07:13,120 --> 00:07:17,440
what's the test on the right subtree

158
00:07:14,720 --> 00:07:20,000
nothing so what's the difference

159
00:07:17,440 --> 00:07:21,280
what's the difference okay two so it's

160
00:07:20,000 --> 00:07:22,080
not a balance

161
00:07:21,280 --> 00:07:26,000
okay

162
00:07:22,080 --> 00:07:26,000
okay one more the last last one

163
00:07:28,800 --> 00:07:30,960
is

164
00:07:35,120 --> 00:07:39,199
that's two that's one yes

165
00:07:37,199 --> 00:07:40,319
okay okay that's it

166
00:07:39,199 --> 00:07:43,199
so

167
00:07:40,319 --> 00:07:44,800
okay so we first of all we we can what's

168
00:07:43,199 --> 00:07:46,560
your approach i mean

169
00:07:44,800 --> 00:07:49,199
what's our approach

170
00:07:46,560 --> 00:07:49,199
of doing that

171
00:07:51,919 --> 00:07:55,680
what's our approach

172
00:07:53,759 --> 00:07:58,479
what's our approach of solving this

173
00:07:55,680 --> 00:08:00,960
problem i mean we are we need to check

174
00:07:58,479 --> 00:08:02,720
every node for the depths of the left

175
00:08:00,960 --> 00:08:05,599
chop tree and the right substrate do you

176
00:08:02,720 --> 00:08:08,080
still remember how do we get the uh

177
00:08:05,599 --> 00:08:09,280
to the left sub the depth the height of

178
00:08:08,080 --> 00:08:11,199
the

179
00:08:09,280 --> 00:08:13,280
final tree yeah

180
00:08:11,199 --> 00:08:16,639
do you still remember

181
00:08:13,280 --> 00:08:19,280
define okay we use we can use the

182
00:08:16,639 --> 00:08:20,400
first uh the

183
00:08:19,280 --> 00:08:22,240
recursion

184
00:08:20,400 --> 00:08:23,599
okay

185
00:08:22,240 --> 00:08:25,440
look

186
00:08:23,599 --> 00:08:28,890
okay can you complete this function come

187
00:08:25,440 --> 00:08:30,479
on every line come on come on

188
00:08:28,890 --> 00:08:33,200
[Music]

189
00:08:30,479 --> 00:08:35,120
this this function returns the height

190
00:08:33,200 --> 00:08:36,080
the depth of a

191
00:08:35,120 --> 00:08:38,320
of a

192
00:08:36,080 --> 00:08:39,120
tree with the root

193
00:08:38,320 --> 00:08:40,560
so

194
00:08:39,120 --> 00:08:42,560
if not root

195
00:08:40,560 --> 00:08:44,880
will return what

196
00:08:42,560 --> 00:08:44,880
come on

197
00:08:46,399 --> 00:08:51,200
the height what's the height of it

198
00:08:48,959 --> 00:08:53,040
an empty node what's the height height

199
00:08:51,200 --> 00:08:54,560
the depth

200
00:08:53,040 --> 00:08:58,160
this is one

201
00:08:54,560 --> 00:09:00,720
this is one note one so this is two

202
00:08:58,160 --> 00:09:03,360
this is three so empty

203
00:09:00,720 --> 00:09:03,360
is what

204
00:09:03,440 --> 00:09:07,279
is nothing what's nothing

205
00:09:09,279 --> 00:09:11,200
yeah

206
00:09:09,880 --> 00:09:12,800
[Music]

207
00:09:11,200 --> 00:09:14,720
okay so now

208
00:09:12,800 --> 00:09:17,839
we want to return the height okay so

209
00:09:14,720 --> 00:09:19,920
return the height so if i know

210
00:09:17,839 --> 00:09:22,800
what's the height of this knob of this

211
00:09:19,920 --> 00:09:23,920
tree

212
00:09:22,800 --> 00:09:25,120
three

213
00:09:23,920 --> 00:09:27,839
one

214
00:09:25,120 --> 00:09:30,800
one two three four yeah this is the

215
00:09:27,839 --> 00:09:33,440
bigger okay so look so this we want to

216
00:09:30,800 --> 00:09:34,839
this is the rule here

217
00:09:33,440 --> 00:09:37,839
this is

218
00:09:34,839 --> 00:09:39,360
ryan so what's this what's the height of

219
00:09:37,839 --> 00:09:42,160
this bit

220
00:09:39,360 --> 00:09:45,440
if this function is set

221
00:09:42,160 --> 00:09:45,440
what's the height of this bit

222
00:09:46,720 --> 00:09:51,600
yes so how do we call it if we have this

223
00:09:49,120 --> 00:09:54,240
function to return the

224
00:09:51,600 --> 00:09:56,640
the height of the this entire tree we

225
00:09:54,240 --> 00:09:58,480
pass the root into the depth function

226
00:09:56,640 --> 00:10:00,640
that will give us the height of the

227
00:09:58,480 --> 00:10:04,279
these three so what's the height of the

228
00:10:00,640 --> 00:10:04,279
left tree

229
00:10:05,279 --> 00:10:10,480
what's the root of a left tree

230
00:10:07,760 --> 00:10:10,480
death what

231
00:10:12,560 --> 00:10:17,399
yeah

232
00:10:13,600 --> 00:10:17,399
and what's the right

233
00:10:22,880 --> 00:10:27,920
and what's the three of these whole big

234
00:10:25,839 --> 00:10:30,720
okay so look at the left

235
00:10:27,920 --> 00:10:32,959
equals depth

236
00:10:30,720 --> 00:10:32,959
through

237
00:10:39,120 --> 00:10:42,079
right

238
00:10:40,880 --> 00:10:44,720
yeah

239
00:10:42,079 --> 00:10:49,360
and then we should return what

240
00:10:44,720 --> 00:10:52,240
pretend what now now the speed is left

241
00:10:49,360 --> 00:10:54,480
now this speed the value is right

242
00:10:52,240 --> 00:10:57,120
so what's the what's the value for this

243
00:10:54,480 --> 00:10:57,120
note now

244
00:10:57,600 --> 00:11:01,200
you should pick

245
00:10:58,880 --> 00:11:03,600
which one

246
00:11:01,200 --> 00:11:05,360
the what

247
00:11:03,600 --> 00:11:07,440
what's what's the height of a tree

248
00:11:05,360 --> 00:11:10,399
defined

249
00:11:07,440 --> 00:11:11,920
most maximum okay so prevent

250
00:11:10,399 --> 00:11:13,040
maximum

251
00:11:11,920 --> 00:11:16,399
left

252
00:11:13,040 --> 00:11:19,200
right and i need to press what

253
00:11:16,399 --> 00:11:20,780
let's try to ask what

254
00:11:19,200 --> 00:11:25,440
plus how many the test

255
00:11:20,780 --> 00:11:29,600
[Music]

256
00:11:25,440 --> 00:11:32,480
so we we know like the tree that the the

257
00:11:29,600 --> 00:11:36,240
level the the the depth of the tree on

258
00:11:32,480 --> 00:11:38,399
the left is left right is right

259
00:11:36,240 --> 00:11:40,480
and if we have one more note what's the

260
00:11:38,399 --> 00:11:44,079
level going to be

261
00:11:40,480 --> 00:11:46,720
so plus zero one one okay why you plus

262
00:11:44,079 --> 00:11:48,959
zero plus zero is nothing

263
00:11:46,720 --> 00:11:48,959
e

264
00:11:49,200 --> 00:11:52,079
so look we have this yeah

265
00:11:51,120 --> 00:11:54,240
okay

266
00:11:52,079 --> 00:11:56,240
so this is a useful function for us to

267
00:11:54,240 --> 00:11:57,200
determine if the tree is the binary

268
00:11:56,240 --> 00:12:00,160
balance

269
00:11:57,200 --> 00:12:02,000
now we just have to keep please look if

270
00:12:00,160 --> 00:12:04,639
this function is present yeah

271
00:12:02,000 --> 00:12:08,160
so how do we check if it's balanced

272
00:12:04,639 --> 00:12:08,160
if we are given this function

273
00:12:08,240 --> 00:12:10,639
b a

274
00:12:12,720 --> 00:12:17,040
okay so if the root is numb or if not

275
00:12:16,000 --> 00:12:19,360
root

276
00:12:17,040 --> 00:12:22,160
then we return true okay

277
00:12:19,360 --> 00:12:24,720
if the empty node is balanced

278
00:12:22,160 --> 00:12:26,720
okay then

279
00:12:24,720 --> 00:12:28,480
if this tree is balanced

280
00:12:26,720 --> 00:12:31,360
the left three

281
00:12:28,480 --> 00:12:34,800
must be parents right

282
00:12:31,360 --> 00:12:36,160
the right three must be balanced right

283
00:12:34,800 --> 00:12:38,639
am i right

284
00:12:36,160 --> 00:12:40,480
make sense yeah if that's true it's not

285
00:12:38,639 --> 00:12:42,560
balanced then the entire tree is not

286
00:12:40,480 --> 00:12:44,480
balanced am right do you agree

287
00:12:42,560 --> 00:12:46,480
if right three is not balanced the

288
00:12:44,480 --> 00:12:47,920
entire tree is not balanced

289
00:12:46,480 --> 00:12:48,720
okay

290
00:12:47,920 --> 00:12:51,360
so

291
00:12:48,720 --> 00:12:52,720
then i can say we can

292
00:12:51,360 --> 00:12:57,279
i need to say

293
00:12:52,720 --> 00:12:57,279
is balance i call itself balance

294
00:13:03,279 --> 00:13:06,000
is balance

295
00:13:06,240 --> 00:13:07,839
right

296
00:13:06,760 --> 00:13:09,279
[Music]

297
00:13:07,839 --> 00:13:11,040
okay

298
00:13:09,279 --> 00:13:13,920
these three needs to be balanced these

299
00:13:11,040 --> 00:13:15,200
three needs to be balanced and

300
00:13:13,920 --> 00:13:18,079
the depth

301
00:13:15,200 --> 00:13:20,880
of the left and the right

302
00:13:18,079 --> 00:13:24,079
is no more than one right

303
00:13:20,880 --> 00:13:26,320
makes sense so at any point at any point

304
00:13:24,079 --> 00:13:28,160
because we're calling itself at any

305
00:13:26,320 --> 00:13:30,320
point at each note

306
00:13:28,160 --> 00:13:32,720
at each note because look it's balance

307
00:13:30,320 --> 00:13:37,360
is calling itself it's a recursion

308
00:13:32,720 --> 00:13:40,639
right so we need to make sure every node

309
00:13:37,360 --> 00:13:40,639
in terms of every node

310
00:13:40,959 --> 00:13:44,720
then the depth of the left tree and the

311
00:13:43,680 --> 00:13:46,560
right three

312
00:13:44,720 --> 00:13:48,480
is no more than one the difference so we

313
00:13:46,560 --> 00:13:50,320
need to put here

314
00:13:48,480 --> 00:13:52,320
the depth

315
00:13:50,320 --> 00:13:53,279
of root of left

316
00:13:52,320 --> 00:13:54,959
uh

317
00:13:53,279 --> 00:13:58,160
to the left yeah

318
00:13:54,959 --> 00:14:01,360
and the depth of little y

319
00:13:58,160 --> 00:14:03,600
minus test right smaller equal than one

320
00:14:01,360 --> 00:14:05,519
okay smaller than one

321
00:14:03,600 --> 00:14:08,560
yeah

322
00:14:05,519 --> 00:14:09,920
the time complexity for this one

323
00:14:08,560 --> 00:14:13,040
you tell me if

324
00:14:09,920 --> 00:14:15,199
is it oh and or no or more come on look

325
00:14:13,040 --> 00:14:17,440
i'm calling it i'm calling i i need to

326
00:14:15,199 --> 00:14:21,040
check each note and for each note i need

327
00:14:17,440 --> 00:14:24,000
to recursively call this function

328
00:14:21,040 --> 00:14:26,800
to find out the the depth of the

329
00:14:24,000 --> 00:14:27,839
left and the right tree so

330
00:14:26,800 --> 00:14:28,800
so

331
00:14:27,839 --> 00:14:30,880
so

332
00:14:28,800 --> 00:14:34,320
one question for each note do we have to

333
00:14:30,880 --> 00:14:36,320
visit how many times we waited one note

334
00:14:34,320 --> 00:14:38,480
for example if i want to visit how many

335
00:14:36,320 --> 00:14:40,720
times i will visit this note the last

336
00:14:38,480 --> 00:14:40,720
term

337
00:14:41,680 --> 00:14:47,199
one more than one to answer

338
00:14:48,730 --> 00:14:51,920
[Music]

339
00:14:50,160 --> 00:14:54,320
look here i'm calling this function

340
00:14:51,920 --> 00:14:56,560
experience

341
00:14:54,320 --> 00:14:59,199
because look it's balance new the left

342
00:14:56,560 --> 00:15:02,320
we call it we definitely visit this

343
00:14:59,199 --> 00:15:03,839
right and accept new left

344
00:15:02,320 --> 00:15:06,720
definitely visit it

345
00:15:03,839 --> 00:15:08,959
right so this complexity okay it's a

346
00:15:06,720 --> 00:15:11,680
little bit out of scope because it's a

347
00:15:08,959 --> 00:15:14,480
little bit complex okay it's all n log n

348
00:15:11,680 --> 00:15:15,920
okay because this is the balance

349
00:15:14,480 --> 00:15:17,690
you know usually

350
00:15:15,920 --> 00:15:18,800
balance three

351
00:15:17,690 --> 00:15:21,279
[Music]

352
00:15:18,800 --> 00:15:23,279
the problem is what the problem is that

353
00:15:21,279 --> 00:15:25,680
for each node we are calling this

354
00:15:23,279 --> 00:15:27,600
function this will take another o and

355
00:15:25,680 --> 00:15:28,639
turn in the worst case

356
00:15:27,600 --> 00:15:31,839
right

357
00:15:28,639 --> 00:15:34,320
you know we take another one time to

358
00:15:31,839 --> 00:15:36,880
find out the depth for each note right

359
00:15:34,320 --> 00:15:39,120
so this is the top-down dynamic top-down

360
00:15:36,880 --> 00:15:40,480
recursion because

361
00:15:39,120 --> 00:15:42,480
we

362
00:15:40,480 --> 00:15:44,000
top down yeah we're starting from the

363
00:15:42,480 --> 00:15:45,360
top down

364
00:15:44,000 --> 00:15:47,680
for each note

365
00:15:45,360 --> 00:15:50,399
i need to check

366
00:15:47,680 --> 00:15:52,560
i need to check if the depth of the left

367
00:15:50,399 --> 00:15:55,360
and right tree is no more than one and i

368
00:15:52,560 --> 00:15:58,560
need to also need to call the recursion

369
00:15:55,360 --> 00:16:01,040
to check if this subtree is uh balancing

370
00:15:58,560 --> 00:16:03,440
okay so this is top down look i want to

371
00:16:01,040 --> 00:16:06,639
find out if this loop the tree of

372
00:16:03,440 --> 00:16:09,360
starting from is the balance tree right

373
00:16:06,639 --> 00:16:12,000
yeah so then i need to go go down the

374
00:16:09,360 --> 00:16:14,320
tree and to leave

375
00:16:12,000 --> 00:16:17,360
to leave to find out if the tree is the

376
00:16:14,320 --> 00:16:21,639
better so this is top down right yeah so

377
00:16:17,360 --> 00:16:21,639
we can do better we can do better

378
00:16:22,800 --> 00:16:26,800
so

379
00:16:24,880 --> 00:16:28,639
so yeah look at this function here look

380
00:16:26,800 --> 00:16:32,880
at this one here i'm talking about this

381
00:16:28,639 --> 00:16:32,880
one here yeah just this function that's

382
00:16:33,199 --> 00:16:36,959
yeah this function don't think

383
00:16:35,519 --> 00:16:38,079
i'm not singing

384
00:16:36,959 --> 00:16:41,440
okay

385
00:16:38,079 --> 00:16:44,160
so look at that what's this thing to you

386
00:16:41,440 --> 00:16:45,680
he's doing that

387
00:16:44,160 --> 00:16:47,920
again

388
00:16:45,680 --> 00:16:50,880
sorry

389
00:16:47,920 --> 00:16:53,920
yeah cutting the tabs yeah okay so and

390
00:16:50,880 --> 00:16:56,320
at any point if we we going from the to

391
00:16:53,920 --> 00:16:58,480
the leaves yeah to the leaves

392
00:16:56,320 --> 00:17:00,079
and then if we go up go from the bottle

393
00:16:58,480 --> 00:17:02,079
to the up

394
00:17:00,079 --> 00:17:03,279
in this direction how can we do it look

395
00:17:02,079 --> 00:17:05,600
if

396
00:17:03,279 --> 00:17:06,799
all i have to do is to add one thing

397
00:17:05,600 --> 00:17:09,439
here

398
00:17:06,799 --> 00:17:10,799
to check right so look

399
00:17:09,439 --> 00:17:13,199
uh

400
00:17:10,799 --> 00:17:15,120
if this function still does what it's

401
00:17:13,199 --> 00:17:16,160
supposed to do to return the height of

402
00:17:15,120 --> 00:17:18,799
the

403
00:17:16,160 --> 00:17:21,760
the final tree right

404
00:17:18,799 --> 00:17:23,280
but if at any point we find out look we

405
00:17:21,760 --> 00:17:24,160
have already known the left and right

406
00:17:23,280 --> 00:17:26,480
here

407
00:17:24,160 --> 00:17:28,000
yeah if at any point we find out that

408
00:17:26,480 --> 00:17:30,640
the difference between the left and

409
00:17:28,000 --> 00:17:32,559
right is more than one

410
00:17:30,640 --> 00:17:34,799
then we can we know

411
00:17:32,559 --> 00:17:36,400
it's not a balanced binary tree right

412
00:17:34,799 --> 00:17:39,120
because dependent explanation the

413
00:17:36,400 --> 00:17:42,880
definition is that for each for every

414
00:17:39,120 --> 00:17:46,160
node right for every node it has to be

415
00:17:42,880 --> 00:17:48,160
it has to be satisfying that the depth

416
00:17:46,160 --> 00:17:50,080
of the left and the right is no more

417
00:17:48,160 --> 00:17:52,320
than one

418
00:17:50,080 --> 00:17:52,320
yeah

419
00:17:52,559 --> 00:17:55,919
so here

420
00:17:53,679 --> 00:17:59,600
then we say if

421
00:17:55,919 --> 00:18:01,360
absolute difference okay absolute value

422
00:17:59,600 --> 00:18:02,559
abs

423
00:18:01,360 --> 00:18:04,720
left

424
00:18:02,559 --> 00:18:07,679
minus right

425
00:18:04,720 --> 00:18:09,520
is bigger than one right so this is not

426
00:18:07,679 --> 00:18:12,080
a balanced value so we need to set it

427
00:18:09,520 --> 00:18:15,280
somewhere let's say self

428
00:18:12,080 --> 00:18:16,880
the answer equals true we set it to true

429
00:18:15,280 --> 00:18:17,760
and then we can set it to first here

430
00:18:16,880 --> 00:18:21,120
seth

431
00:18:17,760 --> 00:18:22,960
dot answer equals four okay

432
00:18:21,120 --> 00:18:24,799
and then

433
00:18:22,960 --> 00:18:27,039
and now we can just return self to

434
00:18:24,799 --> 00:18:30,080
answer make sense

435
00:18:27,039 --> 00:18:30,080
so so

436
00:18:33,360 --> 00:18:36,799
yeah ryan do you understand right

437
00:18:35,520 --> 00:18:38,240
okay

438
00:18:36,799 --> 00:18:39,120
yeah so

439
00:18:38,240 --> 00:18:41,200
so

440
00:18:39,120 --> 00:18:43,679
what's the time complexity for this one

441
00:18:41,200 --> 00:18:45,520
look if i just adding a check

442
00:18:43,679 --> 00:18:47,440
here

443
00:18:45,520 --> 00:18:48,960
if i'm just adding a check look what's

444
00:18:47,440 --> 00:18:51,200
the difference the blue one the green

445
00:18:48,960 --> 00:18:51,200
one

446
00:18:51,840 --> 00:18:57,520
so this function is to get a checklist

447
00:18:54,720 --> 00:19:00,559
yeah look look at this is the function

448
00:18:57,520 --> 00:19:01,679
that's root and then it will be here and

449
00:19:00,559 --> 00:19:04,320
here right

450
00:19:01,679 --> 00:19:07,120
but at any point in terms of this the

451
00:19:04,320 --> 00:19:08,000
understanding of the root and then now i

452
00:19:07,120 --> 00:19:10,080
know

453
00:19:08,000 --> 00:19:11,760
the left and the right three the depths

454
00:19:10,080 --> 00:19:14,000
are left and right

455
00:19:11,760 --> 00:19:16,000
and at any note because look at each

456
00:19:14,000 --> 00:19:18,720
note this note each note will be visited

457
00:19:16,000 --> 00:19:20,080
once and we at each note we know the

458
00:19:18,720 --> 00:19:21,280
left and right

459
00:19:20,080 --> 00:19:23,600
yeah

460
00:19:21,280 --> 00:19:25,280
so even at that point the left and right

461
00:19:23,600 --> 00:19:27,200
the difference is more than one now we

462
00:19:25,280 --> 00:19:30,000
know it's not a balanced planetary and

463
00:19:27,200 --> 00:19:31,600
we can set the flag somewhere serve the

464
00:19:30,000 --> 00:19:33,840
answer yeah

465
00:19:31,600 --> 00:19:33,840
okay

466
00:19:35,120 --> 00:19:39,600
oh we can read oh can we we can rewrite

467
00:19:37,440 --> 00:19:41,840
this function yeah we can rewrite this

468
00:19:39,600 --> 00:19:44,320
function to return okay i'm not going to

469
00:19:41,840 --> 00:19:46,320
explain it uh expand here if it's a

470
00:19:44,320 --> 00:19:49,039
similar idea so we can return this

471
00:19:46,320 --> 00:19:52,000
function for example to return

472
00:19:49,039 --> 00:19:53,919
if the left tree is the balance tree

473
00:19:52,000 --> 00:19:56,799
the tougher yeah between the topper the

474
00:19:53,919 --> 00:19:57,790
left tree is balance and the left height

475
00:19:56,799 --> 00:19:59,200
the height

476
00:19:57,790 --> 00:20:01,440
[Music]

477
00:19:59,200 --> 00:20:01,440
okay

478
00:20:01,600 --> 00:20:07,039
if the when we return the height we

479
00:20:04,159 --> 00:20:08,799
return it with balance three or no the

480
00:20:07,039 --> 00:20:10,880
first value of the total the second

481
00:20:08,799 --> 00:20:13,360
value is the height of the

482
00:20:10,880 --> 00:20:16,320
height of the tree and we can return

483
00:20:13,360 --> 00:20:20,159
these two values for the uh

484
00:20:16,320 --> 00:20:23,120
so that will return

485
00:20:20,159 --> 00:20:26,400
written one return a value uh

486
00:20:23,120 --> 00:20:28,400
it's balance let's say it's balance b

487
00:20:26,400 --> 00:20:30,880
and then that will be c okay

488
00:20:28,400 --> 00:20:30,880
and then

489
00:20:31,200 --> 00:20:38,320
and then here we can return return a b

490
00:20:35,120 --> 00:20:40,799
as that minus y is smaller than equal

491
00:20:38,320 --> 00:20:42,480
than one and the the second value of in

492
00:20:40,799 --> 00:20:45,600
this cycle will be the height

493
00:20:42,480 --> 00:20:46,640
right and then if not b then we turn

494
00:20:45,600 --> 00:20:49,760
four

495
00:20:46,640 --> 00:20:51,440
zero if not c then we don't return force

496
00:20:49,760 --> 00:20:53,039
yeah okay so this is another similar

497
00:20:51,440 --> 00:20:56,559
idea yeah

498
00:20:53,039 --> 00:20:58,320
so and then we can return the test route

499
00:20:56,559 --> 00:21:01,120
the first value which is

500
00:20:58,320 --> 00:21:03,440
which is indicating if the tree is

501
00:21:01,120 --> 00:21:05,679
balanced or not the second value of the

502
00:21:03,440 --> 00:21:06,880
tupper will be the height the first

503
00:21:05,679 --> 00:21:09,840
value will be

504
00:21:06,880 --> 00:21:12,480
indicating if the tree is the balancer

505
00:21:09,840 --> 00:21:13,840
right this is uh also okay

506
00:21:12,480 --> 00:21:17,679
make sense

507
00:21:13,840 --> 00:21:19,919
so which one you think is better

508
00:21:17,679 --> 00:21:20,960
it's good you can remember the shorter

509
00:21:19,919 --> 00:21:21,840
one

510
00:21:20,960 --> 00:21:23,520
yeah

511
00:21:21,840 --> 00:21:25,520
we talked about this before yeah

512
00:21:23,520 --> 00:21:26,880
computer depth long long time ago in the

513
00:21:25,520 --> 00:21:28,559
first

514
00:21:26,880 --> 00:21:29,600
maybe 50 days

515
00:21:28,559 --> 00:21:30,480
yeah

516
00:21:29,600 --> 00:21:32,640
yeah

517
00:21:30,480 --> 00:21:33,840
okay

518
00:21:32,640 --> 00:21:35,679
okay

519
00:21:33,840 --> 00:21:37,039
let the time complexity for this one is

520
00:21:35,679 --> 00:21:39,120
one okay

521
00:21:37,039 --> 00:21:40,240
all right because each node is visited

522
00:21:39,120 --> 00:21:42,080
only once

523
00:21:40,240 --> 00:21:44,400
the space complexity is also open

524
00:21:42,080 --> 00:21:47,440
because we are using the recursion right

525
00:21:44,400 --> 00:21:50,640
this is kind of top down bottom up yeah

526
00:21:47,440 --> 00:21:53,679
right because it will be originally n

527
00:21:50,640 --> 00:21:56,400
which is yellow and then

528
00:21:53,679 --> 00:21:58,080
and then you build up from the bottom up

529
00:21:56,400 --> 00:22:00,640
right

530
00:21:58,080 --> 00:22:02,080
make sense do you understand

531
00:22:00,640 --> 00:22:04,000
yeah

532
00:22:02,080 --> 00:22:06,320
okay let's say for today do some ending

533
00:22:04,000 --> 00:22:09,600
please do something

534
00:22:06,320 --> 00:22:10,880
ready steady go

535
00:22:09,600 --> 00:22:11,840
are you okay

536
00:22:10,880 --> 00:22:13,520
yes yeah

537
00:22:11,840 --> 00:22:15,760
come on

538
00:22:13,520 --> 00:22:19,600
bye bye

539
00:22:15,760 --> 00:22:19,600
bye bye bye bye

