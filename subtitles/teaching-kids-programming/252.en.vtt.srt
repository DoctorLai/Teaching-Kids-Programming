1
00:00:00,080 --> 00:00:03,990

hey hello mr mr ryan how are you today

2
00:00:03,990 --> 00:00:04,000
hey hello mr mr ryan how are you today
 

3
00:00:04,000 --> 00:00:07,909
hey hello mr mr ryan how are you today
okay so what's gcd

4
00:00:07,909 --> 00:00:07,919
okay so what's gcd
 

5
00:00:07,919 --> 00:00:11,030
okay so what's gcd
crazy communicator okay so

6
00:00:11,030 --> 00:00:11,040
crazy communicator okay so
 

7
00:00:11,040 --> 00:00:14,150
crazy communicator okay so
grade is common divisor for numbers two

8
00:00:14,150 --> 00:00:14,160
grade is common divisor for numbers two
 

9
00:00:14,160 --> 00:00:15,829
grade is common divisor for numbers two
numbers let's say

10
00:00:15,829 --> 00:00:15,839
numbers let's say
 

11
00:00:15,839 --> 00:00:17,670
numbers let's say
four and six what's the greatest common

12
00:00:17,670 --> 00:00:17,680
four and six what's the greatest common
 

13
00:00:17,680 --> 00:00:19,750
four and six what's the greatest common
divisor of this all these two numbers

14
00:00:19,750 --> 00:00:19,760
divisor of this all these two numbers
 

15
00:00:19,760 --> 00:00:22,950
divisor of this all these two numbers
two two why is that

16
00:00:22,950 --> 00:00:22,960
two two why is that
 

17
00:00:22,960 --> 00:00:24,470
two two why is that
because they could make in the two

18
00:00:24,470 --> 00:00:24,480
because they could make in the two
 

19
00:00:24,480 --> 00:00:26,630
because they could make in the two
screen tables and which is the largest

20
00:00:26,630 --> 00:00:26,640
screen tables and which is the largest
 

21
00:00:26,640 --> 00:00:27,349
screen tables and which is the largest
one yeah

22
00:00:27,349 --> 00:00:27,359
one yeah
 

23
00:00:27,359 --> 00:00:31,349
one yeah
yeah okay so okay so we have uh

24
00:00:31,349 --> 00:00:31,359
yeah okay so okay so we have uh
 

25
00:00:31,359 --> 00:00:32,870
yeah okay so okay so we have uh
today we talked about the quality common

26
00:00:32,870 --> 00:00:32,880
today we talked about the quality common
 

27
00:00:32,880 --> 00:00:34,709
today we talked about the quality common
divisor for the strings

28
00:00:34,709 --> 00:00:34,719
divisor for the strings
 

29
00:00:34,719 --> 00:00:38,150
divisor for the strings
like eric eric

30
00:00:38,150 --> 00:00:38,160
like eric eric
 

31
00:00:38,160 --> 00:00:42,830
like eric eric
yeah is is

32
00:00:42,830 --> 00:00:42,840
yeah is is
 

33
00:00:42,840 --> 00:00:46,790
yeah is is
eric

34
00:00:46,790 --> 00:00:46,800

 

35
00:00:46,800 --> 00:00:51,430

eric okay

36
00:00:51,430 --> 00:00:51,440
eric okay
 

37
00:00:51,440 --> 00:00:54,310
eric okay
so the greatest common divisor of

38
00:00:54,310 --> 00:00:54,320
so the greatest common divisor of
 

39
00:00:54,320 --> 00:00:54,950
so the greatest common divisor of
everything

40
00:00:54,950 --> 00:00:54,960
everything
 

41
00:00:54,960 --> 00:00:56,869
everything
every eric is everything it's average

42
00:00:56,869 --> 00:00:56,879
every eric is everything it's average
 

43
00:00:56,879 --> 00:00:58,310
every eric is everything it's average
okay because look

44
00:00:58,310 --> 00:00:58,320
okay because look
 

45
00:00:58,320 --> 00:01:02,709
okay because look
both go into eric's same time table okay

46
00:01:02,709 --> 00:01:02,719
both go into eric's same time table okay
 

47
00:01:02,719 --> 00:01:05,350
both go into eric's same time table okay
okay doesn't make sense and the whole

48
00:01:05,350 --> 00:01:05,360
okay doesn't make sense and the whole
 

49
00:01:05,360 --> 00:01:06,789
okay doesn't make sense and the whole
body first

50
00:01:06,789 --> 00:01:06,799
body first
 

51
00:01:06,799 --> 00:01:10,630
body first
ryan i learned that

52
00:01:10,630 --> 00:01:10,640
ryan i learned that
 

53
00:01:10,640 --> 00:01:15,270
ryan i learned that
let's say ryan

54
00:01:15,270 --> 00:01:15,280
let's say ryan
 

55
00:01:15,280 --> 00:01:18,630
let's say ryan
eric something

56
00:01:18,630 --> 00:01:18,640
eric something
 

57
00:01:18,640 --> 00:01:21,749
eric something
yeah doesn't nothing nothing

58
00:01:21,749 --> 00:01:21,759
yeah doesn't nothing nothing
 

59
00:01:21,759 --> 00:01:24,789
yeah doesn't nothing nothing
why is that

60
00:01:24,789 --> 00:01:24,799

 

61
00:01:24,799 --> 00:01:29,590

because eric isn't my toy table

62
00:01:29,590 --> 00:01:29,600
because eric isn't my toy table
 

63
00:01:29,600 --> 00:01:32,870
because eric isn't my toy table
because because these these needs to

64
00:01:32,870 --> 00:01:32,880
because because these these needs to
 

65
00:01:32,880 --> 00:01:36,390
because because these these needs to
ryan you know face a really big string

66
00:01:36,390 --> 00:01:36,400
ryan you know face a really big string
 

67
00:01:36,400 --> 00:01:38,870
ryan you know face a really big string
yeah it needs to be repeated by the

68
00:01:38,870 --> 00:01:38,880
yeah it needs to be repeated by the
 

69
00:01:38,880 --> 00:01:40,149
yeah it needs to be repeated by the
consists of a small

70
00:01:40,149 --> 00:01:40,159
consists of a small
 

71
00:01:40,159 --> 00:01:42,550
consists of a small
small part right so these cannot be

72
00:01:42,550 --> 00:01:42,560
small part right so these cannot be
 

73
00:01:42,560 --> 00:01:45,590
small part right so these cannot be
divided by right because it does not

74
00:01:45,590 --> 00:01:45,600
divided by right because it does not
 

75
00:01:45,600 --> 00:01:48,789
divided by right because it does not
made up of pure ryan because it may also

76
00:01:48,789 --> 00:01:48,799
made up of pure ryan because it may also
 

77
00:01:48,799 --> 00:01:49,510
made up of pure ryan because it may also
have made up

78
00:01:49,510 --> 00:01:49,520
have made up
 

79
00:01:49,520 --> 00:01:53,830
have made up
with eric right yeah but

80
00:01:53,830 --> 00:01:53,840
with eric right yeah but
 

81
00:01:53,840 --> 00:01:57,190
with eric right yeah but
eric ryan

82
00:01:57,190 --> 00:01:57,200
eric ryan
 

83
00:01:57,200 --> 00:02:02,069
eric ryan
and eric ryan

84
00:02:02,069 --> 00:02:02,079

 

85
00:02:02,079 --> 00:02:04,950

eric ryan so what's the greatest common

86
00:02:04,950 --> 00:02:04,960
eric ryan so what's the greatest common
 

87
00:02:04,960 --> 00:02:06,469
eric ryan so what's the greatest common
device

88
00:02:06,469 --> 00:02:06,479
device
 

89
00:02:06,479 --> 00:02:08,869
device
yeah you see because look every grind

90
00:02:08,869 --> 00:02:08,879
yeah you see because look every grind
 

91
00:02:08,879 --> 00:02:11,110
yeah you see because look every grind
yeah consists of these two

92
00:02:11,110 --> 00:02:11,120
yeah consists of these two
 

93
00:02:11,120 --> 00:02:14,150
yeah consists of these two
okay so you got it so

94
00:02:14,150 --> 00:02:14,160
okay so you got it so
 

95
00:02:14,160 --> 00:02:17,910
okay so you got it so
so how can we do it so basically we want

96
00:02:17,910 --> 00:02:17,920
so how can we do it so basically we want
 

97
00:02:17,920 --> 00:02:18,550
so how can we do it so basically we want
to find

98
00:02:18,550 --> 00:02:18,560
to find
 

99
00:02:18,560 --> 00:02:22,390
to find
a string two strings a and b

100
00:02:22,390 --> 00:02:22,400
a string two strings a and b
 

101
00:02:22,400 --> 00:02:25,910
a string two strings a and b
and b let's call it s and t

102
00:02:25,910 --> 00:02:25,920
and b let's call it s and t
 

103
00:02:25,920 --> 00:02:28,150
and b let's call it s and t
s and t we want to find out the large

104
00:02:28,150 --> 00:02:28,160
s and t we want to find out the large
 

105
00:02:28,160 --> 00:02:29,190
s and t we want to find out the large
partial

106
00:02:29,190 --> 00:02:29,200
partial
 

107
00:02:29,200 --> 00:02:32,790
partial
portion of of

108
00:02:32,790 --> 00:02:32,800
portion of of
 

109
00:02:32,800 --> 00:02:36,309
portion of of
of s right it could be it could be

110
00:02:36,309 --> 00:02:36,319
of s right it could be it could be
 

111
00:02:36,319 --> 00:02:40,070
of s right it could be it could be
it could be something like that a b c

112
00:02:40,070 --> 00:02:40,080
it could be something like that a b c
 

113
00:02:40,080 --> 00:02:43,110
it could be something like that a b c
a b a b

114
00:02:43,110 --> 00:02:43,120
a b a b
 

115
00:02:43,120 --> 00:02:46,470
a b a b
a b and then here will be

116
00:02:46,470 --> 00:02:46,480
a b and then here will be
 

117
00:02:46,480 --> 00:02:50,710
a b and then here will be
a b a b a b

118
00:02:50,710 --> 00:02:50,720
a b a b a b
 

119
00:02:50,720 --> 00:02:53,750
a b a b a b
look so what's nothing no

120
00:02:53,750 --> 00:02:53,760
look so what's nothing no
 

121
00:02:53,760 --> 00:02:57,509
look so what's nothing no
a b a it would be a b

122
00:02:57,509 --> 00:02:57,519
a b a it would be a b
 

123
00:02:57,519 --> 00:02:59,350
a b a it would be a b
right but it's not a b a b because there

124
00:02:59,350 --> 00:02:59,360
right but it's not a b a b because there
 

125
00:02:59,360 --> 00:03:01,350
right but it's not a b a b because there
are only three parts

126
00:03:01,350 --> 00:03:01,360
are only three parts
 

127
00:03:01,360 --> 00:03:03,990
are only three parts
they are they are two right so let's

128
00:03:03,990 --> 00:03:04,000
they are they are two right so let's
 

129
00:03:04,000 --> 00:03:05,670
they are they are two right so let's
that's the greatest common divisor is

130
00:03:05,670 --> 00:03:05,680
that's the greatest common divisor is
 

131
00:03:05,680 --> 00:03:07,509
that's the greatest common divisor is
280

132
00:03:07,509 --> 00:03:07,519
280
 

133
00:03:07,519 --> 00:03:13,430
280
okay yeah make sense

134
00:03:13,430 --> 00:03:13,440

 

135
00:03:13,440 --> 00:03:16,390

does it make sense if i put another a b

136
00:03:16,390 --> 00:03:16,400
does it make sense if i put another a b
 

137
00:03:16,400 --> 00:03:23,750
does it make sense if i put another a b
here yeah

138
00:03:23,750 --> 00:03:23,760

 

139
00:03:23,760 --> 00:03:27,270

yeah yeah

140
00:03:27,270 --> 00:03:27,280

 

141
00:03:27,280 --> 00:03:29,830

so any idea how we're doing is we're

142
00:03:29,830 --> 00:03:29,840
so any idea how we're doing is we're
 

143
00:03:29,840 --> 00:03:30,830
so any idea how we're doing is we're
doing it by

144
00:03:30,830 --> 00:03:30,840
doing it by
 

145
00:03:30,840 --> 00:03:33,910
doing it by
string yes that's the string so

146
00:03:33,910 --> 00:03:33,920
string yes that's the string so
 

147
00:03:33,920 --> 00:03:37,830
string yes that's the string so
it's a string so so look for the numbers

148
00:03:37,830 --> 00:03:37,840
it's a string so so look for the numbers
 

149
00:03:37,840 --> 00:03:40,630
it's a string so so look for the numbers
is easy we just need to find the largest

150
00:03:40,630 --> 00:03:40,640
is easy we just need to find the largest
 

151
00:03:40,640 --> 00:03:43,110
is easy we just need to find the largest
number that goes into both

152
00:03:43,110 --> 00:03:43,120
number that goes into both
 

153
00:03:43,120 --> 00:03:46,070
number that goes into both
time table but here we want to find out

154
00:03:46,070 --> 00:03:46,080
time table but here we want to find out
 

155
00:03:46,080 --> 00:03:49,030
time table but here we want to find out
the largest of what

156
00:03:49,030 --> 00:03:49,040
the largest of what
 

157
00:03:49,040 --> 00:03:51,030
the largest of what
not a number what is that a string what

158
00:03:51,030 --> 00:03:51,040
not a number what is that a string what
 

159
00:03:51,040 --> 00:03:52,229
not a number what is that a string what
is that

160
00:03:52,229 --> 00:03:52,239
is that
 

161
00:03:52,239 --> 00:03:55,670
is that
large is what what what is this called

162
00:03:55,670 --> 00:03:55,680
large is what what what is this called
 

163
00:03:55,680 --> 00:04:00,229
large is what what what is this called
what large is what huh

164
00:04:00,229 --> 00:04:00,239
what large is what huh
 

165
00:04:00,239 --> 00:04:02,149
what large is what huh
subscribe always start with the first

166
00:04:02,149 --> 00:04:02,159
subscribe always start with the first
 

167
00:04:02,159 --> 00:04:06,550
subscribe always start with the first
one what is the call

168
00:04:06,550 --> 00:04:06,560

 

169
00:04:06,560 --> 00:04:09,190

prefix prefix yeah remember we call it

170
00:04:09,190 --> 00:04:09,200
prefix prefix yeah remember we call it
 

171
00:04:09,200 --> 00:04:10,229
prefix prefix yeah remember we call it
prefix

172
00:04:10,229 --> 00:04:10,239
prefix
 

173
00:04:10,239 --> 00:04:13,030
prefix
so we want to search before the last is

174
00:04:13,030 --> 00:04:13,040
so we want to search before the last is
 

175
00:04:13,040 --> 00:04:13,990
so we want to search before the last is
prefix that

176
00:04:13,990 --> 00:04:14,000
prefix that
 

177
00:04:14,000 --> 00:04:16,949
prefix that
goes into both content and what does it

178
00:04:16,949 --> 00:04:16,959
goes into both content and what does it
 

179
00:04:16,959 --> 00:04:18,069
goes into both content and what does it
mean by both

180
00:04:18,069 --> 00:04:18,079
mean by both
 

181
00:04:18,079 --> 00:04:21,270
mean by both
both string it's not a number anymore

182
00:04:21,270 --> 00:04:21,280
both string it's not a number anymore
 

183
00:04:21,280 --> 00:04:23,430
both string it's not a number anymore
it's a string

184
00:04:23,430 --> 00:04:23,440
it's a string
 

185
00:04:23,440 --> 00:04:25,510
it's a string
so we want to find out the last prefix

186
00:04:25,510 --> 00:04:25,520
so we want to find out the last prefix
 

187
00:04:25,520 --> 00:04:27,909
so we want to find out the last prefix
that can be made

188
00:04:27,909 --> 00:04:27,919
that can be made
 

189
00:04:27,919 --> 00:04:31,270
that can be made
made up of all the both strings

190
00:04:31,270 --> 00:04:31,280
made up of all the both strings
 

191
00:04:31,280 --> 00:04:35,510
made up of all the both strings
for example the prefix of this one a b

192
00:04:35,510 --> 00:04:35,520
for example the prefix of this one a b
 

193
00:04:35,520 --> 00:04:41,110
for example the prefix of this one a b
yeah if a b a b made up the first string

194
00:04:41,110 --> 00:04:41,120
yeah if a b a b made up the first string
 

195
00:04:41,120 --> 00:04:45,189
yeah if a b a b made up the first string
by two prefix yeah okay and then look

196
00:04:45,189 --> 00:04:45,199
by two prefix yeah okay and then look
 

197
00:04:45,199 --> 00:04:48,950
by two prefix yeah okay and then look
a b a b

198
00:04:48,950 --> 00:04:48,960
a b a b
 

199
00:04:48,960 --> 00:04:53,590
a b a b
a b a b okay so so

200
00:04:53,590 --> 00:04:53,600
a b a b okay so so
 

201
00:04:53,600 --> 00:04:57,110
a b a b okay so so
for example this area we check out

202
00:04:57,110 --> 00:04:57,120
for example this area we check out
 

203
00:04:57,120 --> 00:05:00,150
for example this area we check out
e is e the prefix

204
00:05:00,150 --> 00:05:00,160
e is e the prefix
 

205
00:05:00,160 --> 00:05:02,390
e is e the prefix
by making up the array no because it's

206
00:05:02,390 --> 00:05:02,400
by making up the array no because it's
 

207
00:05:02,400 --> 00:05:03,510
by making up the array no because it's
not e e

208
00:05:03,510 --> 00:05:03,520
not e e
 

209
00:05:03,520 --> 00:05:07,510
not e e
it's e yeah also does not make up eic

210
00:05:07,510 --> 00:05:07,520
it's e yeah also does not make up eic
 

211
00:05:07,520 --> 00:05:10,390
it's e yeah also does not make up eic
so we can only take the first word eric

212
00:05:10,390 --> 00:05:10,400
so we can only take the first word eric
 

213
00:05:10,400 --> 00:05:12,469
so we can only take the first word eric
and we check if eric makes up the first

214
00:05:12,469 --> 00:05:12,479
and we check if eric makes up the first
 

215
00:05:12,479 --> 00:05:14,550
and we check if eric makes up the first
one yet every maker first one

216
00:05:14,550 --> 00:05:14,560
one yet every maker first one
 

217
00:05:14,560 --> 00:05:16,310
one yet every maker first one
make him say second one yes because

218
00:05:16,310 --> 00:05:16,320
make him say second one yes because
 

219
00:05:16,320 --> 00:05:18,150
make him say second one yes because
every area okay

220
00:05:18,150 --> 00:05:18,160
every area okay
 

221
00:05:18,160 --> 00:05:21,189
every area okay
okay

222
00:05:21,189 --> 00:05:21,199

 

223
00:05:21,199 --> 00:05:24,230

and he's on every line is arrayed

224
00:05:24,230 --> 00:05:24,240
and he's on every line is arrayed
 

225
00:05:24,240 --> 00:05:27,510
and he's on every line is arrayed
made up of everywhere no because it does

226
00:05:27,510 --> 00:05:27,520
made up of everywhere no because it does
 

227
00:05:27,520 --> 00:05:28,230
made up of everywhere no because it does
not repeat

228
00:05:28,230 --> 00:05:28,240
not repeat
 

229
00:05:28,240 --> 00:05:31,270
not repeat
yeah so eric ryan made up of the second

230
00:05:31,270 --> 00:05:31,280
yeah so eric ryan made up of the second
 

231
00:05:31,280 --> 00:05:34,310
yeah so eric ryan made up of the second
one yes is everybody and everyone

232
00:05:34,310 --> 00:05:34,320
one yes is everybody and everyone
 

233
00:05:34,320 --> 00:05:38,629
one yes is everybody and everyone
okay so here before we got these

234
00:05:38,629 --> 00:05:38,639
okay so here before we got these
 

235
00:05:38,639 --> 00:05:41,909
okay so here before we got these
let's say it's a d

236
00:05:41,909 --> 00:05:41,919
let's say it's a d
 

237
00:05:41,919 --> 00:05:45,749
let's say it's a d
made up of a b ap yes it's a b

238
00:05:45,749 --> 00:05:45,759
made up of a b ap yes it's a b
 

239
00:05:45,759 --> 00:05:49,029
made up of a b ap yes it's a b
made up of

240
00:05:49,029 --> 00:05:49,039

 

241
00:05:49,039 --> 00:05:52,550

a b a b yes a b a b a b is a b a b

242
00:05:52,550 --> 00:05:52,560
a b a b yes a b a b a b is a b a b
 

243
00:05:52,560 --> 00:05:55,029
a b a b yes a b a b a b is a b a b
made up of abnormal because only only

244
00:05:55,029 --> 00:05:55,039
made up of abnormal because only only
 

245
00:05:55,039 --> 00:05:56,950
made up of abnormal because only only
has only one part yeah

246
00:05:56,950 --> 00:05:56,960
has only one part yeah
 

247
00:05:56,960 --> 00:05:59,990
has only one part yeah
correct there is a b and b

248
00:05:59,990 --> 00:06:00,000
correct there is a b and b
 

249
00:06:00,000 --> 00:06:03,189
correct there is a b and b
so so for the answer is a b

250
00:06:03,189 --> 00:06:03,199
so so for the answer is a b
 

251
00:06:03,199 --> 00:06:04,790
so so for the answer is a b
because these the prefix we are fighting

252
00:06:04,790 --> 00:06:04,800
because these the prefix we are fighting
 

253
00:06:04,800 --> 00:06:07,189
because these the prefix we are fighting
finding the largest prefix

254
00:06:07,189 --> 00:06:07,199
finding the largest prefix
 

255
00:06:07,199 --> 00:06:10,469
finding the largest prefix
the largest prefix which is

256
00:06:10,469 --> 00:06:10,479
the largest prefix which is
 

257
00:06:10,479 --> 00:06:13,830
the largest prefix which is
can be which can

258
00:06:13,830 --> 00:06:13,840
can be which can
 

259
00:06:13,840 --> 00:06:17,510
can be which can
you know can you if you put

260
00:06:17,510 --> 00:06:17,520
you know can you if you put
 

261
00:06:17,520 --> 00:06:20,550
you know can you if you put
put a prefix times

262
00:06:20,550 --> 00:06:20,560
put a prefix times
 

263
00:06:20,560 --> 00:06:23,110
put a prefix times
n times okay i don't know how many times

264
00:06:23,110 --> 00:06:23,120
n times okay i don't know how many times
 

265
00:06:23,120 --> 00:06:25,670
n times okay i don't know how many times
on that

266
00:06:25,670 --> 00:06:25,680

 

267
00:06:25,680 --> 00:06:28,710

times n times confirm the string

268
00:06:28,710 --> 00:06:28,720
times n times confirm the string
 

269
00:06:28,720 --> 00:06:30,230
times n times confirm the string
the first string and then the second

270
00:06:30,230 --> 00:06:30,240
the first string and then the second
 

271
00:06:30,240 --> 00:06:32,830
the first string and then the second
string and then we call this

272
00:06:32,830 --> 00:06:32,840
string and then we call this
 

273
00:06:32,840 --> 00:06:36,870
string and then we call this
prefix is the greatest comment divisor

274
00:06:36,870 --> 00:06:36,880
prefix is the greatest comment divisor
 

275
00:06:36,880 --> 00:06:40,230
prefix is the greatest comment divisor
of the string right so so

276
00:06:40,230 --> 00:06:40,240
of the string right so so
 

277
00:06:40,240 --> 00:06:43,350
of the string right so so
my turn yeah okay so

278
00:06:43,350 --> 00:06:43,360
my turn yeah okay so
 

279
00:06:43,360 --> 00:06:49,749
my turn yeah okay so
let's implement this one okay

280
00:06:49,749 --> 00:06:49,759
let's implement this one okay
 

281
00:06:49,759 --> 00:06:51,990
let's implement this one okay
by the way what's the time complexity of

282
00:06:51,990 --> 00:06:52,000
by the way what's the time complexity of
 

283
00:06:52,000 --> 00:06:53,510
by the way what's the time complexity of
checking two numbers the

284
00:06:53,510 --> 00:06:53,520
checking two numbers the
 

285
00:06:53,520 --> 00:06:57,110
checking two numbers the
greatest common divisor a one no no no

286
00:06:57,110 --> 00:06:57,120
greatest common divisor a one no no no
 

287
00:06:57,120 --> 00:07:02,150
greatest common divisor a one no no no
n g c d any and guess and ogcd good

288
00:07:02,150 --> 00:07:02,160
n g c d any and guess and ogcd good
 

289
00:07:02,160 --> 00:07:03,270
n g c d any and guess and ogcd good
choice that let's

290
00:07:03,270 --> 00:07:03,280
choice that let's
 

291
00:07:03,280 --> 00:07:05,670
choice that let's
one answer what's the time complexity of

292
00:07:05,670 --> 00:07:05,680
one answer what's the time complexity of
 

293
00:07:05,680 --> 00:07:07,110
one answer what's the time complexity of
this one

294
00:07:07,110 --> 00:07:07,120
this one
 

295
00:07:07,120 --> 00:07:10,469
this one
a and b o

296
00:07:10,469 --> 00:07:10,479
a and b o
 

297
00:07:10,479 --> 00:07:14,469
a and b o
roughly o log a

298
00:07:14,469 --> 00:07:14,479
roughly o log a
 

299
00:07:14,479 --> 00:07:17,670
roughly o log a
plus log b okay

300
00:07:17,670 --> 00:07:17,680
plus log b okay
 

301
00:07:17,680 --> 00:07:21,749
plus log b okay
okay roughly the i is a gcd okay

302
00:07:21,749 --> 00:07:21,759
okay roughly the i is a gcd okay
 

303
00:07:21,759 --> 00:07:24,950
okay roughly the i is a gcd okay
okay roughly lock level okay yeah uh

304
00:07:24,950 --> 00:07:24,960
okay roughly lock level okay yeah uh
 

305
00:07:24,960 --> 00:07:27,990
okay roughly lock level okay yeah uh
okay so just define g c

306
00:07:27,990 --> 00:07:28,000
okay so just define g c
 

307
00:07:28,000 --> 00:07:32,390
okay so just define g c
d string okay string let's say

308
00:07:32,390 --> 00:07:32,400
d string okay string let's say
 

309
00:07:32,400 --> 00:07:38,070
d string okay string let's say
a and b to string okay

310
00:07:38,070 --> 00:07:38,080

 

311
00:07:38,080 --> 00:07:41,589

okay so string a string b

312
00:07:41,589 --> 00:07:41,599
okay so string a string b
 

313
00:07:41,599 --> 00:07:45,350
okay so string a string b
equals the length of a

314
00:07:45,350 --> 00:07:45,360
equals the length of a
 

315
00:07:45,360 --> 00:07:50,390
equals the length of a
why are you doing l a and l b

316
00:07:50,390 --> 00:07:50,400

 

317
00:07:50,400 --> 00:07:55,909

l a equals the length l b so

318
00:07:55,909 --> 00:07:55,919

 

319
00:07:55,919 --> 00:07:59,029

a thing another thing equals another

320
00:07:59,029 --> 00:07:59,039
a thing another thing equals another
 

321
00:07:59,039 --> 00:07:59,589
a thing another thing equals another
thing of

322
00:07:59,589 --> 00:07:59,599
thing of
 

323
00:07:59,599 --> 00:08:01,670
thing of
four things together right so leave a a

324
00:08:01,670 --> 00:08:01,680
four things together right so leave a a
 

325
00:08:01,680 --> 00:08:03,029
four things together right so leave a a
equals then a

326
00:08:03,029 --> 00:08:03,039
equals then a
 

327
00:08:03,039 --> 00:08:06,629
equals then a
lb equals and then b okay so just down

328
00:08:06,629 --> 00:08:06,639
lb equals and then b okay so just down
 

329
00:08:06,639 --> 00:08:09,189
lb equals and then b okay so just down
yeah so this means that this is this

330
00:08:09,189 --> 00:08:09,199
yeah so this means that this is this
 

331
00:08:09,199 --> 00:08:10,309
yeah so this means that this is this
equals here

332
00:08:10,309 --> 00:08:10,319
equals here
 

333
00:08:10,319 --> 00:08:12,710
equals here
this is here it's a two-part two-part

334
00:08:12,710 --> 00:08:12,720
this is here it's a two-part two-part
 

335
00:08:12,720 --> 00:08:13,589
this is here it's a two-part two-part
okay

336
00:08:13,589 --> 00:08:13,599
okay
 

337
00:08:13,599 --> 00:08:15,270
okay
two things these two things i want to

338
00:08:15,270 --> 00:08:15,280
two things these two things i want to
 

339
00:08:15,280 --> 00:08:17,670
two things these two things i want to
assign the value to these two things

340
00:08:17,670 --> 00:08:17,680
assign the value to these two things
 

341
00:08:17,680 --> 00:08:21,110
assign the value to these two things
all right okay and then now

342
00:08:21,110 --> 00:08:21,120
all right okay and then now
 

343
00:08:21,120 --> 00:08:23,350
all right okay and then now
and now i want to have a function later

344
00:08:23,350 --> 00:08:23,360
and now i want to have a function later
 

345
00:08:23,360 --> 00:08:24,469
and now i want to have a function later
okay i want to check

346
00:08:24,469 --> 00:08:24,479
okay i want to check
 

347
00:08:24,479 --> 00:08:26,629
okay i want to check
so now i want to check from the every

348
00:08:26,629 --> 00:08:26,639
so now i want to check from the every
 

349
00:08:26,639 --> 00:08:28,150
so now i want to check from the every
possible

350
00:08:28,150 --> 00:08:28,160
possible
 

351
00:08:28,160 --> 00:08:31,029
possible
with largest prefix so i will go to

352
00:08:31,029 --> 00:08:31,039
with largest prefix so i will go to
 

353
00:08:31,039 --> 00:08:32,630
with largest prefix so i will go to
prefix for

354
00:08:32,630 --> 00:08:32,640
prefix for
 

355
00:08:32,640 --> 00:08:36,550
prefix for
i in range

356
00:08:36,550 --> 00:08:36,560
i in range
 

357
00:08:36,560 --> 00:08:38,709
i in range
style from the largest prefix yeah

358
00:08:38,709 --> 00:08:38,719
style from the largest prefix yeah
 

359
00:08:38,719 --> 00:08:40,149
style from the largest prefix yeah
because we find the largest

360
00:08:40,149 --> 00:08:40,159
because we find the largest
 

361
00:08:40,159 --> 00:08:42,550
because we find the largest
prefix so which is the minimum length of

362
00:08:42,550 --> 00:08:42,560
prefix so which is the minimum length of
 

363
00:08:42,560 --> 00:08:43,190
prefix so which is the minimum length of
that all right

364
00:08:43,190 --> 00:08:43,200
that all right
 

365
00:08:43,200 --> 00:08:44,790
that all right
i don't know which one is bigger so i

366
00:08:44,790 --> 00:08:44,800
i don't know which one is bigger so i
 

367
00:08:44,800 --> 00:08:46,389
i don't know which one is bigger so i
want to start with

368
00:08:46,389 --> 00:08:46,399
want to start with
 

369
00:08:46,399 --> 00:08:50,230
want to start with
mean l a l b

370
00:08:50,230 --> 00:08:50,240
mean l a l b
 

371
00:08:50,240 --> 00:08:53,269
mean l a l b
and then tier 0

372
00:08:53,269 --> 00:08:53,279
and then tier 0
 

373
00:08:53,279 --> 00:08:57,269
and then tier 0
and then minus one okay so look

374
00:08:57,269 --> 00:08:57,279
and then minus one okay so look
 

375
00:08:57,279 --> 00:09:00,389
and then minus one okay so look
if the string is a b a b

376
00:09:00,389 --> 00:09:00,399
if the string is a b a b
 

377
00:09:00,399 --> 00:09:03,590
if the string is a b a b
and another one is a b a b

378
00:09:03,590 --> 00:09:03,600
and another one is a b a b
 

379
00:09:03,600 --> 00:09:06,790
and another one is a b a b
a b okay so for example look

380
00:09:06,790 --> 00:09:06,800
a b okay so for example look
 

381
00:09:06,800 --> 00:09:09,910
a b okay so for example look
this is uh this is a this is

382
00:09:09,910 --> 00:09:09,920
this is uh this is a this is
 

383
00:09:09,920 --> 00:09:12,949
this is uh this is a this is
a this is b

384
00:09:12,949 --> 00:09:12,959

 

385
00:09:12,959 --> 00:09:16,310

so the air n is four right

386
00:09:16,310 --> 00:09:16,320
so the air n is four right
 

387
00:09:16,320 --> 00:09:20,630
so the air n is four right
and then a b is one

388
00:09:20,630 --> 00:09:20,640
and then a b is one
 

389
00:09:20,640 --> 00:09:23,990
and then a b is one
six okay and i style i from

390
00:09:23,990 --> 00:09:24,000
six okay and i style i from
 

391
00:09:24,000 --> 00:09:27,030
six okay and i style i from
four right so i want to get a prefix

392
00:09:27,030 --> 00:09:27,040
four right so i want to get a prefix
 

393
00:09:27,040 --> 00:09:31,430
four right so i want to get a prefix
the first prefix is aba b so this prefix

394
00:09:31,430 --> 00:09:31,440
the first prefix is aba b so this prefix
 

395
00:09:31,440 --> 00:09:34,949
the first prefix is aba b so this prefix
will be

396
00:09:34,949 --> 00:09:34,959

 

397
00:09:34,959 --> 00:09:36,790

it doesn't matter which one i use yeah

398
00:09:36,790 --> 00:09:36,800
it doesn't matter which one i use yeah
 

399
00:09:36,800 --> 00:09:38,710
it doesn't matter which one i use yeah
so i can just use if it's not the same

400
00:09:38,710 --> 00:09:38,720
so i can just use if it's not the same
 

401
00:09:38,720 --> 00:09:40,070
so i can just use if it's not the same
then

402
00:09:40,070 --> 00:09:40,080
then
 

403
00:09:40,080 --> 00:09:42,150
then
if let's use the a or b it doesn't

404
00:09:42,150 --> 00:09:42,160
if let's use the a or b it doesn't
 

405
00:09:42,160 --> 00:09:43,990
if let's use the a or b it doesn't
matter okay a

406
00:09:43,990 --> 00:09:44,000
matter okay a
 

407
00:09:44,000 --> 00:09:47,509
matter okay a
the prefix is comma

408
00:09:47,509 --> 00:09:47,519

 

409
00:09:47,519 --> 00:09:50,870

i right yeah

410
00:09:50,870 --> 00:09:50,880
i right yeah
 

411
00:09:50,880 --> 00:09:53,990
i right yeah
right and then i i just have to let you

412
00:09:53,990 --> 00:09:54,000
right and then i i just have to let you
 

413
00:09:54,000 --> 00:09:59,190
right and then i i just have to let you
check i have a function check prefix

414
00:09:59,190 --> 00:09:59,200

 

415
00:09:59,200 --> 00:10:02,949

quickly i define this f later f a

416
00:10:02,949 --> 00:10:02,959
quickly i define this f later f a
 

417
00:10:02,959 --> 00:10:06,230
quickly i define this f later f a
check f a if if the a can be made up of

418
00:10:06,230 --> 00:10:06,240
check f a if if the a can be made up of
 

419
00:10:06,240 --> 00:10:08,389
check f a if if the a can be made up of
a couple times of prefix

420
00:10:08,389 --> 00:10:08,399
a couple times of prefix
 

421
00:10:08,399 --> 00:10:13,590
a couple times of prefix
also prefix

422
00:10:13,590 --> 00:10:13,600
also prefix
 

423
00:10:13,600 --> 00:10:16,550
also prefix
can also make b can also be made up with

424
00:10:16,550 --> 00:10:16,560
can also make b can also be made up with
 

425
00:10:16,560 --> 00:10:17,110
can also make b can also be made up with
a

426
00:10:17,110 --> 00:10:17,120
a
 

427
00:10:17,120 --> 00:10:21,110
a
couple terms of prefix what does it mean

428
00:10:21,110 --> 00:10:21,120

 

429
00:10:21,120 --> 00:10:24,150

it means the prefix is their largest

430
00:10:24,150 --> 00:10:24,160
it means the prefix is their largest
 

431
00:10:24,160 --> 00:10:26,230
it means the prefix is their largest
common

432
00:10:26,230 --> 00:10:26,240
common
 

433
00:10:26,240 --> 00:10:28,230
common
prefix yeah so it's the greatest common

434
00:10:28,230 --> 00:10:28,240
prefix yeah so it's the greatest common
 

435
00:10:28,240 --> 00:10:29,910
prefix yeah so it's the greatest common
device all right

436
00:10:29,910 --> 00:10:29,920
device all right
 

437
00:10:29,920 --> 00:10:34,389
device all right
yeah yeah so it's just a return

438
00:10:34,389 --> 00:10:34,399
yeah yeah so it's just a return
 

439
00:10:34,399 --> 00:10:39,990
yeah yeah so it's just a return
return empty

440
00:10:39,990 --> 00:10:40,000
return empty
 

441
00:10:40,000 --> 00:10:43,590
return empty
no no no look if even the largest pre

442
00:10:43,590 --> 00:10:43,600
no no no look if even the largest pre
 

443
00:10:43,600 --> 00:10:45,110
no no no look if even the largest pre
even the prefix

444
00:10:45,110 --> 00:10:45,120
even the prefix
 

445
00:10:45,120 --> 00:10:47,350
even the prefix
i'm look i'm going the prefix from the

446
00:10:47,350 --> 00:10:47,360
i'm look i'm going the prefix from the
 

447
00:10:47,360 --> 00:10:48,870
i'm look i'm going the prefix from the
fourth because the last

448
00:10:48,870 --> 00:10:48,880
fourth because the last
 

449
00:10:48,880 --> 00:10:51,670
fourth because the last
possible largest prefix is for letter a

450
00:10:51,670 --> 00:10:51,680
possible largest prefix is for letter a
 

451
00:10:51,680 --> 00:10:53,430
possible largest prefix is for letter a
b a b right here

452
00:10:53,430 --> 00:10:53,440
b a b right here
 

453
00:10:53,440 --> 00:10:57,110
b a b right here
right if a b a b made up the first

454
00:10:57,110 --> 00:10:57,120
right if a b a b made up the first
 

455
00:10:57,120 --> 00:10:57,750
right if a b a b made up the first
string a

456
00:10:57,750 --> 00:10:57,760
string a
 

457
00:10:57,760 --> 00:11:00,550
string a
and also made up the second string b so

458
00:11:00,550 --> 00:11:00,560
and also made up the second string b so
 

459
00:11:00,560 --> 00:11:02,310
and also made up the second string b so
it's the largest command

460
00:11:02,310 --> 00:11:02,320
it's the largest command
 

461
00:11:02,320 --> 00:11:06,230
it's the largest command
string the command string is commanded

462
00:11:06,230 --> 00:11:06,240
string the command string is commanded
 

463
00:11:06,240 --> 00:11:08,389
string the command string is commanded
yeah return prefix that's the common

464
00:11:08,389 --> 00:11:08,399
yeah return prefix that's the common
 

465
00:11:08,399 --> 00:11:10,069
yeah return prefix that's the common
string we are looking for

466
00:11:10,069 --> 00:11:10,079
string we are looking for
 

467
00:11:10,079 --> 00:11:12,630
string we are looking for
otherwise we we can't find that mean we

468
00:11:12,630 --> 00:11:12,640
otherwise we we can't find that mean we
 

469
00:11:12,640 --> 00:11:13,670
otherwise we we can't find that mean we
return

470
00:11:13,670 --> 00:11:13,680
return
 

471
00:11:13,680 --> 00:11:16,710
return
return nothing nothing because so

472
00:11:16,710 --> 00:11:16,720
return nothing nothing because so
 

473
00:11:16,720 --> 00:11:18,870
return nothing nothing because so
look at this f function so what does

474
00:11:18,870 --> 00:11:18,880
look at this f function so what does
 

475
00:11:18,880 --> 00:11:19,990
look at this f function so what does
this function do

476
00:11:19,990 --> 00:11:20,000
this function do
 

477
00:11:20,000 --> 00:11:23,110
this function do
so this f function is this means that we

478
00:11:23,110 --> 00:11:23,120
so this f function is this means that we
 

479
00:11:23,120 --> 00:11:25,750
so this f function is this means that we
want to check if this string

480
00:11:25,750 --> 00:11:25,760
want to check if this string
 

481
00:11:25,760 --> 00:11:28,790
want to check if this string
e can be made up of prefix

482
00:11:28,790 --> 00:11:28,800
e can be made up of prefix
 

483
00:11:28,800 --> 00:11:32,710
e can be made up of prefix
prefix times n times right

484
00:11:32,710 --> 00:11:32,720
prefix times n times right
 

485
00:11:32,720 --> 00:11:36,710
prefix times n times right
okay times n times

486
00:11:36,710 --> 00:11:36,720
okay times n times
 

487
00:11:36,720 --> 00:11:39,350
okay times n times
okay so now we write that what did mommy

488
00:11:39,350 --> 00:11:39,360
okay so now we write that what did mommy
 

489
00:11:39,360 --> 00:11:40,870
okay so now we write that what did mommy
say

490
00:11:40,870 --> 00:11:40,880
say
 

491
00:11:40,880 --> 00:11:44,870
say
hurry area define f

492
00:11:44,870 --> 00:11:44,880
hurry area define f
 

493
00:11:44,880 --> 00:11:50,949
hurry area define f
prefix s so first of all

494
00:11:50,949 --> 00:11:50,959

 

495
00:11:50,959 --> 00:11:58,470

okay lp equals length prefix

496
00:11:58,470 --> 00:11:58,480

 

497
00:11:58,480 --> 00:12:02,790

air s equals length s so if the

498
00:12:02,790 --> 00:12:02,800
air s equals length s so if the
 

499
00:12:02,800 --> 00:12:06,389
air s equals length s so if the
if the air s can cannot be divided by

500
00:12:06,389 --> 00:12:06,399
if the air s can cannot be divided by
 

501
00:12:06,399 --> 00:12:09,430
if the air s can cannot be divided by
lp what does it mean if it's

502
00:12:09,430 --> 00:12:09,440
lp what does it mean if it's
 

503
00:12:09,440 --> 00:12:12,790
lp what does it mean if it's
if if this is a b and then

504
00:12:12,790 --> 00:12:12,800
if if this is a b and then
 

505
00:12:12,800 --> 00:12:15,030
if if this is a b and then
if this is two character and then the uh

506
00:12:15,030 --> 00:12:15,040
if this is two character and then the uh
 

507
00:12:15,040 --> 00:12:15,910
if this is two character and then the uh
air s is

508
00:12:15,910 --> 00:12:15,920
air s is
 

509
00:12:15,920 --> 00:12:17,430
air s is
three characters what doesn't mean do we

510
00:12:17,430 --> 00:12:17,440
three characters what doesn't mean do we
 

511
00:12:17,440 --> 00:12:19,269
three characters what doesn't mean do we
need to check nothing yeah because you

512
00:12:19,269 --> 00:12:19,279
need to check nothing yeah because you
 

513
00:12:19,279 --> 00:12:19,670
need to check nothing yeah because you
can't

514
00:12:19,670 --> 00:12:19,680
can't
 

515
00:12:19,680 --> 00:12:22,949
can't
it needs to be a multiple right so if

516
00:12:22,949 --> 00:12:22,959
it needs to be a multiple right so if
 

517
00:12:22,959 --> 00:12:26,949
it needs to be a multiple right so if
s divided by lp

518
00:12:26,949 --> 00:12:26,959
s divided by lp
 

519
00:12:26,959 --> 00:12:30,949
s divided by lp
not equal zero then return

520
00:12:30,949 --> 00:12:30,959
not equal zero then return
 

521
00:12:30,959 --> 00:12:34,069
not equal zero then return
we can false yeah okay

522
00:12:34,069 --> 00:12:34,079
we can false yeah okay
 

523
00:12:34,079 --> 00:12:36,389
we can false yeah okay
and then we how can we write how can we

524
00:12:36,389 --> 00:12:36,399
and then we how can we write how can we
 

525
00:12:36,399 --> 00:12:37,920
and then we how can we write how can we
check one

526
00:12:37,920 --> 00:12:37,930
check one
 

527
00:12:37,930 --> 00:12:49,990
check one
[Music]

528
00:12:49,990 --> 00:12:50,000

 

529
00:12:50,000 --> 00:12:53,269

yeah prefix is this a b

530
00:12:53,269 --> 00:12:53,279
yeah prefix is this a b
 

531
00:12:53,279 --> 00:12:56,389
yeah prefix is this a b
pi yeah and how many times of it

532
00:12:56,389 --> 00:12:56,399
pi yeah and how many times of it
 

533
00:12:56,399 --> 00:12:59,509
pi yeah and how many times of it
and i can just times times air s divided

534
00:12:59,509 --> 00:12:59,519
and i can just times times air s divided
 

535
00:12:59,519 --> 00:13:00,389
and i can just times times air s divided
by l t

536
00:13:00,389 --> 00:13:00,399
by l t
 

537
00:13:00,399 --> 00:13:03,430
by l t
if it's equals x equals

538
00:13:03,430 --> 00:13:03,440
if it's equals x equals
 

539
00:13:03,440 --> 00:13:06,949
if it's equals x equals
s yeah look does it make sense yeah

540
00:13:06,949 --> 00:13:06,959
s yeah look does it make sense yeah
 

541
00:13:06,959 --> 00:13:09,590
s yeah look does it make sense yeah
i want to check if ap can make up of a b

542
00:13:09,590 --> 00:13:09,600
i want to check if ap can make up of a b
 

543
00:13:09,600 --> 00:13:10,470
i want to check if ap can make up of a b
a b

544
00:13:10,470 --> 00:13:10,480
a b
 

545
00:13:10,480 --> 00:13:13,190
a b
a b and i first i check this is string

546
00:13:13,190 --> 00:13:13,200
a b and i first i check this is string
 

547
00:13:13,200 --> 00:13:13,750
a b and i first i check this is string
two

548
00:13:13,750 --> 00:13:13,760
two
 

549
00:13:13,760 --> 00:13:16,310
two
minus two yeah this is length four four

550
00:13:16,310 --> 00:13:16,320
minus two yeah this is length four four
 

551
00:13:16,320 --> 00:13:17,990
minus two yeah this is length four four
then divided by two

552
00:13:17,990 --> 00:13:18,000
then divided by two
 

553
00:13:18,000 --> 00:13:21,829
then divided by two
yeah yeah and then this is okay

554
00:13:21,829 --> 00:13:21,839
yeah yeah and then this is okay
 

555
00:13:21,839 --> 00:13:24,870
yeah yeah and then this is okay
and then prefix id and how many times of

556
00:13:24,870 --> 00:13:24,880
and then prefix id and how many times of
 

557
00:13:24,880 --> 00:13:25,509
and then prefix id and how many times of
a b

558
00:13:25,509 --> 00:13:25,519
a b
 

559
00:13:25,519 --> 00:13:28,870
a b
two right so a b a b times two

560
00:13:28,870 --> 00:13:28,880
two right so a b a b times two
 

561
00:13:28,880 --> 00:13:32,470
two right so a b a b times two
so b is equal yes okay right

562
00:13:32,470 --> 00:13:32,480
so b is equal yes okay right
 

563
00:13:32,480 --> 00:13:34,069
so b is equal yes okay right
okay so this is one way of doing you

564
00:13:34,069 --> 00:13:34,079
okay so this is one way of doing you
 

565
00:13:34,079 --> 00:13:35,910
okay so this is one way of doing you
know we're checking the prefix

566
00:13:35,910 --> 00:13:35,920
know we're checking the prefix
 

567
00:13:35,920 --> 00:13:41,990
know we're checking the prefix
yeah but we can also do it better way

568
00:13:41,990 --> 00:13:42,000

 

569
00:13:42,000 --> 00:13:45,430

all right look

570
00:13:45,430 --> 00:13:45,440

 

571
00:13:45,440 --> 00:13:48,710

if i want you to tell me that look

572
00:13:48,710 --> 00:13:48,720
if i want you to tell me that look
 

573
00:13:48,720 --> 00:13:51,750
if i want you to tell me that look
if a b if two string

574
00:13:51,750 --> 00:13:51,760
if a b if two string
 

575
00:13:51,760 --> 00:13:55,990
if a b if two string
yeah a b let's say a b and a b a b

576
00:13:55,990 --> 00:13:56,000
yeah a b let's say a b and a b a b
 

577
00:13:56,000 --> 00:14:00,230
yeah a b let's say a b and a b a b
okay so these they are great device

578
00:14:00,230 --> 00:14:00,240
okay so these they are great device
 

579
00:14:00,240 --> 00:14:02,870
okay so these they are great device
the greatest command the gcd of these

580
00:14:02,870 --> 00:14:02,880
the greatest command the gcd of these
 

581
00:14:02,880 --> 00:14:04,629
the greatest command the gcd of these
two strings

582
00:14:04,629 --> 00:14:04,639
two strings
 

583
00:14:04,639 --> 00:14:07,670
two strings
is not empty right this is not empty

584
00:14:07,670 --> 00:14:07,680
is not empty right this is not empty
 

585
00:14:07,680 --> 00:14:11,350
is not empty right this is not empty
okay uh and how about is g a b a b

586
00:14:11,350 --> 00:14:11,360
okay uh and how about is g a b a b
 

587
00:14:11,360 --> 00:14:15,670
okay uh and how about is g a b a b
and a b a b a b it's not empty okay and

588
00:14:15,670 --> 00:14:15,680
and a b a b a b it's not empty okay and
 

589
00:14:15,680 --> 00:14:16,870
and a b a b a b it's not empty okay and
how about this

590
00:14:16,870 --> 00:14:16,880
how about this
 

591
00:14:16,880 --> 00:14:20,230
how about this
a b a

592
00:14:20,230 --> 00:14:20,240
a b a
 

593
00:14:20,240 --> 00:14:24,470
a b a
b and then a a

594
00:14:24,470 --> 00:14:24,480
b and then a a
 

595
00:14:24,480 --> 00:14:30,550
b and then a a
this is empty right yes this is md so

596
00:14:30,550 --> 00:14:30,560
this is empty right yes this is md so
 

597
00:14:30,560 --> 00:14:32,710
this is empty right yes this is md so
can you tell me how can we do this if i

598
00:14:32,710 --> 00:14:32,720
can you tell me how can we do this if i
 

599
00:14:32,720 --> 00:14:34,550
can you tell me how can we do this if i
have this string

600
00:14:34,550 --> 00:14:34,560
have this string
 

601
00:14:34,560 --> 00:14:37,750
have this string
here a b

602
00:14:37,750 --> 00:14:37,760
here a b
 

603
00:14:37,760 --> 00:14:41,509
here a b
so can you find out how can we check

604
00:14:41,509 --> 00:14:41,519
so can you find out how can we check
 

605
00:14:41,519 --> 00:14:46,870
so can you find out how can we check
how can we check

606
00:14:46,870 --> 00:14:46,880

 

607
00:14:46,880 --> 00:14:52,760

i'll go and check we can

608
00:14:52,760 --> 00:14:52,770

 

609
00:14:52,770 --> 00:14:54,550

[Music]

610
00:14:54,550 --> 00:14:54,560
[Music]
 

611
00:14:54,560 --> 00:15:00,949
[Music]
how can we check

612
00:15:00,949 --> 00:15:00,959

 

613
00:15:00,959 --> 00:15:03,670

we could check yeah how can we check we

614
00:15:03,670 --> 00:15:03,680
we could check yeah how can we check we
 

615
00:15:03,680 --> 00:15:04,710
we could check yeah how can we check we
can

616
00:15:04,710 --> 00:15:04,720
can
 

617
00:15:04,720 --> 00:15:08,389
can
look what happens we can make a list

618
00:15:08,389 --> 00:15:08,399
look what happens we can make a list
 

619
00:15:08,399 --> 00:15:20,470
look what happens we can make a list
if we press it together

620
00:15:20,470 --> 00:15:20,480

 

621
00:15:20,480 --> 00:15:23,509

a plus b here and b plus a here

622
00:15:23,509 --> 00:15:23,519
a plus b here and b plus a here
 

623
00:15:23,519 --> 00:15:36,010
a plus b here and b plus a here
what happened

624
00:15:36,010 --> 00:15:36,020

 

625
00:15:36,020 --> 00:15:38,790

[Music]

626
00:15:38,790 --> 00:15:38,800
[Music]
 

627
00:15:38,800 --> 00:15:41,990
[Music]
a b a b a b if they're the same okay

628
00:15:41,990 --> 00:15:42,000
a b a b a b if they're the same okay
 

629
00:15:42,000 --> 00:15:42,949
a b a b a b if they're the same okay
this one

630
00:15:42,949 --> 00:15:42,959
this one
 

631
00:15:42,959 --> 00:15:45,990
this one
is a a b a b a b a b a b

632
00:15:45,990 --> 00:15:46,000
is a a b a b a b a b a b
 

633
00:15:46,000 --> 00:15:49,350
is a a b a b a b a b a b
a b a b a b a b a b b and h

634
00:15:49,350 --> 00:15:49,360
a b a b a b a b a b b and h
 

635
00:15:49,360 --> 00:15:53,189
a b a b a b a b a b b and h
a b a d a a a a a b

636
00:15:53,189 --> 00:15:53,199
a b a d a a a a a b
 

637
00:15:53,199 --> 00:15:56,470
a b a d a a a a a b
a this is the problem yeah

638
00:15:56,470 --> 00:15:56,480
a this is the problem yeah
 

639
00:15:56,480 --> 00:16:00,230
a this is the problem yeah
if if the a plus b equals b plus a

640
00:16:00,230 --> 00:16:00,240
if if the a plus b equals b plus a
 

641
00:16:00,240 --> 00:16:02,550
if if the a plus b equals b plus a
it means we have a greatest common

642
00:16:02,550 --> 00:16:02,560
it means we have a greatest common
 

643
00:16:02,560 --> 00:16:05,189
it means we have a greatest common
divisor string which is not empty right

644
00:16:05,189 --> 00:16:05,199
divisor string which is not empty right
 

645
00:16:05,199 --> 00:16:07,990
divisor string which is not empty right
we need to be the same yeah otherwise we

646
00:16:07,990 --> 00:16:08,000
we need to be the same yeah otherwise we
 

647
00:16:08,000 --> 00:16:09,910
we need to be the same yeah otherwise we
just return empty

648
00:16:09,910 --> 00:16:09,920
just return empty
 

649
00:16:09,920 --> 00:16:12,949
just return empty
right right okay

650
00:16:12,949 --> 00:16:12,959
right right okay
 

651
00:16:12,959 --> 00:16:16,629
right right okay
so so the answer the algorithm could be

652
00:16:16,629 --> 00:16:16,639
so so the answer the algorithm could be
 

653
00:16:16,639 --> 00:16:20,470
so so the answer the algorithm could be
simplified very simple

654
00:16:20,470 --> 00:16:20,480
simplified very simple
 

655
00:16:20,480 --> 00:16:24,230
simplified very simple
easy yeah

656
00:16:24,230 --> 00:16:24,240

 

657
00:16:24,240 --> 00:16:27,430

so if a plus b

658
00:16:27,430 --> 00:16:27,440
so if a plus b
 

659
00:16:27,440 --> 00:16:30,629
so if a plus b
not equals b plus a

660
00:16:30,629 --> 00:16:30,639
not equals b plus a
 

661
00:16:30,639 --> 00:16:33,910
not equals b plus a
return nothing because this is

662
00:16:33,910 --> 00:16:33,920
return nothing because this is
 

663
00:16:33,920 --> 00:16:37,269
return nothing because this is
there's no yeah you you count right

664
00:16:37,269 --> 00:16:37,279
there's no yeah you you count right
 

665
00:16:37,279 --> 00:16:39,910
there's no yeah you you count right
you can't return empty otherwise i need

666
00:16:39,910 --> 00:16:39,920
you can't return empty otherwise i need
 

667
00:16:39,920 --> 00:16:41,749
you can't return empty otherwise i need
to find out the greatest comment devices

668
00:16:41,749 --> 00:16:41,759
to find out the greatest comment devices
 

669
00:16:41,759 --> 00:16:42,710
to find out the greatest comment devices
stream because look

670
00:16:42,710 --> 00:16:42,720
stream because look
 

671
00:16:42,720 --> 00:16:45,110
stream because look
if there are four characters and another

672
00:16:45,110 --> 00:16:45,120
if there are four characters and another
 

673
00:16:45,120 --> 00:16:46,150
if there are four characters and another
sixth character

674
00:16:46,150 --> 00:16:46,160
sixth character
 

675
00:16:46,160 --> 00:16:48,829
sixth character
the greatest comment divisor string must

676
00:16:48,829 --> 00:16:48,839
the greatest comment divisor string must
 

677
00:16:48,839 --> 00:16:51,189
the greatest comment divisor string must
be

678
00:16:51,189 --> 00:16:51,199
be
 

679
00:16:51,199 --> 00:16:54,629
be
six and four t two yeah yeah

680
00:16:54,629 --> 00:16:54,639
six and four t two yeah yeah
 

681
00:16:54,639 --> 00:16:58,629
six and four t two yeah yeah
the same so we we let this k would be

682
00:16:58,629 --> 00:16:58,639
the same so we we let this k would be
 

683
00:16:58,639 --> 00:17:01,670
the same so we we let this k would be
g c d length of

684
00:17:01,670 --> 00:17:01,680
g c d length of
 

685
00:17:01,680 --> 00:17:06,150
g c d length of
a length of b okay

686
00:17:06,150 --> 00:17:06,160
a length of b okay
 

687
00:17:06,160 --> 00:17:07,829
a length of b okay
you can directly use b function in

688
00:17:07,829 --> 00:17:07,839
you can directly use b function in
 

689
00:17:07,839 --> 00:17:09,350
you can directly use b function in
python you don't need to implement that

690
00:17:09,350 --> 00:17:09,360
python you don't need to implement that
 

691
00:17:09,360 --> 00:17:09,909
python you don't need to implement that
right

692
00:17:09,909 --> 00:17:09,919
right
 

693
00:17:09,919 --> 00:17:11,350
right
but if you want to implement that right

694
00:17:11,350 --> 00:17:11,360
but if you want to implement that right
 

695
00:17:11,360 --> 00:17:15,110
but if you want to implement that right
here and then return

696
00:17:15,110 --> 00:17:15,120

 

697
00:17:15,120 --> 00:17:18,150

a or b the first

698
00:17:18,150 --> 00:17:18,160
a or b the first
 

699
00:17:18,160 --> 00:17:20,870
a or b the first
k prefix yeah remember we're looking for

700
00:17:20,870 --> 00:17:20,880
k prefix yeah remember we're looking for
 

701
00:17:20,880 --> 00:17:22,549
k prefix yeah remember we're looking for
the largest prefix

702
00:17:22,549 --> 00:17:22,559
the largest prefix
 

703
00:17:22,559 --> 00:17:26,230
the largest prefix
which is a

704
00:17:26,230 --> 00:17:26,240
which is a
 

705
00:17:26,240 --> 00:17:29,669
which is a
okay here okay okay okay so

706
00:17:29,669 --> 00:17:29,679
okay here okay okay okay so
 

707
00:17:29,679 --> 00:17:33,270
okay here okay okay okay so
look this is simple yeah okay so let's

708
00:17:33,270 --> 00:17:33,280
look this is simple yeah okay so let's
 

709
00:17:33,280 --> 00:17:34,630
look this is simple yeah okay so let's
implement this

710
00:17:34,630 --> 00:17:34,640
implement this
 

711
00:17:34,640 --> 00:17:38,789
implement this
yeah define gcd do you still remember

712
00:17:38,789 --> 00:17:38,799
yeah define gcd do you still remember
 

713
00:17:38,799 --> 00:17:42,310
yeah define gcd do you still remember
these two integers

714
00:17:42,310 --> 00:17:42,320

 

715
00:17:42,320 --> 00:17:46,150

y b

716
00:17:46,150 --> 00:17:46,160
y b
 

717
00:17:46,160 --> 00:17:49,430
y b
wire a right y a

718
00:17:49,430 --> 00:17:49,440
wire a right y a
 

719
00:17:49,440 --> 00:17:52,870
wire a right y a
y a what a b

720
00:17:52,870 --> 00:17:52,880
y a what a b
 

721
00:17:52,880 --> 00:17:55,909
y a what a b
equals b

722
00:17:55,909 --> 00:17:55,919
equals b
 

723
00:17:55,919 --> 00:17:59,430
equals b
a modulus b right no return b

724
00:17:59,430 --> 00:17:59,440
a modulus b right no return b
 

725
00:17:59,440 --> 00:18:02,950
a modulus b right no return b
right all right written b rhythm b m

726
00:18:02,950 --> 00:18:02,960
right all right written b rhythm b m
 

727
00:18:02,960 --> 00:18:03,510
right all right written b rhythm b m
right

728
00:18:03,510 --> 00:18:03,520
right
 

729
00:18:03,520 --> 00:18:06,870
right
so why why a is not string is not empty

730
00:18:06,870 --> 00:18:06,880
so why why a is not string is not empty
 

731
00:18:06,880 --> 00:18:10,310
so why why a is not string is not empty
then we a equals b b equals a modulus b

732
00:18:10,310 --> 00:18:10,320
then we a equals b b equals a modulus b
 

733
00:18:10,320 --> 00:18:14,549
then we a equals b b equals a modulus b
okay right so this is takes the old

734
00:18:14,549 --> 00:18:14,559
okay right so this is takes the old
 

735
00:18:14,559 --> 00:18:17,510
okay right so this is takes the old
you know lock level okay and we are

736
00:18:17,510 --> 00:18:17,520
you know lock level okay and we are
 

737
00:18:17,520 --> 00:18:19,669
you know lock level okay and we are
looking for the largest prefix

738
00:18:19,669 --> 00:18:19,679
looking for the largest prefix
 

739
00:18:19,679 --> 00:18:22,789
looking for the largest prefix
today does it make sense

740
00:18:22,789 --> 00:18:22,799
today does it make sense
 

741
00:18:22,799 --> 00:18:28,590
today does it make sense
okay okay let's see for today

742
00:18:28,590 --> 00:18:28,600
okay okay let's see for today
 

743
00:18:28,600 --> 00:18:31,600
okay okay let's see for today
bye

