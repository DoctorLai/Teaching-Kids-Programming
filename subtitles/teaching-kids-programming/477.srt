1
00:00:00,320 --> 00:00:05,359
hello mr mr rhino you're right

2
00:00:02,960 --> 00:00:07,279
yes okay so look we have we are given a

3
00:00:05,359 --> 00:00:11,719
list of words ryan

4
00:00:07,279 --> 00:00:14,000
eric and and we also give a stream

5
00:00:11,719 --> 00:00:15,040
e-r-i-c-r-y-a-n-a-n-d so the question is

6
00:00:14,000 --> 00:00:18,640
that

7
00:00:15,040 --> 00:00:21,119
can we break this this uh string using

8
00:00:18,640 --> 00:00:23,279
the words given here and each word can

9
00:00:21,119 --> 00:00:25,279
you can be used multiple times

10
00:00:23,279 --> 00:00:27,680
so look here

11
00:00:25,279 --> 00:00:30,880
look for this one eric

12
00:00:27,680 --> 00:00:34,160
is here right so we can use eric this

13
00:00:30,880 --> 00:00:38,000
here and we can use the ryan here

14
00:00:34,160 --> 00:00:40,320
and i'll use the n here okay make sense

15
00:00:38,000 --> 00:00:41,440
okay so another example how about s

16
00:00:40,320 --> 00:00:45,040
equals

17
00:00:41,440 --> 00:00:45,040
e r i c e r

18
00:00:48,320 --> 00:00:55,120
can we can we do can we yes yeah because

19
00:00:50,960 --> 00:00:57,760
as i said what if there's r y a and e r

20
00:00:55,120 --> 00:01:00,239
i c and no

21
00:00:57,760 --> 00:01:02,239
good question yeah that's okay yeah

22
00:01:00,239 --> 00:01:03,920
that's a very good question so

23
00:01:02,239 --> 00:01:06,000
each one you can use it or you don't

24
00:01:03,920 --> 00:01:08,880
need to use it and you just what if it

25
00:01:06,000 --> 00:01:11,360
is e-d-h-i-r-y-n

26
00:01:08,880 --> 00:01:13,200
[Music]

27
00:01:11,360 --> 00:01:15,759
no no right because you can't find you

28
00:01:13,200 --> 00:01:17,759
we have to complete the string let's the

29
00:01:15,759 --> 00:01:20,000
string the sentence in the string using

30
00:01:17,759 --> 00:01:21,920
the words and each word could be used

31
00:01:20,000 --> 00:01:24,840
multiple times okay how about another

32
00:01:21,920 --> 00:01:29,360
one okay egg is delicious

33
00:01:24,840 --> 00:01:32,079
that cats and dog

34
00:01:29,360 --> 00:01:33,840
can we no why because they know

35
00:01:32,079 --> 00:01:36,159
that's right yes and how about if i put

36
00:01:33,840 --> 00:01:38,320
the s here

37
00:01:36,159 --> 00:01:41,520
no because i know f

38
00:01:38,320 --> 00:01:43,600
yeah if i put an s why not look so

39
00:01:41,520 --> 00:01:45,520
cat

40
00:01:43,600 --> 00:01:48,960
scent

41
00:01:45,520 --> 00:01:51,280
dog okay yeah you get a point right

42
00:01:48,960 --> 00:01:52,720
how do we solve this problem if we ask

43
00:01:51,280 --> 00:01:54,720
the mommy to solve this problem what

44
00:01:52,720 --> 00:01:59,520
does she what do you think you will try

45
00:01:54,720 --> 00:01:59,520
to do look before say i don't know

46
00:02:00,640 --> 00:02:05,439
but given this look given these very

47
00:02:02,880 --> 00:02:07,600
simple examples you could as a you know

48
00:02:05,439 --> 00:02:10,160
normal people what would you try to do i

49
00:02:07,600 --> 00:02:12,080
mean for example this average

50
00:02:10,160 --> 00:02:13,280
my question is that given this right

51
00:02:12,080 --> 00:02:15,840
given these

52
00:02:13,280 --> 00:02:17,920
this list of words and given this as how

53
00:02:15,840 --> 00:02:19,760
would you do it i mean how would you do

54
00:02:17,920 --> 00:02:22,640
it you know without any programming

55
00:02:19,760 --> 00:02:22,640
knowledge right

56
00:02:29,360 --> 00:02:34,400
yeah but you need to be more specific

57
00:02:31,599 --> 00:02:36,640
not just saying a agreement right so yes

58
00:02:34,400 --> 00:02:40,160
it's proof of us yeah

59
00:02:36,640 --> 00:02:42,400
search or preferences okay

60
00:02:40,160 --> 00:02:44,879
these are all okay to solve this problem

61
00:02:42,400 --> 00:02:48,879
but what i'm interested what i'm asking

62
00:02:44,879 --> 00:02:52,000
is how would you solve this problem by

63
00:02:48,879 --> 00:02:54,239
guiding me through right so given this

64
00:02:52,000 --> 00:02:56,800
sentence how would you

65
00:02:54,239 --> 00:02:59,360
find out if this sentence can be

66
00:02:56,800 --> 00:03:01,280
broken into these words given

67
00:02:59,360 --> 00:03:04,480
i'd put the word

68
00:03:01,280 --> 00:03:06,800
in the dictionary and then check

69
00:03:04,480 --> 00:03:08,159
if it's in the screen

70
00:03:06,800 --> 00:03:09,599
yeah you'll mention very good point

71
00:03:08,159 --> 00:03:10,959
dictionary sets yeah because we're

72
00:03:09,599 --> 00:03:11,920
giving you the list

73
00:03:10,959 --> 00:03:14,640
you'll be

74
00:03:11,920 --> 00:03:16,400
more efficient if you use a set to

75
00:03:14,640 --> 00:03:17,680
to store these these awards right

76
00:03:16,400 --> 00:03:19,599
because there will be

77
00:03:17,680 --> 00:03:21,840
oh one constant time to look up if a

78
00:03:19,599 --> 00:03:24,480
word appears in the

79
00:03:21,840 --> 00:03:27,440
list yeah okay okay you say that to look

80
00:03:24,480 --> 00:03:29,040
look at the words in the x right by

81
00:03:27,440 --> 00:03:30,000
going through this

82
00:03:29,040 --> 00:03:31,120
string

83
00:03:30,000 --> 00:03:33,920
and then how

84
00:03:31,120 --> 00:03:37,040
so look i will check

85
00:03:33,920 --> 00:03:39,599
if e in a string no if e r is in string

86
00:03:37,040 --> 00:03:42,879
no if i eri in the string

87
00:03:39,599 --> 00:03:46,640
in a given this e i c yes

88
00:03:42,879 --> 00:03:49,760
then because e i c is in a list so what

89
00:03:46,640 --> 00:03:51,840
would i do i will jump to the next word

90
00:03:49,760 --> 00:03:53,200
and i repeat until i reach the end all

91
00:03:51,840 --> 00:03:57,360
right

92
00:03:53,200 --> 00:03:58,799
and i'm here right okay i check if e

93
00:03:57,360 --> 00:04:01,280
is in a list

94
00:03:58,799 --> 00:04:04,080
if it's a given no yeah

95
00:04:01,280 --> 00:04:06,000
if it's given no yeah if it's given yeah

96
00:04:04,080 --> 00:04:07,360
i see if it's given it's given that's

97
00:04:06,000 --> 00:04:09,519
great let's check

98
00:04:07,360 --> 00:04:11,680
even the next word right and i can

99
00:04:09,519 --> 00:04:14,319
repeat this process as many times as i

100
00:04:11,680 --> 00:04:17,359
want right using the that so you

101
00:04:14,319 --> 00:04:20,320
basically lose using this definition

102
00:04:17,359 --> 00:04:24,479
i would be the index

103
00:04:20,320 --> 00:04:27,919
your index we are currently at so so

104
00:04:24,479 --> 00:04:30,000
at the beginning i i'm standing here i

105
00:04:27,919 --> 00:04:33,680
equals zero

106
00:04:30,000 --> 00:04:36,080
right i can jump forward if i find a

107
00:04:33,680 --> 00:04:38,880
word in here for some eric and i'm gonna

108
00:04:36,080 --> 00:04:42,080
jump here eric i jump here

109
00:04:38,880 --> 00:04:44,400
and i jump here right ryan ryan if i am

110
00:04:42,080 --> 00:04:46,240
reaching the end then i find a solution

111
00:04:44,400 --> 00:04:49,120
all right

112
00:04:46,240 --> 00:04:50,240
so if not for example if this one

113
00:04:49,120 --> 00:04:51,759
cat

114
00:04:50,240 --> 00:04:55,440
cats and

115
00:04:51,759 --> 00:04:59,680
and dog okay so cats and dogs cat

116
00:04:55,440 --> 00:05:02,720
you know what i jump here s s

117
00:04:59,680 --> 00:05:04,400
s a not in the world s a n no no s a and

118
00:05:02,720 --> 00:05:06,160
d not in one

119
00:05:04,400 --> 00:05:08,880
not in the world and then

120
00:05:06,160 --> 00:05:10,880
i quit because there is no way to jump

121
00:05:08,880 --> 00:05:13,199
to the end

122
00:05:10,880 --> 00:05:15,039
yeah yeah that's one way

123
00:05:13,199 --> 00:05:17,600
the other way is the slightly different

124
00:05:15,039 --> 00:05:20,000
so every time i'm still jumping but

125
00:05:17,600 --> 00:05:23,039
every time i go through this word so for

126
00:05:20,000 --> 00:05:28,800
example e i'm here

127
00:05:23,039 --> 00:05:28,800
so instead of checking e e r e i e i c

128
00:05:29,199 --> 00:05:32,960
checking

129
00:05:30,240 --> 00:05:34,800
the next possible word yeah

130
00:05:32,960 --> 00:05:37,199
i will just go for the opposite i will

131
00:05:34,800 --> 00:05:39,840
go through these words and then check

132
00:05:37,199 --> 00:05:42,000
from the current positions to the least

133
00:05:39,840 --> 00:05:43,199
length if it's y and if it's array if

134
00:05:42,000 --> 00:05:46,400
it's n

135
00:05:43,199 --> 00:05:47,919
yeah slightly different okay

136
00:05:46,400 --> 00:05:50,080
so if i

137
00:05:47,919 --> 00:05:52,400
equal equal the length of the string

138
00:05:50,080 --> 00:05:54,639
then we return as i said return true

139
00:05:52,400 --> 00:05:56,800
right right because look

140
00:05:54,639 --> 00:05:58,720
if we are reaching the end we are able

141
00:05:56,800 --> 00:06:00,560
to jump

142
00:05:58,720 --> 00:06:01,840
to the end then we find the solution

143
00:06:00,560 --> 00:06:04,639
right

144
00:06:01,840 --> 00:06:06,880
if not then we go to the four

145
00:06:04,639 --> 00:06:11,759
the end yeah for n

146
00:06:06,880 --> 00:06:12,720
in range from i plus one to the end of

147
00:06:11,759 --> 00:06:13,840
the

148
00:06:12,720 --> 00:06:15,919
string

149
00:06:13,840 --> 00:06:18,400
plus one this is to do

150
00:06:15,919 --> 00:06:20,479
the one position beyond the

151
00:06:18,400 --> 00:06:23,759
end okay so have we have two plus one

152
00:06:20,479 --> 00:06:24,560
here right and then what do we do if

153
00:06:23,759 --> 00:06:25,360
s

154
00:06:24,560 --> 00:06:28,720
i

155
00:06:25,360 --> 00:06:31,280
current partition up to n

156
00:06:28,720 --> 00:06:33,520
if it's in a word in a word we can

157
00:06:31,280 --> 00:06:36,080
convert the list of words to

158
00:06:33,520 --> 00:06:37,680
w equals set of words yeah we convert it

159
00:06:36,080 --> 00:06:40,080
to what what's the

160
00:06:37,680 --> 00:06:42,479
what's the advantage if we do this

161
00:06:40,080 --> 00:06:43,840
we convert a list to the set what's the

162
00:06:42,479 --> 00:06:47,039
advantage

163
00:06:43,840 --> 00:06:48,560
the advantage is we look up look up time

164
00:06:47,039 --> 00:06:50,960
yeah because of one because if you are

165
00:06:48,560 --> 00:06:53,360
looking a word in these that will be

166
00:06:50,960 --> 00:06:56,160
linear you know yeah you have to check

167
00:06:53,360 --> 00:06:59,199
each word one by one and then

168
00:06:56,160 --> 00:07:01,199
the time list will be o n times n if n n

169
00:06:59,199 --> 00:07:02,960
is the number of the words in the list m

170
00:07:01,199 --> 00:07:05,199
is the average length for each word you

171
00:07:02,960 --> 00:07:06,240
have to do this but if we convert it to

172
00:07:05,199 --> 00:07:09,120
a

173
00:07:06,240 --> 00:07:11,919
set it's a one constant time because the

174
00:07:09,120 --> 00:07:14,479
chess table okay now look if it's in the

175
00:07:11,919 --> 00:07:16,800
world and also

176
00:07:14,479 --> 00:07:19,039
also that's research also therefore

177
00:07:16,800 --> 00:07:21,120
search we are if it's in the world and

178
00:07:19,039 --> 00:07:23,120
that we start with the end we jump to

179
00:07:21,120 --> 00:07:25,199
the end right learn

180
00:07:23,120 --> 00:07:27,599
return true

181
00:07:25,199 --> 00:07:29,440
otherwise return false

182
00:07:27,599 --> 00:07:30,720
one thing is missing here

183
00:07:29,440 --> 00:07:33,599
cash

184
00:07:30,720 --> 00:07:33,599
whether cash

185
00:07:33,680 --> 00:07:37,520
if we're not putting the cash what

186
00:07:35,039 --> 00:07:41,280
happened because each look we're jumping

187
00:07:37,520 --> 00:07:44,479
at each each partition each index we can

188
00:07:41,280 --> 00:07:47,199
split on a split so they are for a

189
00:07:44,479 --> 00:07:51,599
length for a string given the size of n

190
00:07:47,199 --> 00:07:54,800
we have two we have n plus one way to

191
00:07:51,599 --> 00:07:58,080
to split so the time connection will be

192
00:07:54,800 --> 00:08:00,000
exponential of o to n but for this one

193
00:07:58,080 --> 00:08:03,120
if we put a cache

194
00:08:00,000 --> 00:08:05,520
i is the index that could be at most n

195
00:08:03,120 --> 00:08:07,120
space we have n states from zero to n

196
00:08:05,520 --> 00:08:09,520
minus one right

197
00:08:07,120 --> 00:08:12,960
so there will be n states for each one

198
00:08:09,520 --> 00:08:14,879
we iterate so leave each one we're

199
00:08:12,960 --> 00:08:17,199
iterating o n

200
00:08:14,879 --> 00:08:19,360
and then look this substring

201
00:08:17,199 --> 00:08:20,160
substring is o n so the time conduction

202
00:08:19,360 --> 00:08:23,360
will be

203
00:08:20,160 --> 00:08:25,599
o n times o n times o n right look

204
00:08:23,360 --> 00:08:27,120
recursive here so the time to max it

205
00:08:25,599 --> 00:08:29,280
will be o and q b

206
00:08:27,120 --> 00:08:31,680
or n cubic

207
00:08:29,280 --> 00:08:34,479
so what we just need to call is return

208
00:08:31,680 --> 00:08:35,440
outside return dfs 0 okay

209
00:08:34,479 --> 00:08:37,440
yeah

210
00:08:35,440 --> 00:08:40,800
by putting a cache yeah without the

211
00:08:37,440 --> 00:08:43,440
cache let's proof of status search okay

212
00:08:40,800 --> 00:08:45,760
o2m by putting a cache

213
00:08:43,440 --> 00:08:47,120
this is basically like top-down dynamic

214
00:08:45,760 --> 00:08:49,760
programming yeah because we're

215
00:08:47,120 --> 00:08:53,120
remembering the intermediate results so

216
00:08:49,760 --> 00:08:56,160
so we don't repeat for each dfsi we only

217
00:08:53,120 --> 00:08:59,600
calculate once right okay so that's one

218
00:08:56,160 --> 00:09:00,959
way okay what what is mentioned about

219
00:08:59,600 --> 00:09:03,120
the other way

220
00:09:00,959 --> 00:09:04,399
slightly different is

221
00:09:03,120 --> 00:09:07,200
is we are not

222
00:09:04,399 --> 00:09:08,480
we are not iterating over the next

223
00:09:07,200 --> 00:09:10,480
straight

224
00:09:08,480 --> 00:09:12,640
point right we are not this is to

225
00:09:10,480 --> 00:09:15,040
iterating the split point but we are not

226
00:09:12,640 --> 00:09:17,920
iterating this people so here yes this

227
00:09:15,040 --> 00:09:19,680
is the same and then from this line we

228
00:09:17,920 --> 00:09:20,480
are doing this for

229
00:09:19,680 --> 00:09:22,320
a

230
00:09:20,480 --> 00:09:25,200
in w yeah we're going through the

231
00:09:22,320 --> 00:09:27,279
efficient area now we just check

232
00:09:25,200 --> 00:09:28,399
going through the list of the word we

233
00:09:27,279 --> 00:09:30,240
just check

234
00:09:28,399 --> 00:09:32,480
e

235
00:09:30,240 --> 00:09:35,519
the next for example this is for the

236
00:09:32,480 --> 00:09:37,760
length of four the next four characters

237
00:09:35,519 --> 00:09:39,760
if it's the same as these if it is then

238
00:09:37,760 --> 00:09:41,279
we can jump right so

239
00:09:39,760 --> 00:09:44,399
the lens would be

240
00:09:41,279 --> 00:09:47,680
what n a equals length a

241
00:09:44,399 --> 00:09:49,279
and then a string so if s i

242
00:09:47,680 --> 00:09:54,000
up to

243
00:09:49,279 --> 00:09:57,839
to n a right so i plus n a if it's equal

244
00:09:54,000 --> 00:09:59,440
then a right if it's equal to a and also

245
00:09:57,839 --> 00:10:01,680
that's what such

246
00:09:59,440 --> 00:10:04,160
that difference will jump to the end

247
00:10:01,680 --> 00:10:05,200
jump to the next one will be i plus and

248
00:10:04,160 --> 00:10:07,120
i

249
00:10:05,200 --> 00:10:09,519
then return true otherwise looking for

250
00:10:07,120 --> 00:10:12,480
slightly different which here this one

251
00:10:09,519 --> 00:10:14,160
is to jump to next split point well what

252
00:10:12,480 --> 00:10:16,959
i'm doing here is to

253
00:10:14,160 --> 00:10:20,079
go through the list of words one by one

254
00:10:16,959 --> 00:10:21,920
and then check if we can jump jump to it

255
00:10:20,079 --> 00:10:25,360
right and basically we are also calling

256
00:10:21,920 --> 00:10:26,720
itself the default search

257
00:10:25,360 --> 00:10:28,240
so what have you learned today come on

258
00:10:26,720 --> 00:10:30,399
what have you done today

259
00:10:28,240 --> 00:10:32,959
about word break

260
00:10:30,399 --> 00:10:34,720
or break yes what's the problem okay can

261
00:10:32,959 --> 00:10:38,160
we can we uh

262
00:10:34,720 --> 00:10:39,440
there's some words and a string and you

263
00:10:38,160 --> 00:10:40,959
want to

264
00:10:39,440 --> 00:10:44,320
find if

265
00:10:40,959 --> 00:10:45,279
the words in the string are in the words

266
00:10:44,320 --> 00:10:48,079
okay

267
00:10:45,279 --> 00:10:49,920
so we are given a list of words

268
00:10:48,079 --> 00:10:52,320
this is our these words are unique we

269
00:10:49,920 --> 00:10:54,800
can use the words as many times as were

270
00:10:52,320 --> 00:10:56,560
including zero times and the question is

271
00:10:54,800 --> 00:10:59,360
that given another string we want to

272
00:10:56,560 --> 00:11:01,760
find out if we can break the string into

273
00:10:59,360 --> 00:11:03,760
words given by the list

274
00:11:01,760 --> 00:11:05,839
today that our approach

275
00:11:03,760 --> 00:11:07,519
blue force definitely

276
00:11:05,839 --> 00:11:09,200
yeah and if we put in the cache there

277
00:11:07,519 --> 00:11:10,959
will be top-down dynamic programming all

278
00:11:09,200 --> 00:11:13,920
recursion with the mean momentation the

279
00:11:10,959 --> 00:11:16,480
default search eye means that what we i

280
00:11:13,920 --> 00:11:18,800
is the index right so it means that if

281
00:11:16,480 --> 00:11:22,079
we can we can split

282
00:11:18,800 --> 00:11:24,560
the sentence from the index i

283
00:11:22,079 --> 00:11:27,360
at the beginning from index 0 0 is the

284
00:11:24,560 --> 00:11:30,160
first first character if we be able to

285
00:11:27,360 --> 00:11:33,360
split the sentence split the string

286
00:11:30,160 --> 00:11:36,000
from the zero index right from zero from

287
00:11:33,360 --> 00:11:38,880
i in the index side so if it reaches the

288
00:11:36,000 --> 00:11:41,200
end then we find a solution otherwise

289
00:11:38,880 --> 00:11:43,440
the next index the next three point this

290
00:11:41,200 --> 00:11:44,880
is the split point will be from i plus

291
00:11:43,440 --> 00:11:47,680
one to the n

292
00:11:44,880 --> 00:11:49,760
and then this is the substring if i

293
00:11:47,680 --> 00:11:53,200
from the i to the end

294
00:11:49,760 --> 00:11:55,360
it was and also if releases in a word

295
00:11:53,200 --> 00:11:57,360
then we can check we can jump to the

296
00:11:55,360 --> 00:11:58,959
next one which is the end right then we

297
00:11:57,360 --> 00:12:01,279
return through otherwise

298
00:11:58,959 --> 00:12:03,440
so for this one two three four we can

299
00:12:01,279 --> 00:12:06,000
use the any any keyword

300
00:12:03,440 --> 00:12:07,600
because look this is basically to check

301
00:12:06,000 --> 00:12:08,959
if any

302
00:12:07,600 --> 00:12:11,279
any

303
00:12:08,959 --> 00:12:13,839
yeah if uh if we find the solution if we

304
00:12:11,279 --> 00:12:17,440
find any solution here right

305
00:12:13,839 --> 00:12:21,120
we can return any s i to the n in w and

306
00:12:17,440 --> 00:12:22,160
define search and for n in range i plus

307
00:12:21,120 --> 00:12:24,639
one right

308
00:12:22,160 --> 00:12:27,279
let's using the fantasy syntax and okay

309
00:12:24,639 --> 00:12:30,279
that'll be it for today bye-bye

310
00:12:27,279 --> 00:12:30,279
bye-bye

