1
00:00:00,080 --> 00:00:04,160
none of your business

2
00:00:01,760 --> 00:00:05,040
hello mr eric are you all right

3
00:00:04,160 --> 00:00:05,759
yeah

4
00:00:05,040 --> 00:00:07,680
yeah

5
00:00:05,759 --> 00:00:09,760
okay so we talked about sorting right

6
00:00:07,680 --> 00:00:10,570
remember what's the time complexity of

7
00:00:09,760 --> 00:00:12,000
sorting

8
00:00:10,570 --> 00:00:15,040
[Music]

9
00:00:12,000 --> 00:00:16,560
n is the number of elements yeah so

10
00:00:15,040 --> 00:00:17,920
we talk about a quick sauce we have

11
00:00:16,560 --> 00:00:20,560
quick sauce

12
00:00:17,920 --> 00:00:22,240
and what's quick sauce and emergency

13
00:00:20,560 --> 00:00:24,000
salt

14
00:00:22,240 --> 00:00:27,760
yeah these two

15
00:00:24,000 --> 00:00:29,760
are all both oh and okay on everything

16
00:00:27,760 --> 00:00:31,519
but

17
00:00:29,760 --> 00:00:34,239
in mind the quick thought

18
00:00:31,519 --> 00:00:35,840
the worst case is d o n square right

19
00:00:34,239 --> 00:00:38,160
another quick song right we have a

20
00:00:35,840 --> 00:00:39,040
number we have a few numbers like three

21
00:00:38,160 --> 00:00:39,920
two

22
00:00:39,040 --> 00:00:40,879
five

23
00:00:39,920 --> 00:00:44,079
four

24
00:00:40,879 --> 00:00:46,000
seven one zero okay so we can pick

25
00:00:44,079 --> 00:00:47,520
random we pick a random pivot right

26
00:00:46,000 --> 00:00:49,680
remember if you in case you don't

27
00:00:47,520 --> 00:00:51,120
remember pick one random view and you

28
00:00:49,680 --> 00:00:53,920
pick a number

29
00:00:51,120 --> 00:00:55,760
no no we pick the one pivot and then we

30
00:00:53,920 --> 00:00:58,079
find out all the numbers we partition

31
00:00:55,760 --> 00:00:58,960
the list by all the numbers smaller than

32
00:00:58,079 --> 00:01:01,840
five

33
00:00:58,960 --> 00:01:05,840
yeah smaller than five is what

34
00:01:01,840 --> 00:01:08,799
three two one zero four right

35
00:01:05,840 --> 00:01:11,680
this is uh one zero four let's smaller

36
00:01:08,799 --> 00:01:14,400
than five a bigger than five is

37
00:01:11,680 --> 00:01:16,880
seven so we construct it look we use the

38
00:01:14,400 --> 00:01:19,680
p we we pick a random pick number as a

39
00:01:16,880 --> 00:01:22,080
pivot and on the traditional list as two

40
00:01:19,680 --> 00:01:24,240
parts one is the one the number smaller

41
00:01:22,080 --> 00:01:25,920
than the pivot the other one is the y

42
00:01:24,240 --> 00:01:28,320
number numbers they're bigger than the

43
00:01:25,920 --> 00:01:30,880
pv and we keep recursively

44
00:01:28,320 --> 00:01:33,040
sorting these quick sorting these right

45
00:01:30,880 --> 00:01:34,799
yeah so let them become a problem why is

46
00:01:33,040 --> 00:01:36,560
that if you because we're london in

47
00:01:34,799 --> 00:01:38,560
picking this period if this preview is

48
00:01:36,560 --> 00:01:40,400
not picked good enough then they'll

49
00:01:38,560 --> 00:01:42,320
become a problem why is that look if the

50
00:01:40,400 --> 00:01:45,360
number is already sorted like one two

51
00:01:42,320 --> 00:01:47,439
three four five six seven eight look how

52
00:01:45,360 --> 00:01:49,439
about if i pick quickly one but then

53
00:01:47,439 --> 00:01:52,000
there's no such number that's smaller

54
00:01:49,439 --> 00:01:54,240
than one right so i can

55
00:01:52,000 --> 00:01:56,320
all i can do is that i have this pivot

56
00:01:54,240 --> 00:01:59,280
and then everything bigger than that how

57
00:01:56,320 --> 00:02:00,320
about then i recursively pick this pivot

58
00:01:59,280 --> 00:02:03,040
right

59
00:02:00,320 --> 00:02:05,280
and then again i only have

60
00:02:03,040 --> 00:02:06,240
the numbers that bigger than the pivot

61
00:02:05,280 --> 00:02:09,119
right

62
00:02:06,240 --> 00:02:09,920
so we we're not making we are not making

63
00:02:09,119 --> 00:02:12,319
the

64
00:02:09,920 --> 00:02:14,959
best benefit of partitioning right so in

65
00:02:12,319 --> 00:02:17,360
this case this is one square right

66
00:02:14,959 --> 00:02:18,640
let's quickly stop how about multistock

67
00:02:17,360 --> 00:02:21,520
much solid

68
00:02:18,640 --> 00:02:23,920
the multi-store comes with the we know

69
00:02:21,520 --> 00:02:25,760
how to merge to sort this yeah remember

70
00:02:23,920 --> 00:02:28,480
do you still remember how to remodel

71
00:02:25,760 --> 00:02:30,720
sorted it like one three five seven and

72
00:02:28,480 --> 00:02:32,000
then this is the least another list is

73
00:02:30,720 --> 00:02:33,920
two fours

74
00:02:32,000 --> 00:02:36,800
two four six eight how do we merge these

75
00:02:33,920 --> 00:02:38,879
two sorted

76
00:02:36,800 --> 00:02:40,560
yeah so we compare the pointers yeah we

77
00:02:38,879 --> 00:02:41,599
commit a value we have one is smaller

78
00:02:40,560 --> 00:02:43,840
than two

79
00:02:41,599 --> 00:02:46,560
so we pick the one here and then we move

80
00:02:43,840 --> 00:02:49,120
the one to that right yeah two is

81
00:02:46,560 --> 00:02:52,080
smaller than three pick a two

82
00:02:49,120 --> 00:02:54,480
and move it yeah so we know we know this

83
00:02:52,080 --> 00:02:57,120
o and time complexity to merge two

84
00:02:54,480 --> 00:02:59,280
certificates so what we we can do for

85
00:02:57,120 --> 00:03:00,879
this is that we we equally divide it

86
00:02:59,280 --> 00:03:03,120
into two halves right

87
00:03:00,879 --> 00:03:05,680
and then we divide it into half because

88
00:03:03,120 --> 00:03:07,440
the result is too big and once then

89
00:03:05,680 --> 00:03:09,519
becomes salted

90
00:03:07,440 --> 00:03:12,159
i will merge it right

91
00:03:09,519 --> 00:03:12,959
so this is on average if it's a worst

92
00:03:12,159 --> 00:03:14,560
case

93
00:03:12,959 --> 00:03:16,319
in the worst case much source is still

94
00:03:14,560 --> 00:03:18,400
overnight right so in this case it's

95
00:03:16,319 --> 00:03:20,959
better than quicksort but quick thought

96
00:03:18,400 --> 00:03:22,879
if you if we generally we pick the

97
00:03:20,959 --> 00:03:25,360
random period and that will give us a

98
00:03:22,879 --> 00:03:26,959
very good uh you know

99
00:03:25,360 --> 00:03:29,920
very good

100
00:03:26,959 --> 00:03:31,120
burning time yeah on average in practice

101
00:03:29,920 --> 00:03:33,680
okay so

102
00:03:31,120 --> 00:03:35,519
this this is the most efficient log

103
00:03:33,680 --> 00:03:36,959
salting algorithm okay most efficient

104
00:03:35,519 --> 00:03:38,480
okay

105
00:03:36,959 --> 00:03:41,120
and we are today we're going to talk

106
00:03:38,480 --> 00:03:43,360
another thought which is not quite used

107
00:03:41,120 --> 00:03:45,599
in practical but we can use it to

108
00:03:43,360 --> 00:03:47,440
demonstrate how the sorting the simple

109
00:03:45,599 --> 00:03:48,959
salting one of the simple salting

110
00:03:47,440 --> 00:03:51,599
aggregates right

111
00:03:48,959 --> 00:03:53,599
simple salting simple salting acrylic

112
00:03:51,599 --> 00:03:56,319
what's simple

113
00:03:53,599 --> 00:03:57,519
it's not complicated it's easy yeah yeah

114
00:03:56,319 --> 00:03:59,760
yeah easy

115
00:03:57,519 --> 00:04:01,519
so it's the time context okay i'll let

116
00:03:59,760 --> 00:04:03,200
you figure out the time complexity okay

117
00:04:01,519 --> 00:04:05,360
so how we do it we look

118
00:04:03,200 --> 00:04:06,239
three we call it bubble sorting what's

119
00:04:05,360 --> 00:04:07,040
bubble

120
00:04:06,239 --> 00:04:09,200
uh

121
00:04:07,040 --> 00:04:10,000
it's a round thing

122
00:04:09,200 --> 00:04:13,120
so

123
00:04:10,000 --> 00:04:14,560
where do you find the bubbles from

124
00:04:13,120 --> 00:04:16,160
you find it

125
00:04:14,560 --> 00:04:18,079
you just blow it

126
00:04:16,160 --> 00:04:21,280
yeah but usually you know the diving

127
00:04:18,079 --> 00:04:23,520
yeah driving yeah timing

128
00:04:21,280 --> 00:04:26,840
timing yeah yeah look at this is that

129
00:04:23,520 --> 00:04:29,280
this is the man yeah you jump yeah jump

130
00:04:26,840 --> 00:04:30,720
here okay maybe

131
00:04:29,280 --> 00:04:31,840
might be like that

132
00:04:30,720 --> 00:04:35,440
okay

133
00:04:31,840 --> 00:04:37,520
yeah and then once he's in in there

134
00:04:35,440 --> 00:04:40,479
now he blows he starts blow and then the

135
00:04:37,520 --> 00:04:43,040
bubbles where is the purpose going

136
00:04:40,479 --> 00:04:43,040
going up

137
00:04:44,880 --> 00:04:50,000
yeah exactly bubble okay so what does it

138
00:04:47,280 --> 00:04:53,199
mean in salting right so we have numbers

139
00:04:50,000 --> 00:04:54,320
right luckily look at this

140
00:04:53,199 --> 00:04:57,280
three

141
00:04:54,320 --> 00:04:58,880
we when we saw the numbers the by

142
00:04:57,280 --> 00:05:01,520
default the

143
00:04:58,880 --> 00:05:03,280
order is increasing yeah ascending order

144
00:05:01,520 --> 00:05:06,240
right so it means the from the smallest

145
00:05:03,280 --> 00:05:08,840
to the biggest so like three five two

146
00:05:06,240 --> 00:05:11,840
one seven

147
00:05:08,840 --> 00:05:13,440
six okay then that's zero okay let's see

148
00:05:11,840 --> 00:05:15,520
we want to solve it yeah how how can we

149
00:05:13,440 --> 00:05:16,320
start it so first of all

150
00:05:15,520 --> 00:05:19,199
yeah

151
00:05:16,320 --> 00:05:20,479
first of all the last

152
00:05:19,199 --> 00:05:23,600
the last

153
00:05:20,479 --> 00:05:26,240
few you know we started sorting and we

154
00:05:23,600 --> 00:05:27,919
we arrange the sorting these numbers at

155
00:05:26,240 --> 00:05:30,560
the end right so at the beginning

156
00:05:27,919 --> 00:05:33,039
there's none salty right so about we do

157
00:05:30,560 --> 00:05:34,880
it what else three and five

158
00:05:33,039 --> 00:05:36,720
if three is bigger than five look if

159
00:05:34,880 --> 00:05:39,039
current number is next is bigger than

160
00:05:36,720 --> 00:05:41,280
the next number we swap it

161
00:05:39,039 --> 00:05:42,570
yeah we're not swapping yeah

162
00:05:41,280 --> 00:05:44,560
we do it sloping

163
00:05:42,570 --> 00:05:46,320
[Music]

164
00:05:44,560 --> 00:05:49,039
when this is bigger than the next one we

165
00:05:46,320 --> 00:05:50,960
swap it do we swap it yeah yeah so we

166
00:05:49,039 --> 00:05:53,120
sort it so let's become

167
00:05:50,960 --> 00:05:54,720
two and become five

168
00:05:53,120 --> 00:05:58,160
this one i always thought it started

169
00:05:54,720 --> 00:06:00,160
stop it which is the next one uh yep

170
00:05:58,160 --> 00:06:03,520
okay so

171
00:06:00,160 --> 00:06:03,520
okay always open it

172
00:06:03,759 --> 00:06:07,639
always open yes

173
00:06:08,400 --> 00:06:13,039
are we stopping it yes

174
00:06:10,319 --> 00:06:15,680
so do you see what i'm doing here

175
00:06:13,039 --> 00:06:17,919
one cycle is so the last number would be

176
00:06:15,680 --> 00:06:21,600
what

177
00:06:17,919 --> 00:06:23,440
the largest yeah the last that is of the

178
00:06:21,600 --> 00:06:25,680
unsalted list right

179
00:06:23,440 --> 00:06:27,120
yeah so this is the largest when we do

180
00:06:25,680 --> 00:06:29,440
the first month

181
00:06:27,120 --> 00:06:31,280
we always swap it if the current number

182
00:06:29,440 --> 00:06:33,360
is bigger than one it's like bubbling

183
00:06:31,280 --> 00:06:35,440
yeah so what does it mean when it goes

184
00:06:33,360 --> 00:06:36,240
to the end the largest number will be

185
00:06:35,440 --> 00:06:39,840
the

186
00:06:36,240 --> 00:06:41,600
the end at the end right yes uh

187
00:06:39,840 --> 00:06:44,160
i don't really get

188
00:06:41,600 --> 00:06:46,479
the largest number at the end so because

189
00:06:44,160 --> 00:06:48,800
look if this is bigger look i have

190
00:06:46,479 --> 00:06:51,199
another bigger number let's say

191
00:06:48,800 --> 00:06:53,360
i have another bigger number 12 okay so

192
00:06:51,199 --> 00:06:55,759
let's say 12 okay i know we're going to

193
00:06:53,360 --> 00:06:57,599
slope it so at the end

194
00:06:55,759 --> 00:07:00,560
12 must be go to the end why is that

195
00:06:57,599 --> 00:07:02,479
look 3 bigger than 12 no right 12 bigger

196
00:07:00,560 --> 00:07:05,120
than 1

197
00:07:02,479 --> 00:07:07,039
so i swap it

198
00:07:05,120 --> 00:07:08,160
bigger than five

199
00:07:07,039 --> 00:07:09,919
yeah

200
00:07:08,160 --> 00:07:12,080
that's a 5 12. you see

201
00:07:09,919 --> 00:07:13,520
so the largest number will be always

202
00:07:12,080 --> 00:07:16,680
move to the end

203
00:07:13,520 --> 00:07:16,680
and six

204
00:07:23,599 --> 00:07:28,240
you see so what does it mean

205
00:07:25,919 --> 00:07:30,479
once goal goes to the left the largest

206
00:07:28,240 --> 00:07:32,319
current largest number look we always

207
00:07:30,479 --> 00:07:33,919
partitioning this the list into two

208
00:07:32,319 --> 00:07:36,960
halves okay

209
00:07:33,919 --> 00:07:38,319
we're going through the thing again

210
00:07:36,960 --> 00:07:40,240
like this that's that's a very good

211
00:07:38,319 --> 00:07:42,479
question i'm i'm now i'm talking about

212
00:07:40,240 --> 00:07:43,919
this right look so this is the list yeah

213
00:07:42,479 --> 00:07:44,800
finally there

214
00:07:43,919 --> 00:07:48,080
look

215
00:07:44,800 --> 00:07:50,720
when i partitioned it this is unsalted

216
00:07:48,080 --> 00:07:52,800
and this is salted

217
00:07:50,720 --> 00:07:54,639
at the beginning look

218
00:07:52,800 --> 00:07:57,520
at the beginning this sauce is nothing

219
00:07:54,639 --> 00:07:59,520
right but now when i do it i move this i

220
00:07:57,520 --> 00:08:01,120
always move it start from here right i

221
00:07:59,520 --> 00:08:03,199
move that and saute it to the to the

222
00:08:01,120 --> 00:08:04,400
salted i go and i let these 12 become

223
00:08:03,199 --> 00:08:06,879
the end right

224
00:08:04,400 --> 00:08:09,039
so now 12 is the largest here right so

225
00:08:06,879 --> 00:08:11,280
the next time i i don't come here again

226
00:08:09,039 --> 00:08:12,400
so now next time the saltine will have

227
00:08:11,280 --> 00:08:15,120
one element

228
00:08:12,400 --> 00:08:17,520
and then i just have to

229
00:08:15,120 --> 00:08:18,800
sort the an array with the one number

230
00:08:17,520 --> 00:08:20,400
less

231
00:08:18,800 --> 00:08:22,080
yeah

232
00:08:20,400 --> 00:08:25,440
make sense

233
00:08:22,080 --> 00:08:27,759
yeah okay so now next one look three

234
00:08:25,440 --> 00:08:29,599
bigger than one or what we move it yeah

235
00:08:27,759 --> 00:08:31,520
yes

236
00:08:29,599 --> 00:08:33,519
one three three and five

237
00:08:31,520 --> 00:08:36,560
nine five and six

238
00:08:33,519 --> 00:08:36,560
six and zero yes

239
00:08:37,360 --> 00:08:41,599
six and seven

240
00:08:38,959 --> 00:08:43,760
night okay so now i don't i i don't swap

241
00:08:41,599 --> 00:08:45,600
it i don't consider i stopped here right

242
00:08:43,760 --> 00:08:47,680
because right now this 12 is already

243
00:08:45,600 --> 00:08:49,760
sorted in the last one right

244
00:08:47,680 --> 00:08:52,720
and number seven is the second largest

245
00:08:49,760 --> 00:08:54,880
right it's the largest in these right so

246
00:08:52,720 --> 00:08:57,440
and then i move here right so the

247
00:08:54,880 --> 00:08:58,720
unsorted list will be here right one and

248
00:08:57,440 --> 00:09:01,680
three

249
00:08:58,720 --> 00:09:05,440
yes no i mean no three five

250
00:09:01,680 --> 00:09:05,440
nine five zero okay

251
00:09:05,600 --> 00:09:09,120
five six

252
00:09:06,959 --> 00:09:10,880
no okay so six is the largest okay i'm

253
00:09:09,120 --> 00:09:12,320
gonna move here all right so look do you

254
00:09:10,880 --> 00:09:15,440
see this yeah

255
00:09:12,320 --> 00:09:17,440
yeah this is serious how how this works

256
00:09:15,440 --> 00:09:19,120
yeah so every time we bubbling with

257
00:09:17,440 --> 00:09:21,120
purpling so the bubble the largest

258
00:09:19,120 --> 00:09:22,480
number will be bubble to the end which

259
00:09:21,120 --> 00:09:23,600
is the starting

260
00:09:22,480 --> 00:09:25,519
ah

261
00:09:23,600 --> 00:09:27,680
okay let me try the edge okay and then

262
00:09:25,519 --> 00:09:29,440
you will understand

263
00:09:27,680 --> 00:09:31,040
so this is the simple salting it's very

264
00:09:29,440 --> 00:09:32,880
easy i mean just remember the bubbling

265
00:09:31,040 --> 00:09:35,040
yeah we're always bubbling the largest

266
00:09:32,880 --> 00:09:37,680
number to the end right

267
00:09:35,040 --> 00:09:39,040
so define

268
00:09:37,680 --> 00:09:40,240
proper

269
00:09:39,040 --> 00:09:42,880
thought

270
00:09:40,240 --> 00:09:44,399
with the numbers

271
00:09:42,880 --> 00:09:48,000
first of all we need to get the element

272
00:09:44,399 --> 00:09:49,760
of length of element yeah lens

273
00:09:48,000 --> 00:09:51,600
numb

274
00:09:49,760 --> 00:09:52,480
okay so for

275
00:09:51,600 --> 00:09:55,279
i

276
00:09:52,480 --> 00:09:58,480
in range

277
00:09:55,279 --> 00:09:59,920
rejuva ng

278
00:09:58,480 --> 00:10:01,920
21

279
00:09:59,920 --> 00:10:05,560
for i imagine

280
00:10:01,920 --> 00:10:05,560
but i am

281
00:10:06,800 --> 00:10:10,000
so now i have to follow j

282
00:10:09,040 --> 00:10:12,399
in

283
00:10:10,000 --> 00:10:12,399
range

284
00:10:15,040 --> 00:10:19,480
we only start from zero yeah

285
00:10:20,240 --> 00:10:25,279
minus i

286
00:10:21,920 --> 00:10:28,880
minus one okay i tell you what it is

287
00:10:25,279 --> 00:10:31,120
so and then now i have to swap look if

288
00:10:28,880 --> 00:10:31,120
noun

289
00:10:35,600 --> 00:10:39,200
come on you can tell me

290
00:10:37,550 --> 00:10:42,320
[Music]

291
00:10:39,200 --> 00:10:44,640
j bigger than what's needs next

292
00:10:42,320 --> 00:10:47,040
j j next

293
00:10:44,640 --> 00:10:47,040
class

294
00:10:47,450 --> 00:10:57,839
[Music]

295
00:10:56,240 --> 00:11:01,040
a yeah so

296
00:10:57,839 --> 00:11:01,040
j number three plus

297
00:11:10,959 --> 00:11:14,200
here right

298
00:11:14,800 --> 00:11:18,480
this is called the

299
00:11:16,640 --> 00:11:21,200
topper top assignment yeah type of

300
00:11:18,480 --> 00:11:23,360
assignment so we're swapping this

301
00:11:21,200 --> 00:11:27,350
right and a little bit return on

302
00:11:23,360 --> 00:11:30,419
linkedin number what's the consonant

303
00:11:27,350 --> 00:11:30,419
[Music]

304
00:11:34,079 --> 00:11:39,680
we want to go to the end round and round

305
00:11:36,800 --> 00:11:39,680
and then look

306
00:11:40,000 --> 00:11:44,320
these

307
00:11:40,880 --> 00:11:46,399
and when i is zero right when i zero n

308
00:11:44,320 --> 00:11:49,760
minus one we are not touching the n

309
00:11:46,399 --> 00:11:51,760
minus one right this is going to j

310
00:11:49,760 --> 00:11:53,600
j is here right j

311
00:11:51,760 --> 00:11:56,160
so for each round

312
00:11:53,600 --> 00:11:57,600
j will be start from zero right start

313
00:11:56,160 --> 00:11:59,519
from zero two

314
00:11:57,600 --> 00:12:01,440
to m minus i

315
00:11:59,519 --> 00:12:03,760
okay remember we talked about

316
00:12:01,440 --> 00:12:06,399
when we have one more round there will

317
00:12:03,760 --> 00:12:09,279
be one more element which is included in

318
00:12:06,399 --> 00:12:11,760
the sorted this is sort here right

319
00:12:09,279 --> 00:12:13,839
so what i is including how many rounds

320
00:12:11,760 --> 00:12:15,200
do we need to solve all the numbers and

321
00:12:13,839 --> 00:12:18,079
one right

322
00:12:15,200 --> 00:12:19,279
yeah we will we need the envelopes each

323
00:12:18,079 --> 00:12:22,000
each one

324
00:12:19,279 --> 00:12:24,240
each each one each each properly we

325
00:12:22,000 --> 00:12:26,720
always find out the one largest number

326
00:12:24,240 --> 00:12:27,920
in the unsorted and move it resolve it

327
00:12:26,720 --> 00:12:29,120
makes sense

328
00:12:27,920 --> 00:12:31,760
yeah

329
00:12:29,120 --> 00:12:34,000
okay so we need n round okay so how

330
00:12:31,760 --> 00:12:36,320
about look if the number is already

331
00:12:34,000 --> 00:12:38,320
sorted one two three four five

332
00:12:36,320 --> 00:12:39,760
can you swap any of these can you solve

333
00:12:38,320 --> 00:12:41,839
any of these no

334
00:12:39,760 --> 00:12:42,880
why why is that because they're already

335
00:12:41,839 --> 00:12:44,880
salted

336
00:12:42,880 --> 00:12:46,639
it's already salty it's already salted

337
00:12:44,880 --> 00:12:49,120
look no matter how many rounds we need

338
00:12:46,639 --> 00:12:51,839
so do we need to continue in this time

339
00:12:49,120 --> 00:12:53,839
yeah if already if this list is already

340
00:12:51,839 --> 00:12:56,079
sorted then we can

341
00:12:53,839 --> 00:12:58,800
we can just break we can just exit here

342
00:12:56,079 --> 00:13:00,880
so we can put it here swap

343
00:12:58,800 --> 00:13:03,920
swap how do we know if it's already

344
00:13:00,880 --> 00:13:05,839
sorted yeah look at swap equals false at

345
00:13:03,920 --> 00:13:07,760
the beginning we set it to 4. but now we

346
00:13:05,839 --> 00:13:09,360
once we stop it we study here swap

347
00:13:07,760 --> 00:13:11,120
equals two right

348
00:13:09,360 --> 00:13:14,399
whenever we find the element bigger than

349
00:13:11,120 --> 00:13:17,200
the next one we swap equals two

350
00:13:14,399 --> 00:13:19,440
right and then here and here we just say

351
00:13:17,200 --> 00:13:20,800
if not swap

352
00:13:19,440 --> 00:13:22,079
if not

353
00:13:20,800 --> 00:13:23,839
okay

354
00:13:22,079 --> 00:13:24,800
what does it mean so

355
00:13:23,839 --> 00:13:27,279
here

356
00:13:24,800 --> 00:13:28,800
yeah we're doing this one bubbling yeah

357
00:13:27,279 --> 00:13:30,720
one buckling

358
00:13:28,800 --> 00:13:33,120
but we are not swapping anything look

359
00:13:30,720 --> 00:13:35,839
yeah we're not swapping anything

360
00:13:33,120 --> 00:13:37,279
right we are not swapping anything right

361
00:13:35,839 --> 00:13:38,639
because it's already stopping yeah you

362
00:13:37,279 --> 00:13:40,320
can't find any animal bigger than the

363
00:13:38,639 --> 00:13:43,440
next one right

364
00:13:40,320 --> 00:13:45,040
right so we are not here we we haven't

365
00:13:43,440 --> 00:13:47,600
executed here right because it comes

366
00:13:45,040 --> 00:13:50,000
from any man bigger than the next one so

367
00:13:47,600 --> 00:13:52,079
these loop will be doing for nothing

368
00:13:50,000 --> 00:13:53,839
yeah so slobber will be equal so and if

369
00:13:52,079 --> 00:13:56,160
not swap means that okay after this

370
00:13:53,839 --> 00:13:58,160
round we find no elements can be swapped

371
00:13:56,160 --> 00:14:00,800
then we just break yeah

372
00:13:58,160 --> 00:14:04,160
huh make sense

373
00:14:00,800 --> 00:14:05,680
yeah that's one optimization right

374
00:14:04,160 --> 00:14:07,120
so okay

375
00:14:05,680 --> 00:14:09,440
best cases

376
00:14:07,120 --> 00:14:12,240
if the what's the time complexity if the

377
00:14:09,440 --> 00:14:14,320
array is already sorted

378
00:14:12,240 --> 00:14:17,519
what's the time complexity if the array

379
00:14:14,320 --> 00:14:18,959
is already sorted

380
00:14:17,519 --> 00:14:21,240
and square

381
00:14:18,959 --> 00:14:22,560
already started come on

382
00:14:21,240 --> 00:14:23,440
[Music]

383
00:14:22,560 --> 00:14:26,320
nine

384
00:14:23,440 --> 00:14:27,519
oh why is the low one come on look

385
00:14:26,320 --> 00:14:29,680
here

386
00:14:27,519 --> 00:14:32,399
how many rounds is it so it needs to do

387
00:14:29,680 --> 00:14:34,240
this at least in time right yeah when i

388
00:14:32,399 --> 00:14:36,399
is zero right

389
00:14:34,240 --> 00:14:39,279
j needs to go to n times but then he

390
00:14:36,399 --> 00:14:40,880
found out that swap is never

391
00:14:39,279 --> 00:14:44,399
set to true

392
00:14:40,880 --> 00:14:46,240
when you break so how many

393
00:14:44,399 --> 00:14:48,880
come on why is that one in the worst

394
00:14:46,240 --> 00:14:50,240
case it's always good in average cases

395
00:14:48,880 --> 00:14:52,959
i'm saying

396
00:14:50,240 --> 00:14:56,000
when the array is already sorted

397
00:14:52,959 --> 00:15:00,079
one array is already sorted come on

398
00:14:56,000 --> 00:15:01,920
okay follow me slow because false

399
00:15:00,079 --> 00:15:05,680
okay so i need to repeat this end time

400
00:15:01,920 --> 00:15:08,320
right yeah j three times yeah

401
00:15:05,680 --> 00:15:12,320
but if we already sorted has this

402
00:15:08,320 --> 00:15:14,639
variable being set to true

403
00:15:12,320 --> 00:15:16,560
will it be set to two if it's if no

404
00:15:14,639 --> 00:15:19,279
elements being swapped

405
00:15:16,560 --> 00:15:20,079
okay so if not swap is true right

406
00:15:19,279 --> 00:15:22,160
yeah

407
00:15:20,079 --> 00:15:24,839
and then break so how many how many

408
00:15:22,160 --> 00:15:26,480
iterations do i need to do

409
00:15:24,839 --> 00:15:28,240
remember

410
00:15:26,480 --> 00:15:30,320
i is equal to zero and i found all this

411
00:15:28,240 --> 00:15:31,519
is not swap and then

412
00:15:30,320 --> 00:15:32,800
i s

413
00:15:31,519 --> 00:15:33,600
terminate the

414
00:15:32,800 --> 00:15:34,959
loop

415
00:15:33,600 --> 00:15:37,519
immediately what's the time frame let's

416
00:15:34,959 --> 00:15:40,079
see if they already already sorted

417
00:15:37,519 --> 00:15:42,639
one two three four five okay fourteen

418
00:15:40,079 --> 00:15:45,279
and what's the tango minus three um oh

419
00:15:42,639 --> 00:15:45,279
and exactly

420
00:15:46,079 --> 00:15:49,680
okay okay and what's our one square your

421
00:15:47,920 --> 00:15:52,880
own square is

422
00:15:49,680 --> 00:15:55,199
on average right on average yeah

423
00:15:52,880 --> 00:15:57,759
oh in the worst case if the array is

424
00:15:55,199 --> 00:15:59,360
reverse sorted it means that five or

425
00:15:57,759 --> 00:16:00,720
three to one

426
00:15:59,360 --> 00:16:01,920
okay

427
00:16:00,720 --> 00:16:03,600
yeah

428
00:16:01,920 --> 00:16:05,680
okay so for example this is five two

429
00:16:03,600 --> 00:16:07,279
five four three two one can you tell me

430
00:16:05,680 --> 00:16:09,440
how the array will be sorted and that

431
00:16:07,279 --> 00:16:12,079
will be that will be

432
00:16:09,440 --> 00:16:13,279
five four three two one okay so what

433
00:16:12,079 --> 00:16:14,480
happened next

434
00:16:13,279 --> 00:16:15,279
okay

435
00:16:14,480 --> 00:16:18,959
so

436
00:16:15,279 --> 00:16:18,959
so i got this um

437
00:16:25,279 --> 00:16:29,920
no no no i i just want you to to tell me

438
00:16:28,079 --> 00:16:32,480
tell me what's the what's the next one

439
00:16:29,920 --> 00:16:36,680
after five four three two one

440
00:16:32,480 --> 00:16:36,680
okay so four swappings

441
00:16:38,320 --> 00:16:40,560
yeah

442
00:16:40,880 --> 00:16:44,160
okay you don't need to drop it you just

443
00:16:42,480 --> 00:16:46,959
need to tell me where is it okay swap

444
00:16:44,160 --> 00:16:49,040
here sophia and then swap here so you

445
00:16:46,959 --> 00:16:52,959
put a fire here okay i know what's next

446
00:16:49,040 --> 00:16:52,959
and then you just need to stop it yeah

447
00:16:53,600 --> 00:16:58,639
yeah

448
00:16:55,279 --> 00:16:59,440
i know where's the one one is here

449
00:16:58,639 --> 00:17:01,519
yeah

450
00:16:59,440 --> 00:17:03,440
okay and that was next

451
00:17:01,519 --> 00:17:07,360
so

452
00:17:03,440 --> 00:17:10,559
i need some more space all right

453
00:17:07,360 --> 00:17:10,559
okay and now i'll stop

454
00:17:11,679 --> 00:17:15,360
okay and then that's it and then one

455
00:17:13,280 --> 00:17:16,039
more and a break okay good job we're

456
00:17:15,360 --> 00:17:21,000
done

457
00:17:16,039 --> 00:17:21,000
today bye bye bye

