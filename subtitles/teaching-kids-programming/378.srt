1
00:00:01,680 --> 00:00:06,960
hello mr mr ryan are you right yeah okay

2
00:00:05,120 --> 00:00:08,880
so yesterday we talked about the longest

3
00:00:06,960 --> 00:00:10,559
even pass we want to find out the

4
00:00:08,880 --> 00:00:12,480
longest path

5
00:00:10,559 --> 00:00:13,920
that contains all the even notes right

6
00:00:12,480 --> 00:00:16,400
the path is

7
00:00:13,920 --> 00:00:19,840
between any two nodes right so for

8
00:00:16,400 --> 00:00:22,560
example here the longest even path is

9
00:00:19,840 --> 00:00:25,840
if this is four then it could be if this

10
00:00:22,560 --> 00:00:27,439
is a the the longest path is six four

11
00:00:25,840 --> 00:00:29,279
eight ten yeah

12
00:00:27,439 --> 00:00:32,160
yeah because it's longer than this one

13
00:00:29,279 --> 00:00:35,120
this is we know this is four notes and

14
00:00:32,160 --> 00:00:37,120
yeah so we use the tesla search right

15
00:00:35,120 --> 00:00:40,079
remember we use the default search this

16
00:00:37,120 --> 00:00:44,800
default search function will return

17
00:00:40,079 --> 00:00:47,039
the longest note uh even notes starting

18
00:00:44,800 --> 00:00:49,680
with loot okay starting with for example

19
00:00:47,039 --> 00:00:52,399
if therefore search load

20
00:00:49,680 --> 00:00:54,800
here four you should tell me what's okay

21
00:00:52,399 --> 00:00:56,000
that's a tricky one if a device search

22
00:00:54,800 --> 00:00:57,360
load

23
00:00:56,000 --> 00:01:00,239
for what

24
00:00:57,360 --> 00:01:01,120
what's your in return

25
00:01:00,239 --> 00:01:04,320
four

26
00:01:01,120 --> 00:01:07,200
sorry now starting from here the longest

27
00:01:04,320 --> 00:01:10,000
longest listen to me carefully longest

28
00:01:07,200 --> 00:01:10,880
even pass starting with four

29
00:01:10,000 --> 00:01:13,280
four

30
00:01:10,880 --> 00:01:15,759
why is it four

31
00:01:13,280 --> 00:01:18,159
because four

32
00:01:15,759 --> 00:01:21,040
three yes four eight ten okay

33
00:01:18,159 --> 00:01:23,280
yes okay so look this function returns

34
00:01:21,040 --> 00:01:24,840
the longest part starting with even plus

35
00:01:23,280 --> 00:01:28,080
button with four okay

36
00:01:24,840 --> 00:01:31,200
so it's not loose let's review a little

37
00:01:28,080 --> 00:01:35,200
bit return zero all right

38
00:01:31,200 --> 00:01:36,799
the left is therefore search root

39
00:01:35,200 --> 00:01:39,520
top left

40
00:01:36,799 --> 00:01:40,400
the right is the first search

41
00:01:39,520 --> 00:01:42,479
blue

42
00:01:40,400 --> 00:01:45,040
dot right okay this is this bit is

43
00:01:42,479 --> 00:01:47,439
simple right and then if the root of

44
00:01:45,040 --> 00:01:49,840
value

45
00:01:47,439 --> 00:01:51,920
and one if this is

46
00:01:49,840 --> 00:01:54,399
it's all numbers

47
00:01:51,920 --> 00:01:57,360
okay i'm just trying to to reveal if

48
00:01:54,399 --> 00:01:59,200
this is an even number know what happens

49
00:01:57,360 --> 00:02:02,159
then

50
00:01:59,200 --> 00:02:04,240
if this is even number i need to recall

51
00:02:02,159 --> 00:02:06,719
the maximum normal maximum which is the

52
00:02:04,240 --> 00:02:09,520
longest path right right look if this is

53
00:02:06,719 --> 00:02:12,239
the even number right if this is even

54
00:02:09,520 --> 00:02:13,920
more let's say if this is even number

55
00:02:12,239 --> 00:02:15,280
the longest path

56
00:02:13,920 --> 00:02:16,480
yeah

57
00:02:15,280 --> 00:02:18,959
must be

58
00:02:16,480 --> 00:02:20,879
the left plus y plus one right it could

59
00:02:18,959 --> 00:02:24,560
be passing through the loop right so

60
00:02:20,879 --> 00:02:26,080
that the answer will be equals maximum

61
00:02:24,560 --> 00:02:29,680
of answer

62
00:02:26,080 --> 00:02:30,480
left plus r plus one right

63
00:02:29,680 --> 00:02:33,040
and

64
00:02:30,480 --> 00:02:34,640
i need to return

65
00:02:33,040 --> 00:02:37,120
maximum

66
00:02:34,640 --> 00:02:38,879
lag plus left and right plus one okay

67
00:02:37,120 --> 00:02:41,599
this is a slightly different why is that

68
00:02:38,879 --> 00:02:44,160
because i said this function returns the

69
00:02:41,599 --> 00:02:46,480
longest load passing the current

70
00:02:44,160 --> 00:02:48,160
right so it could be left or right it

71
00:02:46,480 --> 00:02:50,160
can't be both right so i need to pick

72
00:02:48,160 --> 00:02:52,239
the maximum if left is longer then i

73
00:02:50,160 --> 00:02:53,599
pick the left if the right is longer i

74
00:02:52,239 --> 00:02:55,599
pick it right okay

75
00:02:53,599 --> 00:02:56,959
otherwise i should return what happened

76
00:02:55,599 --> 00:02:59,760
here

77
00:02:56,959 --> 00:03:01,599
if we say oh if if this is odd number

78
00:02:59,760 --> 00:03:03,920
what happened i should return what is it

79
00:03:01,599 --> 00:03:05,680
right well done okay then i can do this

80
00:03:03,920 --> 00:03:07,200
definite search root

81
00:03:05,680 --> 00:03:09,599
and then return

82
00:03:07,200 --> 00:03:12,480
answer okay because we are

83
00:03:09,599 --> 00:03:16,480
updating the answer yeah when the note

84
00:03:12,480 --> 00:03:18,959
is even number and then we try to

85
00:03:16,480 --> 00:03:22,480
try to do what left plus r plus one okay

86
00:03:18,959 --> 00:03:26,799
so this must be the longest path right

87
00:03:22,480 --> 00:03:26,799
the time time taxi is one for this one

88
00:03:26,959 --> 00:03:29,680
because

89
00:03:28,159 --> 00:03:31,120
sorry oh n

90
00:03:29,680 --> 00:03:34,159
sorry i said

91
00:03:31,120 --> 00:03:36,799
okay oh and because each note is visited

92
00:03:34,159 --> 00:03:39,519
exactly once okay from surface search

93
00:03:36,799 --> 00:03:41,519
right look next step is search right

94
00:03:39,519 --> 00:03:43,840
we reach the left we reach the right

95
00:03:41,519 --> 00:03:47,360
right so this kind of thing definition

96
00:03:43,840 --> 00:03:49,840
we can use this to traverse the tree

97
00:03:47,360 --> 00:03:52,239
right and each node is only visited once

98
00:03:49,840 --> 00:03:53,920
so let's open

99
00:03:52,239 --> 00:03:57,760
okay so today we talked about another

100
00:03:53,920 --> 00:04:00,480
approach okay another approach

101
00:03:57,760 --> 00:04:02,319
so first of all the binary tree

102
00:04:00,480 --> 00:04:03,840
there's one problem with binary trees

103
00:04:02,319 --> 00:04:07,200
that if we

104
00:04:03,840 --> 00:04:09,280
when we go through the kits to the kids

105
00:04:07,200 --> 00:04:11,599
we usually can't go back right because

106
00:04:09,280 --> 00:04:13,200
the kids the parent has the two points

107
00:04:11,599 --> 00:04:14,799
pointing to the left to the right but

108
00:04:13,200 --> 00:04:17,199
the kids

109
00:04:14,799 --> 00:04:19,120
doesn't have a pointer to point back to

110
00:04:17,199 --> 00:04:21,199
the parent right

111
00:04:19,120 --> 00:04:22,880
so if we travel you know we can convert

112
00:04:21,199 --> 00:04:24,800
it to a graph right the tree is our

113
00:04:22,880 --> 00:04:27,040
graph if we convert it to a

114
00:04:24,800 --> 00:04:28,800
bi-directional graph right

115
00:04:27,040 --> 00:04:30,320
so what graph is unique direction you

116
00:04:28,800 --> 00:04:32,560
know the unit direction

117
00:04:30,320 --> 00:04:35,360
or by direction two directions so it

118
00:04:32,560 --> 00:04:37,280
means that i can travel i can visit

119
00:04:35,360 --> 00:04:39,520
like from the parents the kids or i can

120
00:04:37,280 --> 00:04:42,160
visit from kids to parents it's both two

121
00:04:39,520 --> 00:04:45,040
direction okay two direction if first of

122
00:04:42,160 --> 00:04:48,560
all i converted the graph listen

123
00:04:45,040 --> 00:04:51,280
and then i can start with each

124
00:04:48,560 --> 00:04:53,680
with every even note right and then for

125
00:04:51,280 --> 00:04:54,840
each even now i can do a preference

126
00:04:53,680 --> 00:04:57,680
search

127
00:04:54,840 --> 00:04:59,040
yeah i can do a breakfast search or i

128
00:04:57,680 --> 00:05:01,120
can do a different search there it

129
00:04:59,040 --> 00:05:02,160
doesn't matter

130
00:05:01,120 --> 00:05:04,800
so

131
00:05:02,160 --> 00:05:06,880
i start doing the first research of this

132
00:05:04,800 --> 00:05:09,759
note and that will tell me

133
00:05:06,880 --> 00:05:12,000
the longest distance by following by

134
00:05:09,759 --> 00:05:14,720
starting at that node

135
00:05:12,000 --> 00:05:17,039
by only following the even nodes okay so

136
00:05:14,720 --> 00:05:19,199
for example if i start a node

137
00:05:17,039 --> 00:05:20,479
start do the preferences here it should

138
00:05:19,199 --> 00:05:22,639
tell me

139
00:05:20,479 --> 00:05:24,320
what what's the distance

140
00:05:22,639 --> 00:05:26,320
what's the longest distance i can

141
00:05:24,320 --> 00:05:28,000
traverse by starting here by following

142
00:05:26,320 --> 00:05:32,560
the even nodes

143
00:05:28,000 --> 00:05:32,560
three three yeah okay and how about here

144
00:05:33,280 --> 00:05:39,160
you sure

145
00:05:34,800 --> 00:05:39,160
i start from here the longest distance

146
00:05:42,320 --> 00:05:49,199
what's that four yeah okay so for each

147
00:05:45,520 --> 00:05:50,960
every even note i can do this and then

148
00:05:49,199 --> 00:05:52,960
i can compare the value and store the

149
00:05:50,960 --> 00:05:54,479
maximum okay i know so

150
00:05:52,960 --> 00:05:56,960
we talked about how to converting the

151
00:05:54,479 --> 00:05:59,520
binary tree into a graph we use the

152
00:05:56,960 --> 00:06:01,440
adjacent list remember so let's do this

153
00:05:59,520 --> 00:06:05,120
first of all converting your graph okay

154
00:06:01,440 --> 00:06:07,440
so that's g equals default dictionary

155
00:06:05,120 --> 00:06:09,840
default dictionary

156
00:06:07,440 --> 00:06:13,600
list is the list yeah it's the list of

157
00:06:09,840 --> 00:06:16,319
integer right it's a list of integer

158
00:06:13,600 --> 00:06:18,800
or it's a list of node okay let's just

159
00:06:16,319 --> 00:06:19,759
do a list okay and we find out what we

160
00:06:18,800 --> 00:06:22,160
need

161
00:06:19,759 --> 00:06:23,680
and now we can say okay so we need to do

162
00:06:22,160 --> 00:06:25,360
a definite search

163
00:06:23,680 --> 00:06:28,160
but we need to pass the loot and the

164
00:06:25,360 --> 00:06:30,000
parent okay the parent

165
00:06:28,160 --> 00:06:32,160
is not loot

166
00:06:30,000 --> 00:06:34,639
yeah we're reaching the terminal notes

167
00:06:32,160 --> 00:06:36,960
the empty we just return

168
00:06:34,639 --> 00:06:40,560
okay now if their parent if the parent

169
00:06:36,960 --> 00:06:41,840
is not numb then we can say what she

170
00:06:40,560 --> 00:06:44,560
loot

171
00:06:41,840 --> 00:06:46,400
stop a pen

172
00:06:44,560 --> 00:06:48,560
parent right

173
00:06:46,400 --> 00:06:51,280
a pen okay okay we are appending the

174
00:06:48,560 --> 00:06:55,039
note so this is the number okay

175
00:06:51,280 --> 00:06:57,440
a parent apparent and then g parent

176
00:06:55,039 --> 00:07:00,160
a pen rule right

177
00:06:57,440 --> 00:07:01,360
what does it mean yeah

178
00:07:00,160 --> 00:07:04,400
so look

179
00:07:01,360 --> 00:07:07,680
i'm here i'm at road right and this is

180
00:07:04,400 --> 00:07:10,319
parent i coming from parent

181
00:07:07,680 --> 00:07:13,440
all right i'm coming from parents so i

182
00:07:10,319 --> 00:07:15,520
in the graph i added two uh two ways why

183
00:07:13,440 --> 00:07:16,960
one is parent or visible

184
00:07:15,520 --> 00:07:19,360
look and the load over this is the

185
00:07:16,960 --> 00:07:22,800
parent okay so g c is the dictionary

186
00:07:19,360 --> 00:07:25,840
keys are the at the vertex yeah in the

187
00:07:22,800 --> 00:07:28,000
quad we talked about the vertex not the

188
00:07:25,840 --> 00:07:30,880
not the node okay the vertex yeah vertex

189
00:07:28,000 --> 00:07:33,120
and edge remember that g equals v

190
00:07:30,880 --> 00:07:35,440
e collection of vertex and h

191
00:07:33,120 --> 00:07:37,680
so i have a vertex parent i have a

192
00:07:35,440 --> 00:07:39,680
vertex root this is the final trigger

193
00:07:37,680 --> 00:07:41,680
and then i need to add edge from parents

194
00:07:39,680 --> 00:07:43,520
to the root and also need to add edge

195
00:07:41,680 --> 00:07:46,319
from root to parent that's what it does

196
00:07:43,520 --> 00:07:47,280
i don't know i can do this definitely

197
00:07:46,319 --> 00:07:49,680
okay

198
00:07:47,280 --> 00:07:52,879
i need to travel to the lab what's the

199
00:07:49,680 --> 00:07:54,639
parent of doodle left

200
00:07:52,879 --> 00:07:58,160
okay

201
00:07:54,639 --> 00:08:01,039
what's the parent of neutral right

202
00:07:58,160 --> 00:08:03,440
what's the parent of little right

203
00:08:01,039 --> 00:08:04,639
right what's this yeah that's a tricky

204
00:08:03,440 --> 00:08:06,639
one yeah

205
00:08:04,639 --> 00:08:09,039
okay now at this point then we can have

206
00:08:06,639 --> 00:08:11,599
this g dictionary okay

207
00:08:09,039 --> 00:08:14,479
and then i need to travel all it knows

208
00:08:11,599 --> 00:08:16,000
your vertex then i can say this okay

209
00:08:14,479 --> 00:08:18,160
answer this is the answer we have we

210
00:08:16,000 --> 00:08:20,639
need to return the longest

211
00:08:18,160 --> 00:08:21,680
longest even path and then i can say

212
00:08:20,639 --> 00:08:22,800
for

213
00:08:21,680 --> 00:08:24,720
vertex

214
00:08:22,800 --> 00:08:28,800
in g

215
00:08:24,720 --> 00:08:31,120
if vertex okay if we take some value

216
00:08:28,800 --> 00:08:33,360
and one equal equals zero if it's an

217
00:08:31,120 --> 00:08:34,959
even number and then i need to do this

218
00:08:33,360 --> 00:08:36,399
answer equals

219
00:08:34,959 --> 00:08:37,599
maximum

220
00:08:36,399 --> 00:08:39,760
answer

221
00:08:37,599 --> 00:08:41,360
questions let's start with the v okay

222
00:08:39,760 --> 00:08:43,680
that's what we're doing here

223
00:08:41,360 --> 00:08:46,000
yeah we have to implement this yes and

224
00:08:43,680 --> 00:08:48,480
we can answer okay this is this

225
00:08:46,000 --> 00:08:51,680
this is it

226
00:08:48,480 --> 00:08:53,360
so we start with every vertex even nodes

227
00:08:51,680 --> 00:08:55,519
and we do a preference search starting

228
00:08:53,360 --> 00:08:58,000
with the vertex yeah

229
00:08:55,519 --> 00:09:00,160
okay so now the word pfs we need to do

230
00:08:58,000 --> 00:09:02,720
this period pms okay

231
00:09:00,160 --> 00:09:05,040
so with the pss

232
00:09:02,720 --> 00:09:08,399
up

233
00:09:05,040 --> 00:09:09,760
so let's quickly divide it up pfs okay

234
00:09:08,399 --> 00:09:11,440
so

235
00:09:09,760 --> 00:09:14,080
what's the time complexity if you look

236
00:09:11,440 --> 00:09:16,160
at this if this is bfs surely it's one

237
00:09:14,080 --> 00:09:18,160
right what's this what's the time

238
00:09:16,160 --> 00:09:21,040
complexity if we

239
00:09:18,160 --> 00:09:21,040
if we go through

240
00:09:21,440 --> 00:09:25,519
this is o n and we're going to yeah

241
00:09:23,760 --> 00:09:27,680
we're going through

242
00:09:25,519 --> 00:09:30,480
because in the worst case every node in

243
00:09:27,680 --> 00:09:32,959
the binary tree is even number and then

244
00:09:30,480 --> 00:09:35,600
there are n nodes i need to iterate this

245
00:09:32,959 --> 00:09:37,760
and time and for each and for each time

246
00:09:35,600 --> 00:09:39,600
i need to do this question search

247
00:09:37,760 --> 00:09:41,040
right this could could take another end

248
00:09:39,600 --> 00:09:43,839
time right

249
00:09:41,040 --> 00:09:46,480
yeah consider these

250
00:09:43,839 --> 00:09:48,320
extreme cases all nodes

251
00:09:46,480 --> 00:09:51,120
are even numbered

252
00:09:48,320 --> 00:09:53,440
then i need to go through this even

253
00:09:51,120 --> 00:09:56,480
n times sometimes

254
00:09:53,440 --> 00:09:58,880
yeah for each one i do the preferences

255
00:09:56,480 --> 00:10:00,720
needs to do this end time yeah oh and

256
00:09:58,880 --> 00:10:02,320
times n okay roughly

257
00:10:00,720 --> 00:10:04,720
one square okay

258
00:10:02,320 --> 00:10:06,880
a little bit slower than yesterday right

259
00:10:04,720 --> 00:10:08,720
yeah so but this is a totally different

260
00:10:06,880 --> 00:10:10,800
idea yeah

261
00:10:08,720 --> 00:10:12,720
how is it different

262
00:10:10,800 --> 00:10:15,279
we need to convert it to

263
00:10:12,720 --> 00:10:16,399
graph and we treat it as a graph problem

264
00:10:15,279 --> 00:10:17,279
okay

265
00:10:16,399 --> 00:10:20,240
yeah

266
00:10:17,279 --> 00:10:22,000
so let's do this breakfast search

267
00:10:20,240 --> 00:10:24,160
do you still remember the processor how

268
00:10:22,000 --> 00:10:26,800
do we do this breakfast search

269
00:10:24,160 --> 00:10:28,959
note okay let's do this note what kind

270
00:10:26,800 --> 00:10:32,480
of data structure can we use to to

271
00:10:28,959 --> 00:10:33,279
implement a perfect search

272
00:10:32,480 --> 00:10:36,880
okay

273
00:10:33,279 --> 00:10:36,880
okay if not note

274
00:10:37,279 --> 00:10:41,360
let's let's call it root

275
00:10:40,079 --> 00:10:43,760
root

276
00:10:41,360 --> 00:10:49,040
let's return zero right

277
00:10:43,760 --> 00:10:49,040
special case and q equals dq

278
00:10:49,680 --> 00:10:54,320
for each one i have a loop node current

279
00:10:51,760 --> 00:10:56,320
node and the number of

280
00:10:54,320 --> 00:10:58,240
the number of

281
00:10:56,320 --> 00:11:01,279
distance yeah the number of distances at

282
00:10:58,240 --> 00:11:03,680
the beginning is one okay and obviously

283
00:11:01,279 --> 00:11:05,360
look if if not note

284
00:11:03,680 --> 00:11:08,320
or

285
00:11:05,360 --> 00:11:11,600
all the due top value

286
00:11:08,320 --> 00:11:13,360
and one is is uh is an odd number than

287
00:11:11,600 --> 00:11:16,079
return zero yeah obviously we can't

288
00:11:13,360 --> 00:11:18,880
start if we start breakfast search on uh

289
00:11:16,079 --> 00:11:20,320
odd number then we do ten zero right

290
00:11:18,880 --> 00:11:21,839
yeah makes sense

291
00:11:20,320 --> 00:11:24,240
yeah

292
00:11:21,839 --> 00:11:25,680
now we start this and one or

293
00:11:24,240 --> 00:11:27,600
in the worst case

294
00:11:25,680 --> 00:11:31,120
it doesn't have any

295
00:11:27,600 --> 00:11:33,120
even numbers to even notes to work right

296
00:11:31,120 --> 00:11:35,360
it would be you'll be surrounded by odd

297
00:11:33,120 --> 00:11:38,399
number then it will return one right

298
00:11:35,360 --> 00:11:39,279
okay then i have answer equals zero then

299
00:11:38,399 --> 00:11:40,959
y

300
00:11:39,279 --> 00:11:43,440
q

301
00:11:40,959 --> 00:11:45,680
and i need to do this what i i need to

302
00:11:43,440 --> 00:11:48,399
do okay current

303
00:11:45,680 --> 00:11:50,000
current and the distance equals q the

304
00:11:48,399 --> 00:11:51,760
problem right

305
00:11:50,000 --> 00:11:54,000
remember we use the

306
00:11:51,760 --> 00:11:57,839
uh dq dq

307
00:11:54,000 --> 00:11:57,839
what's dq mean

308
00:11:58,399 --> 00:12:02,639
double queue yeah we we append from the

309
00:12:01,040 --> 00:12:04,480
right hand side we talk from the left

310
00:12:02,639 --> 00:12:06,399
hand side let's assume first thing first

311
00:12:04,480 --> 00:12:08,160
off right

312
00:12:06,399 --> 00:12:09,279
look and then i need to go through the

313
00:12:08,160 --> 00:12:13,200
kids yeah

314
00:12:09,279 --> 00:12:15,839
for the kids next end in

315
00:12:13,200 --> 00:12:18,320
g g here we are using the graph here

316
00:12:15,839 --> 00:12:20,480
look we're using the graph g

317
00:12:18,320 --> 00:12:23,279
g current

318
00:12:20,480 --> 00:12:25,440
right and then we need to

319
00:12:23,279 --> 00:12:27,760
if it's a graph right if it's a graph

320
00:12:25,440 --> 00:12:30,480
two and four i need to append the four

321
00:12:27,760 --> 00:12:33,920
but when i up when i pop from the four i

322
00:12:30,480 --> 00:12:36,000
need do i need to append two again

323
00:12:33,920 --> 00:12:39,600
no right because it's i already visited

324
00:12:36,000 --> 00:12:42,399
so i need a quest table a notebook to

325
00:12:39,600 --> 00:12:45,600
remember the notes we have visited right

326
00:12:42,399 --> 00:12:49,200
so i have i need to put here a sim

327
00:12:45,600 --> 00:12:50,079
equal set right set is a hash table

328
00:12:49,200 --> 00:12:53,200
and

329
00:12:50,079 --> 00:12:56,160
yeah the key g n is the k is the next

330
00:12:53,200 --> 00:12:59,040
note right this is current here and then

331
00:12:56,160 --> 00:13:00,560
n will be its kit here

332
00:12:59,040 --> 00:13:03,440
it's key yeah

333
00:13:00,560 --> 00:13:06,320
the vertex connected to it and

334
00:13:03,440 --> 00:13:09,040
i need to do what if

335
00:13:06,320 --> 00:13:10,560
if n not in sin

336
00:13:09,040 --> 00:13:12,079
right

337
00:13:10,560 --> 00:13:14,720
also

338
00:13:12,079 --> 00:13:18,320
also n

339
00:13:14,720 --> 00:13:20,160
end of value and one is zero it's an

340
00:13:18,320 --> 00:13:22,320
even number right because if it's what

341
00:13:20,160 --> 00:13:24,560
number we don't care right if it's all

342
00:13:22,320 --> 00:13:26,720
number we don't care we don't progress

343
00:13:24,560 --> 00:13:28,000
then we do what now we can

344
00:13:26,720 --> 00:13:30,079
sing

345
00:13:28,000 --> 00:13:35,839
dot add

346
00:13:30,079 --> 00:13:35,839
at n right and then q dot append

347
00:13:36,639 --> 00:13:40,160
and

348
00:13:37,519 --> 00:13:41,680
d plus one right we have one more note

349
00:13:40,160 --> 00:13:42,639
the distance yeah

350
00:13:41,680 --> 00:13:46,160
yeah

351
00:13:42,639 --> 00:13:49,199
d one of the person okay so c here needs

352
00:13:46,160 --> 00:13:51,839
to add the c scene.add root

353
00:13:49,199 --> 00:13:54,880
yeah because we have seen the root right

354
00:13:51,839 --> 00:13:57,040
and then return

355
00:13:54,880 --> 00:14:00,480
okay now i have i i need to put this

356
00:13:57,040 --> 00:14:02,720
answer here answer equals max

357
00:14:00,480 --> 00:14:05,600
answer dui we want to get the maximum

358
00:14:02,720 --> 00:14:08,880
this d we want to get the maximum of d d

359
00:14:05,600 --> 00:14:12,800
is the number of nodes in the

360
00:14:08,880 --> 00:14:14,399
longest path right return answer

361
00:14:12,800 --> 00:14:16,880
okay

362
00:14:14,399 --> 00:14:19,040
yeah

363
00:14:16,880 --> 00:14:20,800
any questions so far i mean this is a

364
00:14:19,040 --> 00:14:22,880
little bit little bit

365
00:14:20,800 --> 00:14:24,399
i mean breakfast surgery is

366
00:14:22,880 --> 00:14:26,720
usually

367
00:14:24,399 --> 00:14:28,480
what it is it's usually a little bit

368
00:14:26,720 --> 00:14:30,240
more complicated than deficiency right

369
00:14:28,480 --> 00:14:32,800
because therefore search we can use the

370
00:14:30,240 --> 00:14:35,199
recursion to do it right and it's more

371
00:14:32,800 --> 00:14:37,120
intuitive yeah you visit the left tree

372
00:14:35,199 --> 00:14:38,959
you reach the right tree you don't need

373
00:14:37,120 --> 00:14:40,800
to worry about how to

374
00:14:38,959 --> 00:14:42,320
maintain the stack right the computer

375
00:14:40,800 --> 00:14:43,680
maintenance definitely but for the first

376
00:14:42,320 --> 00:14:45,839
massage

377
00:14:43,680 --> 00:14:45,839
the

378
00:14:46,720 --> 00:14:51,519
and a pen right and we need to also

379
00:14:48,880 --> 00:14:53,440
remember to tell it

380
00:14:51,519 --> 00:14:54,880
we don't want to revisit it again but

381
00:14:53,440 --> 00:14:56,720
for the default surgery we don't have

382
00:14:54,880 --> 00:14:59,199
this problem why is that

383
00:14:56,720 --> 00:15:01,680
we visit the kit

384
00:14:59,199 --> 00:15:03,839
why do okay one question why don't we

385
00:15:01,680 --> 00:15:05,600
need to have a

386
00:15:03,839 --> 00:15:06,560
hash table seen

387
00:15:05,600 --> 00:15:09,360
to

388
00:15:06,560 --> 00:15:11,279
check if the note has visited come on

389
00:15:09,360 --> 00:15:14,959
that's a good question right

390
00:15:11,279 --> 00:15:14,959
look here we use the hash table

391
00:15:16,160 --> 00:15:18,320
sorry

392
00:15:17,360 --> 00:15:20,240
what

393
00:15:18,320 --> 00:15:22,880
like if you

394
00:15:20,240 --> 00:15:25,440
if you um move to another note you might

395
00:15:22,880 --> 00:15:27,920
go back to say this is for the club but

396
00:15:25,440 --> 00:15:29,360
for the tree to do we have this problem

397
00:15:27,920 --> 00:15:30,880
that's right because three the parent

398
00:15:29,360 --> 00:15:33,199
you go to the left kid you go to the

399
00:15:30,880 --> 00:15:34,560
right kid you don't go back right

400
00:15:33,199 --> 00:15:36,800
there's no way to go back it's one

401
00:15:34,560 --> 00:15:38,720
direction but for the one that's two

402
00:15:36,800 --> 00:15:40,560
direction that's why we need to use a

403
00:15:38,720 --> 00:15:42,560
hash table notebook

404
00:15:40,560 --> 00:15:45,040
we have a visited that no

405
00:15:42,560 --> 00:15:47,120
we do we put it in the notebook

406
00:15:45,040 --> 00:15:48,079
next time we next time we need to check

407
00:15:47,120 --> 00:15:50,399
okay

408
00:15:48,079 --> 00:15:52,160
if not has been visited then we don't

409
00:15:50,399 --> 00:15:54,880
visit it okay

410
00:15:52,160 --> 00:15:57,040
yeah

411
00:15:54,880 --> 00:15:58,079
okay so last question what do you learn

412
00:15:57,040 --> 00:16:01,199
so far

413
00:15:58,079 --> 00:16:01,199
what have you learned so far

414
00:16:02,000 --> 00:16:06,720
so can you tell me what's the problem

415
00:16:03,839 --> 00:16:06,720
and how do we solve it

416
00:16:07,040 --> 00:16:12,240
for today even

417
00:16:10,480 --> 00:16:13,920
and how do we solve this yesterday we

418
00:16:12,240 --> 00:16:16,959
solved it using the recursion data

419
00:16:13,920 --> 00:16:19,040
search right today we started using the

420
00:16:16,959 --> 00:16:21,440
breakfast search yeah okay

421
00:16:19,040 --> 00:16:23,279
q our breakfast as you implement you use

422
00:16:21,440 --> 00:16:24,959
the cube but how do we

423
00:16:23,279 --> 00:16:26,560
how do we i mean what's what are the

424
00:16:24,959 --> 00:16:29,199
three steps four what are the three

425
00:16:26,560 --> 00:16:30,800
steps turn it into a graph okay first

426
00:16:29,199 --> 00:16:34,240
thing planning the question so this is a

427
00:16:30,800 --> 00:16:37,680
part problem and then make a set and see

428
00:16:34,240 --> 00:16:40,000
so and then i started to do breakfast on

429
00:16:37,680 --> 00:16:42,079
which notes

430
00:16:40,000 --> 00:16:44,079
it's a graphic problem that's a graph

431
00:16:42,079 --> 00:16:46,800
and then on which notes i need to do

432
00:16:44,079 --> 00:16:48,240
this breakfast search even even notes

433
00:16:46,800 --> 00:16:49,519
and the prospect search returns the

434
00:16:48,240 --> 00:16:51,680
longest

435
00:16:49,519 --> 00:16:52,800
path yeah longest distance of the even

436
00:16:51,680 --> 00:16:54,959
nodes right

437
00:16:52,800 --> 00:16:57,519
and then i can compare here answer

438
00:16:54,959 --> 00:16:59,600
equals maximum answer preferences okay

439
00:16:57,519 --> 00:17:02,160
so here

440
00:16:59,600 --> 00:17:04,480
pressure search this this could be

441
00:17:02,160 --> 00:17:06,000
replaced with staff search right yeah

442
00:17:04,480 --> 00:17:07,120
yeah look at me

443
00:17:06,000 --> 00:17:09,439
this could be replaced with

444
00:17:07,120 --> 00:17:10,640
staffordshire but breakfast sets

445
00:17:09,439 --> 00:17:13,760
is

446
00:17:10,640 --> 00:17:15,120
it's easier right it's easier

447
00:17:13,760 --> 00:17:16,799
it's more i mean

448
00:17:15,120 --> 00:17:18,799
it's straightforward it's more

449
00:17:16,799 --> 00:17:21,760
straightforward okay

450
00:17:18,799 --> 00:17:22,480
okay that's it for today good job

451
00:17:21,760 --> 00:17:23,520
bye

452
00:17:22,480 --> 00:17:25,760
bye bye

453
00:17:23,520 --> 00:17:28,400
ryan are you all right

454
00:17:25,760 --> 00:17:30,400
hello hello ryan are you there

455
00:17:28,400 --> 00:17:33,280
okay say bye to people bye

456
00:17:30,400 --> 00:17:33,280
bye

