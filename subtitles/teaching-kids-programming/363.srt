1
00:00:00,640 --> 00:00:06,399
hello mr mr ryan are you right yeah

2
00:00:04,000 --> 00:00:08,400
okay so remember what uh what we talked

3
00:00:06,399 --> 00:00:10,480
about yesterday

4
00:00:08,400 --> 00:00:11,679
the lot yeah the rod we only cut the

5
00:00:10,480 --> 00:00:14,799
rods

6
00:00:11,679 --> 00:00:15,599
yeah and we want to sell the rods

7
00:00:14,799 --> 00:00:19,520
right

8
00:00:15,599 --> 00:00:22,160
so uh one three five seven seven

9
00:00:19,520 --> 00:00:24,800
seven okay so that's the wrong if we can

10
00:00:22,160 --> 00:00:27,119
sell the drop color rock and we can sell

11
00:00:24,800 --> 00:00:29,439
the rock if size one is

12
00:00:27,119 --> 00:00:32,239
for size one we got one dollar for size

13
00:00:29,439 --> 00:00:34,960
two we get three dollars size five three

14
00:00:32,239 --> 00:00:37,280
we get five dollars etc okay if we have

15
00:00:34,960 --> 00:00:40,320
a lot we size six

16
00:00:37,280 --> 00:00:42,960
and the maximum profit we can get is

17
00:00:40,320 --> 00:00:46,559
cutting into two pieces of three then we

18
00:00:42,960 --> 00:00:49,520
get ten dollars or you can cut it with

19
00:00:46,559 --> 00:00:51,039
what with two and four and still get ten

20
00:00:49,520 --> 00:00:54,800
dollars okay

21
00:00:51,039 --> 00:00:57,280
yeah this is actually a unbounded nut

22
00:00:54,800 --> 00:00:59,760
set problem what's next

23
00:00:57,280 --> 00:00:59,760
that step

24
00:01:01,120 --> 00:01:04,640
what's in that step anybody

25
00:01:06,799 --> 00:01:09,600
net set

26
00:01:09,760 --> 00:01:13,439
okay nasa it's a bed yeah it's his back

27
00:01:12,640 --> 00:01:15,840
look

28
00:01:13,439 --> 00:01:18,240
nuts okay look

29
00:01:15,840 --> 00:01:18,240
okay

30
00:01:18,400 --> 00:01:23,280
so i'm balding upside

31
00:01:20,320 --> 00:01:26,159
what does it mean it means that

32
00:01:23,280 --> 00:01:27,840
we have a few items yeah yeah this is

33
00:01:26,159 --> 00:01:29,759
the item we have

34
00:01:27,840 --> 00:01:33,759
we have items

35
00:01:29,759 --> 00:01:33,759
items these is the

36
00:01:34,320 --> 00:01:37,710
item value okay let's say the value of

37
00:01:36,880 --> 00:01:39,360
items

38
00:01:37,710 --> 00:01:42,479
[Music]

39
00:01:39,360 --> 00:01:45,040
ready song item and then the size for it

40
00:01:42,479 --> 00:01:47,520
for for each one is one two three four

41
00:01:45,040 --> 00:01:50,320
five six this is the size for that this

42
00:01:47,520 --> 00:01:51,360
is the value for that and we have a nut

43
00:01:50,320 --> 00:01:53,680
set

44
00:01:51,360 --> 00:01:55,680
which has compressed uh

45
00:01:53,680 --> 00:01:58,479
capacity with n

46
00:01:55,680 --> 00:02:00,079
and for each item you can choose as many

47
00:01:58,479 --> 00:02:02,560
as you want

48
00:02:00,079 --> 00:02:04,399
as long as the total

49
00:02:02,560 --> 00:02:07,200
weight does not

50
00:02:04,399 --> 00:02:09,759
exceed the total capacity capacity okay

51
00:02:07,200 --> 00:02:12,480
and then we want to maximize the value

52
00:02:09,759 --> 00:02:15,120
right we call it anabolic net set

53
00:02:12,480 --> 00:02:18,080
and bounding

54
00:02:15,120 --> 00:02:21,520
okay so look we want to maximize we want

55
00:02:18,080 --> 00:02:22,959
to maximize what we want to maximize

56
00:02:21,520 --> 00:02:24,400
the profit

57
00:02:22,959 --> 00:02:26,959
which is what

58
00:02:24,400 --> 00:02:29,680
so for these items yeah we can pick as

59
00:02:26,959 --> 00:02:31,599
many items as we want right so let's say

60
00:02:29,680 --> 00:02:33,920
for each one we pick uh

61
00:02:31,599 --> 00:02:36,480
we pick one number the the

62
00:02:33,920 --> 00:02:39,440
lowercase n and i okay so we want to

63
00:02:36,480 --> 00:02:40,720
pick p equals n i

64
00:02:39,440 --> 00:02:43,519
and i

65
00:02:40,720 --> 00:02:45,760
times its values v i

66
00:02:43,519 --> 00:02:45,760
yeah

67
00:02:46,800 --> 00:02:49,120
yeah

68
00:02:47,599 --> 00:02:52,640
we get the sum

69
00:02:49,120 --> 00:02:54,560
as long as what as long as dc

70
00:02:52,640 --> 00:02:57,280
uh as long as what

71
00:02:54,560 --> 00:03:00,480
as long as its total capacity

72
00:02:57,280 --> 00:03:04,560
does not uh is less or equal than n

73
00:03:00,480 --> 00:03:06,000
right so the total capacity is what uh n

74
00:03:04,560 --> 00:03:07,920
i

75
00:03:06,000 --> 00:03:10,000
and i okay that's the weight okay let's

76
00:03:07,920 --> 00:03:11,360
say the weight weight i okay

77
00:03:10,000 --> 00:03:14,239
yeah

78
00:03:11,360 --> 00:03:16,800
as long as the total capacity

79
00:03:14,239 --> 00:03:20,400
n i times w i

80
00:03:16,800 --> 00:03:23,120
right yeah w i is less or equal than

81
00:03:20,400 --> 00:03:26,799
total capacity bigger n okay

82
00:03:23,120 --> 00:03:29,680
and because w i equals i plus 1 right i

83
00:03:26,799 --> 00:03:31,280
plus 1 if i start from 0 so we can

84
00:03:29,680 --> 00:03:33,840
change this to

85
00:03:31,280 --> 00:03:36,080
i plus one okay

86
00:03:33,840 --> 00:03:38,959
yeah this is an upset i'm bounding

87
00:03:36,080 --> 00:03:40,640
upside and yesterday we used the

88
00:03:38,959 --> 00:03:42,440
what what kind of approach did we use

89
00:03:40,640 --> 00:03:47,040
yesterday

90
00:03:42,440 --> 00:03:49,760
[Music]

91
00:03:47,040 --> 00:03:51,680
so eventually you make it work

92
00:03:49,760 --> 00:03:53,760
top-down dynamic programming okay so

93
00:03:51,680 --> 00:03:56,000
let's review this a little bit cache

94
00:03:53,760 --> 00:03:59,360
yeah what's cache caching is asking

95
00:03:56,000 --> 00:04:01,920
computer to memorize the values for us

96
00:03:59,360 --> 00:04:03,920
okay yeah so this is the magic keyword

97
00:04:01,920 --> 00:04:05,840
okay so we are asking computer to

98
00:04:03,920 --> 00:04:08,239
memorize yeah because if you don't ask

99
00:04:05,840 --> 00:04:09,920
computer to memorize you just forget

100
00:04:08,239 --> 00:04:11,360
and next time you ask it to calculate it

101
00:04:09,920 --> 00:04:13,280
will happen

102
00:04:11,360 --> 00:04:16,639
he forgets you calculate again it takes

103
00:04:13,280 --> 00:04:18,799
some right but if we add thing with cash

104
00:04:16,639 --> 00:04:20,720
okay then if dividends three it

105
00:04:18,799 --> 00:04:23,360
calculates for example it's like it

106
00:04:20,720 --> 00:04:25,120
stays time uh it spends like 10 minutes

107
00:04:23,360 --> 00:04:26,000
to calculate it right

108
00:04:25,120 --> 00:04:28,160
yeah

109
00:04:26,000 --> 00:04:31,440
and i remember it he remember in his

110
00:04:28,160 --> 00:04:33,280
memory yeah he his memory yeah and the

111
00:04:31,440 --> 00:04:36,080
next time like five minutes later i

112
00:04:33,280 --> 00:04:38,400
asked computer what's different three

113
00:04:36,080 --> 00:04:40,320
does he need to do calculator again now

114
00:04:38,400 --> 00:04:42,560
you just you need to be fetching from

115
00:04:40,320 --> 00:04:43,680
from the cashier for the cash what's

116
00:04:42,560 --> 00:04:45,120
cash

117
00:04:43,680 --> 00:04:46,560
what is the meaning of the cash

118
00:04:45,120 --> 00:04:48,320
remembering

119
00:04:46,560 --> 00:04:50,639
okay remember it's associated with

120
00:04:48,320 --> 00:04:52,560
remembering so what's cash thing

121
00:04:50,639 --> 00:04:54,320
it's like memorizing you know the

122
00:04:52,560 --> 00:04:57,280
cashier money

123
00:04:54,320 --> 00:04:59,680
not that cash this not this cash cash

124
00:04:57,280 --> 00:05:02,800
c-a-c-h-e cash

125
00:04:59,680 --> 00:05:02,800
what's this in english

126
00:05:03,199 --> 00:05:07,120
testing cashing is that

127
00:05:05,120 --> 00:05:09,360
another language

128
00:05:07,120 --> 00:05:11,680
yeah caching is like computer cache

129
00:05:09,360 --> 00:05:13,440
memory you can you can treat it as a

130
00:05:11,680 --> 00:05:16,479
memory right

131
00:05:13,440 --> 00:05:17,280
it's exactly the purpose of this i catch

132
00:05:16,479 --> 00:05:21,440
it

133
00:05:17,280 --> 00:05:24,560
i i catch it for later uses okay

134
00:05:21,440 --> 00:05:26,400
so and when i try for look

135
00:05:24,560 --> 00:05:28,720
if the size is n

136
00:05:26,400 --> 00:05:32,479
if the left side is and then i can cut

137
00:05:28,720 --> 00:05:35,039
it in n ways right so each way i cut it

138
00:05:32,479 --> 00:05:37,280
if cassie i keep the size with i right

139
00:05:35,039 --> 00:05:40,080
keep the size with i plus one actually

140
00:05:37,280 --> 00:05:41,360
and then profit i'm keeping that is

141
00:05:40,080 --> 00:05:44,080
price i

142
00:05:41,360 --> 00:05:45,919
and the remaining size is n minus i

143
00:05:44,080 --> 00:05:48,720
minus one and i could recursively

144
00:05:45,919 --> 00:05:50,320
calling the differences function and now

145
00:05:48,720 --> 00:05:51,440
we want to calculate

146
00:05:50,320 --> 00:05:52,560
la

147
00:05:51,440 --> 00:05:56,000
what

148
00:05:52,560 --> 00:05:58,400
uh we don't calculate the maximizer so

149
00:05:56,000 --> 00:06:00,639
it's the maximum profit

150
00:05:58,400 --> 00:06:02,880
okay so why i write the minimum here

151
00:06:00,639 --> 00:06:05,280
this is the maximum right this is the

152
00:06:02,880 --> 00:06:07,199
maximum yeah we want to get the maximum

153
00:06:05,280 --> 00:06:10,160
they're not a minimum okay that was a

154
00:06:07,199 --> 00:06:10,160
mistake okay

155
00:06:10,800 --> 00:06:14,240
yep

156
00:06:12,160 --> 00:06:17,440
uh

157
00:06:14,240 --> 00:06:19,680
so now so what's butter out right so top

158
00:06:17,440 --> 00:06:21,440
down let the computer to cache it for us

159
00:06:19,680 --> 00:06:23,840
the bottom up we need to remember the

160
00:06:21,440 --> 00:06:26,160
things ourselves and using the static

161
00:06:23,840 --> 00:06:29,360
error array so we remember the values in

162
00:06:26,160 --> 00:06:30,080
the array okay edp yeah dp array okay so

163
00:06:29,360 --> 00:06:31,680
let's

164
00:06:30,080 --> 00:06:35,840
write it

165
00:06:31,680 --> 00:06:38,479
so we want to ap able to caches the

166
00:06:35,840 --> 00:06:42,400
uh to be able to store n

167
00:06:38,479 --> 00:06:47,440
and values for dpn right so let's say

168
00:06:42,400 --> 00:06:47,440
so look for previously this defaults and

169
00:06:47,600 --> 00:06:52,639
make a noise again

170
00:06:50,319 --> 00:06:55,120
we have n values so now we just have a

171
00:06:52,639 --> 00:06:57,520
dp array which is at the beginning at

172
00:06:55,120 --> 00:06:59,759
zero times n plus one okay

173
00:06:57,520 --> 00:07:03,120
so leave we are starting the values in

174
00:06:59,759 --> 00:07:03,120
this dp array right

175
00:07:07,680 --> 00:07:11,759
then i can go through the values i want

176
00:07:09,759 --> 00:07:15,360
to check i want to

177
00:07:11,759 --> 00:07:17,840
i want to calculate which is n plus one

178
00:07:15,360 --> 00:07:21,440
and then i need to go through the values

179
00:07:17,840 --> 00:07:21,440
up to range i

180
00:07:21,520 --> 00:07:24,720
yeah

181
00:07:22,800 --> 00:07:25,520
and then dp

182
00:07:24,720 --> 00:07:28,840
i

183
00:07:25,520 --> 00:07:31,199
equals the minimum of

184
00:07:28,840 --> 00:07:33,680
dpi and then

185
00:07:31,199 --> 00:07:35,599
l-y-m

186
00:07:33,680 --> 00:07:38,400
so look i'm i want to calculate the

187
00:07:35,599 --> 00:07:41,039
i-d-p-i value this is because from the

188
00:07:38,400 --> 00:07:43,759
previously dfsn right okay i want to

189
00:07:41,039 --> 00:07:46,240
calculate the dpi value

190
00:07:43,759 --> 00:07:49,120
i want to get a maximum so how many i

191
00:07:46,240 --> 00:07:51,199
can cut it in j ways yeah in general so

192
00:07:49,120 --> 00:07:54,800
i can cut it as pp

193
00:07:51,199 --> 00:07:56,800
so now the remaining of this was i minus

194
00:07:54,800 --> 00:07:59,919
j minus one right

195
00:07:56,800 --> 00:08:02,240
yeah this is the remaining size

196
00:07:59,919 --> 00:08:04,800
plus price

197
00:08:02,240 --> 00:08:08,319
price this is the value the value yeah

198
00:08:04,800 --> 00:08:09,440
the value we can get by keeping the size

199
00:08:08,319 --> 00:08:11,759
what

200
00:08:09,440 --> 00:08:14,720
keeping the size what

201
00:08:11,759 --> 00:08:17,520
j right size j plus one right because

202
00:08:14,720 --> 00:08:20,240
they start with zero three by one

203
00:08:17,520 --> 00:08:21,680
right and then return we just return the

204
00:08:20,240 --> 00:08:24,800
dp

205
00:08:21,680 --> 00:08:27,199
n right or we can return dt minus one

206
00:08:24,800 --> 00:08:28,960
right easy you see

207
00:08:27,199 --> 00:08:30,240
that makes sense

208
00:08:28,960 --> 00:08:31,440
i need

209
00:08:30,240 --> 00:08:33,279
so

210
00:08:31,440 --> 00:08:34,560
i got a question yeah that's a good

211
00:08:33,279 --> 00:08:37,279
question

212
00:08:34,560 --> 00:08:40,959
on the fourth line you said it would be

213
00:08:37,279 --> 00:08:40,959
the maximum but you read the

214
00:08:42,880 --> 00:08:46,640
yeah yeah i always like the mistake okay

215
00:08:45,279 --> 00:08:48,880
so it's maximum

216
00:08:46,640 --> 00:08:51,600
what did they say i said maximum minimum

217
00:08:48,880 --> 00:08:53,200
he said maximum five row the minimum

218
00:08:51,600 --> 00:08:55,680
yeah

219
00:08:53,200 --> 00:08:57,360
it proves you're actually listen that's

220
00:08:55,680 --> 00:08:59,120
good right

221
00:08:57,360 --> 00:09:01,360
you're actually listening yeah you pay

222
00:08:59,120 --> 00:09:03,040
attention right okay

223
00:09:01,360 --> 00:09:05,360
yeah because sometimes i read the code i

224
00:09:03,040 --> 00:09:07,519
write a mistake but when i say something

225
00:09:05,360 --> 00:09:10,240
i wrote it i i may

226
00:09:07,519 --> 00:09:11,839
not write by correctly okay okay what's

227
00:09:10,240 --> 00:09:15,120
the time complexity if you're looking at

228
00:09:11,839 --> 00:09:17,839
this what's the time capacity

229
00:09:15,120 --> 00:09:19,279
what's the time to make it different oh

230
00:09:17,839 --> 00:09:21,279
n

231
00:09:19,279 --> 00:09:23,760
last one

232
00:09:21,279 --> 00:09:27,200
that's another root n square

233
00:09:23,760 --> 00:09:29,839
yeah n squared look this i goes to n n

234
00:09:27,200 --> 00:09:33,360
iteration but for each eye it needs to

235
00:09:29,839 --> 00:09:37,519
goes to j right so actually it's look

236
00:09:33,360 --> 00:09:39,440
n plus n minus 1 plus n minus 2 plus

237
00:09:37,519 --> 00:09:42,000
okay so these if you add it together

238
00:09:39,440 --> 00:09:43,920
you'll be something like m plus 1

239
00:09:42,000 --> 00:09:45,600
you know yeah if you add it to 1 then

240
00:09:43,920 --> 00:09:48,320
you n plus 1

241
00:09:45,600 --> 00:09:51,680
divided by 2 okay

242
00:09:48,320 --> 00:09:53,920
n plus n minus 1 plus n minus plus t1

243
00:09:51,680 --> 00:09:56,560
do you recognize this

244
00:09:53,920 --> 00:09:58,800
1 plus 2 plus 3 plus 4 plus 5 the

245
00:09:56,560 --> 00:10:01,760
equation is this this is nothing but

246
00:09:58,800 --> 00:10:04,880
look 1 plus 1 plus 2 plus 3 plus 4 5

247
00:10:01,760 --> 00:10:06,160
yeah plus 200 what's the sum

248
00:10:04,880 --> 00:10:10,200
yeah

249
00:10:06,160 --> 00:10:14,079
100 times 100 plus one divided by two

250
00:10:10,200 --> 00:10:16,640
550 times 101.

251
00:10:14,079 --> 00:10:16,640
what's this

252
00:10:16,910 --> 00:10:20,079
[Music]

253
00:10:18,240 --> 00:10:22,480
yeah exactly so that's the equation here

254
00:10:20,079 --> 00:10:23,839
to sum up the first n

255
00:10:22,480 --> 00:10:27,279
integers

256
00:10:23,839 --> 00:10:29,760
from one okay so look this one if we

257
00:10:27,279 --> 00:10:32,399
wrote it out it would be n square plus n

258
00:10:29,760 --> 00:10:33,839
divided by two first of all we drop the

259
00:10:32,399 --> 00:10:36,240
constant

260
00:10:33,839 --> 00:10:39,440
second of all look this is n square i

261
00:10:36,240 --> 00:10:42,079
have n here but look which is bigger n

262
00:10:39,440 --> 00:10:42,079
square and n

263
00:10:42,560 --> 00:10:46,480
which is bigger

264
00:10:44,079 --> 00:10:47,920
if n bigger than one and

265
00:10:46,480 --> 00:10:50,640
which is bigger

266
00:10:47,920 --> 00:10:52,399
square and square yeah so yeah square

267
00:10:50,640 --> 00:10:53,279
this is bigger so

268
00:10:52,399 --> 00:10:55,920
in

269
00:10:53,279 --> 00:10:58,480
what we said complexity we always keep

270
00:10:55,920 --> 00:11:00,399
the most dominant one right because this

271
00:10:58,480 --> 00:11:02,480
is much more complicated than this one

272
00:11:00,399 --> 00:11:04,160
so we also dropped it okay

273
00:11:02,480 --> 00:11:05,760
it makes sense yeah we talked about this

274
00:11:04,160 --> 00:11:07,680
before so that time comes let's say oh n

275
00:11:05,760 --> 00:11:08,800
square that's why we get the o n square

276
00:11:07,680 --> 00:11:10,800
okay

277
00:11:08,800 --> 00:11:12,880
yeah because look the second iteration

278
00:11:10,800 --> 00:11:16,880
does not go to the end right it goes to

279
00:11:12,880 --> 00:11:18,240
the i only right if this goes to n

280
00:11:16,880 --> 00:11:19,760
for each i

281
00:11:18,240 --> 00:11:21,680
for each n

282
00:11:19,760 --> 00:11:23,519
another n so that's n square that's

283
00:11:21,680 --> 00:11:26,480
easier right we can easily get one

284
00:11:23,519 --> 00:11:28,880
square but for this one i goes to n for

285
00:11:26,480 --> 00:11:31,279
each j goes to i

286
00:11:28,880 --> 00:11:33,440
so that's what we get

287
00:11:31,279 --> 00:11:36,079
so let's let's the complexity is

288
00:11:33,440 --> 00:11:37,839
actually all n squared plus n divided by

289
00:11:36,079 --> 00:11:39,839
two first of all we drop the constant

290
00:11:37,839 --> 00:11:42,240
second of one we drop the smaller parts

291
00:11:39,839 --> 00:11:43,920
so we keep these most dominant part

292
00:11:42,240 --> 00:11:47,200
which is on square that's why we did it

293
00:11:43,920 --> 00:11:50,079
yeah space from xt

294
00:11:47,200 --> 00:11:52,000
what's here look at me how do you play i

295
00:11:50,079 --> 00:11:54,079
won

296
00:11:52,000 --> 00:11:56,880
oh n yeah because we are allocating n

297
00:11:54,079 --> 00:11:59,760
right and one last one

298
00:11:56,880 --> 00:12:01,680
okay o n plus one is actually one okay

299
00:11:59,760 --> 00:12:02,880
we drop the constant we don't talk about

300
00:12:01,680 --> 00:12:05,440
the constant

301
00:12:02,880 --> 00:12:06,959
in the time or space complexity okay

302
00:12:05,440 --> 00:12:11,839
yeah make sense

303
00:12:06,959 --> 00:12:11,839
look at this one what's this what's this

304
00:12:12,560 --> 00:12:18,639
we want to calculate dti first iteration

305
00:12:15,360 --> 00:12:22,000
we want to call calculus dpi right cpi

306
00:12:18,639 --> 00:12:24,160
and then for each each size of i

307
00:12:22,000 --> 00:12:26,240
i can cut it into remember the previous

308
00:12:24,160 --> 00:12:28,959
one the top down dynamic programming we

309
00:12:26,240 --> 00:12:31,519
we go through there and uh

310
00:12:28,959 --> 00:12:33,440
and uh ways of cutting the rod right so

311
00:12:31,519 --> 00:12:34,959
if now i

312
00:12:33,440 --> 00:12:39,519
keep going

313
00:12:34,959 --> 00:12:41,839
no no if i keep the size with j plus one

314
00:12:39,519 --> 00:12:43,200
and the remaining size is i minus three

315
00:12:41,839 --> 00:12:45,279
minus one remember i asked you this

316
00:12:43,200 --> 00:12:47,839
question yeah remaining so this is the

317
00:12:45,279 --> 00:12:51,120
remaining one we use previously we're

318
00:12:47,839 --> 00:12:53,200
using the recursion with the cache

319
00:12:51,120 --> 00:12:55,760
ask computer to do it to look it up the

320
00:12:53,200 --> 00:12:58,320
values we calculated before now we're

321
00:12:55,760 --> 00:13:00,720
looking up in a stationary

322
00:12:58,320 --> 00:13:02,560
in in an array right because we are

323
00:13:00,720 --> 00:13:03,680
memorizing

324
00:13:02,560 --> 00:13:06,000
memory

325
00:13:03,680 --> 00:13:09,600
you know we remember those things those

326
00:13:06,000 --> 00:13:12,959
values using a array by ourselves right

327
00:13:09,600 --> 00:13:15,200
proactively remembering the value

328
00:13:12,959 --> 00:13:17,440
and this is the profit

329
00:13:15,200 --> 00:13:21,639
price j can anybody explain to me what's

330
00:13:17,440 --> 00:13:21,639
this bit price j

331
00:13:26,959 --> 00:13:28,800
yeah

332
00:13:27,839 --> 00:13:31,360
um

333
00:13:28,800 --> 00:13:34,320
that's the size yeah yeah they use the

334
00:13:31,360 --> 00:13:36,639
size thing and the price is like the

335
00:13:34,320 --> 00:13:39,040
price for each size yeah the value and

336
00:13:36,639 --> 00:13:41,279
the value we can get yeah so look that's

337
00:13:39,040 --> 00:13:43,360
a low yeah if i cut it with leaves this

338
00:13:41,279 --> 00:13:45,440
is the bit i can sell for the for my

339
00:13:43,360 --> 00:13:47,680
money yeah and then remaining i don't

340
00:13:45,440 --> 00:13:50,160
know how much how many how many clocks

341
00:13:47,680 --> 00:13:52,959
right i look it up here okay this is i

342
00:13:50,160 --> 00:13:54,720
look it up this bit i cut it with j

343
00:13:52,959 --> 00:13:56,639
and the value i can get is here i don't

344
00:13:54,720 --> 00:13:57,839
want to get the messy one okay

345
00:13:56,639 --> 00:14:02,600
make sense

346
00:13:57,839 --> 00:14:02,600
yeah that's it for today good job bye

