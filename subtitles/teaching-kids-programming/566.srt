1
00:00:00,179 --> 00:00:03,179
everybody

2
00:00:03,300 --> 00:00:07,680
yeah

3
00:00:04,440 --> 00:00:13,080
so I have an array of integer right like

4
00:00:07,680 --> 00:00:16,580
two actually no four a 16. 64.

5
00:00:13,080 --> 00:00:19,440
49 okay just four okay

6
00:00:16,580 --> 00:00:21,240
so these are four numbers what are those

7
00:00:19,440 --> 00:00:23,460
in comments

8
00:00:21,240 --> 00:00:25,380
they are all in this square numbers

9
00:00:23,460 --> 00:00:27,960
square numbers yes true okay it doesn't

10
00:00:25,380 --> 00:00:29,760
have to be square numbers but let's just

11
00:00:27,960 --> 00:00:31,800
take those for example for simplistic

12
00:00:29,760 --> 00:00:34,620
this is our way and then we have a k

13
00:00:31,800 --> 00:00:37,800
equals two so we want to perform the

14
00:00:34,620 --> 00:00:40,200
operations K times for each operation we

15
00:00:37,800 --> 00:00:43,980
want to take the maximum of it what's

16
00:00:40,200 --> 00:00:46,620
the maximum 54 64 yeah okay what's the

17
00:00:43,980 --> 00:00:48,660
square root of it eight yes

18
00:00:46,620 --> 00:00:51,059
so this is AI

19
00:00:48,660 --> 00:00:54,539
okay so then what do we do we erase this

20
00:00:51,059 --> 00:00:56,879
one why do you have to square it down

21
00:00:54,539 --> 00:00:59,940
that's how we Define the Operation so

22
00:00:56,879 --> 00:01:01,559
for each information we take take

23
00:00:59,940 --> 00:01:05,159
Max number

24
00:01:01,559 --> 00:01:06,780
and square squared square root of it if

25
00:01:05,159 --> 00:01:08,939
it's not perfect square number we just

26
00:01:06,780 --> 00:01:12,420
take an integer bar for example 65 will

27
00:01:08,939 --> 00:01:15,299
still make it a right because the

28
00:01:12,420 --> 00:01:18,119
largest square numbers

29
00:01:15,299 --> 00:01:25,320
is eight before that right am I right

30
00:01:18,119 --> 00:01:27,600
what is this what if it's uh okay uh

31
00:01:25,320 --> 00:01:29,159
we need to perform another one so which

32
00:01:27,600 --> 00:01:31,740
number we take

33
00:01:29,159 --> 00:01:34,320
which number we take yeah can you have

34
00:01:31,740 --> 00:01:36,420
some like decimal numbers

35
00:01:34,320 --> 00:01:39,420
no these are positive individuals that's

36
00:01:36,420 --> 00:01:42,119
a very good question project integer

37
00:01:39,420 --> 00:01:44,340
okay for each one I take the maximum I

38
00:01:42,119 --> 00:01:47,100
square a load of it if this is and I put

39
00:01:44,340 --> 00:01:48,840
this back which is a right so I erase

40
00:01:47,100 --> 00:01:51,619
this bit which is a so what's the next

41
00:01:48,840 --> 00:01:51,619
one to take

42
00:01:55,820 --> 00:02:00,360
two operations so what's the sum of the

43
00:01:58,799 --> 00:02:04,259
remaining we just add these together

44
00:02:00,360 --> 00:02:07,380
okay simple as that this is 35 what what

45
00:02:04,259 --> 00:02:10,560
has the cane have to do k equals two

46
00:02:07,380 --> 00:02:12,020
perform two times it's a five five yes

47
00:02:10,560 --> 00:02:17,099
okay

48
00:02:12,020 --> 00:02:21,720
okay make sense so to sum up with

49
00:02:17,099 --> 00:02:24,060
the K is a greater than a

50
00:02:21,720 --> 00:02:25,920
that's very good that's very very good

51
00:02:24,060 --> 00:02:27,720
okay so we just keep performing we take

52
00:02:25,920 --> 00:02:30,060
a number take a maximum we push it back

53
00:02:27,720 --> 00:02:33,420
we take a number we push back right does

54
00:02:30,060 --> 00:02:35,819
it make sense so in the extreme cases

55
00:02:33,420 --> 00:02:38,540
all one I want to perform a minion k

56
00:02:35,819 --> 00:02:41,400
equals a million so what's the answer

57
00:02:38,540 --> 00:02:44,220
I take one one take the maximum

58
00:02:41,400 --> 00:02:45,900
right a square root of it is one I push

59
00:02:44,220 --> 00:02:48,420
it back this one so it doesn't change

60
00:02:45,900 --> 00:02:51,440
right oh yeah I perform a million times

61
00:02:48,420 --> 00:02:51,440
what's the sum update

62
00:02:51,560 --> 00:02:56,040
yeah

63
00:02:53,099 --> 00:03:00,239
yeah it doesn't answer your question

64
00:02:56,040 --> 00:03:02,400
okay okay so what's the Your solution

65
00:03:00,239 --> 00:03:05,580
about that is there a trick to do it or

66
00:03:02,400 --> 00:03:08,519
how do we usually solve this gun yes we

67
00:03:05,580 --> 00:03:10,260
just checked we just we just get okay so

68
00:03:08,519 --> 00:03:12,540
the key thing about that is how do we

69
00:03:10,260 --> 00:03:14,959
get the maximum of an array current

70
00:03:12,540 --> 00:03:14,959
array

71
00:03:15,620 --> 00:03:21,840
we consulted

72
00:03:18,540 --> 00:03:24,599
or remember yesterday we talk about the

73
00:03:21,840 --> 00:03:27,260
find and Index right

74
00:03:24,599 --> 00:03:27,260
the key thing

75
00:03:29,760 --> 00:03:33,720
is going to the maximum I just want to

76
00:03:31,800 --> 00:03:35,580
know the 49 is the maximum I don't care

77
00:03:33,720 --> 00:03:37,440
unless they started but sorting is a

78
00:03:35,580 --> 00:03:39,599
good answer we can sort it and get the

79
00:03:37,440 --> 00:03:42,180
maximum right but we don't have to

80
00:03:39,599 --> 00:03:44,280
because we just need to know the maximum

81
00:03:42,180 --> 00:03:47,700
okay

82
00:03:44,280 --> 00:03:49,019
Define f array okay

83
00:03:47,700 --> 00:03:51,840
four

84
00:03:49,019 --> 00:03:54,360
I in or for underscore we don't actually

85
00:03:51,840 --> 00:03:56,720
need to use the variable range

86
00:03:54,360 --> 00:03:56,720
okay

87
00:04:01,819 --> 00:04:08,220
and then after sorting where is the

88
00:04:05,459 --> 00:04:10,620
maximum on the right on the right which

89
00:04:08,220 --> 00:04:11,760
is a minus one right we want to change

90
00:04:10,620 --> 00:04:14,760
it to

91
00:04:11,760 --> 00:04:14,760
sqrt

92
00:04:18,120 --> 00:04:23,940
s q r t a minus one but this gives the

93
00:04:22,139 --> 00:04:26,580
decimal we can convert it to integer

94
00:04:23,940 --> 00:04:29,400
right yeah or we can use the another

95
00:04:26,580 --> 00:04:31,680
function called I squared I square root

96
00:04:29,400 --> 00:04:34,380
it means that this part returns integer

97
00:04:31,680 --> 00:04:38,220
and then return

98
00:04:34,380 --> 00:04:40,020
some of it sum hey that's it that's the

99
00:04:38,220 --> 00:04:41,400
Your solution what's the time of next

100
00:04:40,020 --> 00:04:43,680
day

101
00:04:41,400 --> 00:04:45,900
that looks nice yes what's the time come

102
00:04:43,680 --> 00:04:48,979
next if you can answer that even that's

103
00:04:45,900 --> 00:04:48,979
even nicer what's the same

104
00:04:49,820 --> 00:04:59,300
here is K okay okay okay okay

105
00:04:54,020 --> 00:05:02,820
so here is okay but what's that here

106
00:04:59,300 --> 00:05:05,340
oh and again okay

107
00:05:02,820 --> 00:05:07,860
okay you're good so what's the type of

108
00:05:05,340 --> 00:05:09,780
recipe okay Logan

109
00:05:07,860 --> 00:05:12,800
translate to get away

110
00:05:09,780 --> 00:05:12,800
so oh

111
00:05:14,780 --> 00:05:22,020
that's Google okay Okay times and login

112
00:05:18,660 --> 00:05:23,940
right and then we need to plus this n

113
00:05:22,020 --> 00:05:25,680
right so which is bigger so this is

114
00:05:23,940 --> 00:05:27,720
obviously bigger so we drop the come to

115
00:05:25,680 --> 00:05:29,520
University okay times n times Stop N

116
00:05:27,720 --> 00:05:31,800
right because we need to perform K

117
00:05:29,520 --> 00:05:34,139
operation each one we need to stop this

118
00:05:31,800 --> 00:05:35,320
is the Sorting complexity times it okay

119
00:05:34,139 --> 00:05:37,020
does it make sense

120
00:05:35,320 --> 00:05:39,900
[Music]

121
00:05:37,020 --> 00:05:42,479
we want to do K things

122
00:05:39,900 --> 00:05:44,460
well you know K times and for each time

123
00:05:42,479 --> 00:05:46,199
we need to do this so the time comes

124
00:05:44,460 --> 00:05:49,340
next time together obviously okay this

125
00:05:46,199 --> 00:05:52,139
one is base complexity

126
00:05:49,340 --> 00:05:54,660
constant space

127
00:05:52,139 --> 00:05:57,840
okay so this is one way

128
00:05:54,660 --> 00:06:00,360
but as I said we don't need to sort it

129
00:05:57,840 --> 00:06:01,080
right most dominant part is this sorting

130
00:06:00,360 --> 00:06:03,240
right

131
00:06:01,080 --> 00:06:05,100
and we just sold it already because we

132
00:06:03,240 --> 00:06:06,180
only get a maximum which is not very

133
00:06:05,100 --> 00:06:08,160
effective

134
00:06:06,180 --> 00:06:10,320
and I'm efficient

135
00:06:08,160 --> 00:06:12,900
yeah

136
00:06:10,320 --> 00:06:15,419
you want to find a maximum or minimum of

137
00:06:12,900 --> 00:06:17,160
mineral arrays a minion size array do

138
00:06:15,419 --> 00:06:19,560
you need to sew them it takes time right

139
00:06:17,160 --> 00:06:20,220
I can just go through the array am I

140
00:06:19,560 --> 00:06:25,080
right

141
00:06:20,220 --> 00:06:27,960
okay look here the a minion array uh

142
00:06:25,080 --> 00:06:30,060
this is a minute n equals Amino okay

143
00:06:27,960 --> 00:06:32,880
I want to find the maximum a minimum

144
00:06:30,060 --> 00:06:35,100
what's the best way to find it

145
00:06:32,880 --> 00:06:37,740
what's the best solution to find the

146
00:06:35,100 --> 00:06:39,539
maximum minimum of our way so there is

147
00:06:37,740 --> 00:06:41,639
our login that's what I said yes it

148
00:06:39,539 --> 00:06:43,440
works but it's not the optimum so just

149
00:06:41,639 --> 00:06:44,940
goes to release right

150
00:06:43,440 --> 00:06:46,919
and then we're going to find it the time

151
00:06:44,940 --> 00:06:50,940
zone next is that one right

152
00:06:46,919 --> 00:06:53,100
three to a hundred thousand twenty

153
00:06:50,940 --> 00:06:54,720
what's on the maximum 100 how do you

154
00:06:53,100 --> 00:06:57,360
know it's 100 it's the biggest number

155
00:06:54,720 --> 00:06:59,120
because I have my eyes yeah I know but

156
00:06:57,360 --> 00:07:01,680
how how does

157
00:06:59,120 --> 00:07:03,060
it come here yes but how does computer

158
00:07:01,680 --> 00:07:04,800
find it

159
00:07:03,060 --> 00:07:06,720
you know what your thoughting is good

160
00:07:04,800 --> 00:07:10,080
you just sold it right you thought it is

161
00:07:06,720 --> 00:07:12,900
2 3 20 100 okay the last one is a

162
00:07:10,080 --> 00:07:15,180
maximum and this one is but how does

163
00:07:12,900 --> 00:07:18,000
this computer find it three okay the

164
00:07:15,180 --> 00:07:21,120
maximum is three two is not bigger than

165
00:07:18,000 --> 00:07:22,560
maximum so my maximize zero three a

166
00:07:21,120 --> 00:07:25,919
hundred hundred is bigger than the color

167
00:07:22,560 --> 00:07:29,340
maximum which is a three so the maximum

168
00:07:25,919 --> 00:07:30,840
updated to 100 20 is smaller than 100 so

169
00:07:29,340 --> 00:07:33,419
the maximum is 100 doesn't make sense

170
00:07:30,840 --> 00:07:35,759
girls doing solar array once and that's

171
00:07:33,419 --> 00:07:39,780
all and okay

172
00:07:35,759 --> 00:07:41,699
eat I can see my eyes so uh this is the

173
00:07:39,780 --> 00:07:44,639
same yeah so how do we get it so we can

174
00:07:41,699 --> 00:07:48,960
again go through it each time color Max

175
00:07:44,639 --> 00:07:52,099
equals Max hey okay look we get a Max

176
00:07:48,960 --> 00:07:52,099
and then what do we do next

177
00:07:52,319 --> 00:07:56,520
shot for Max okay so we get the max

178
00:07:54,240 --> 00:07:59,940
value and then what do we do now we need

179
00:07:56,520 --> 00:08:03,199
to find where is it right I equals a DOT

180
00:07:59,940 --> 00:08:06,419
what's the function we talked about

181
00:08:03,199 --> 00:08:08,220
we will Define the index of the value in

182
00:08:06,419 --> 00:08:10,319
the array what's the two function we

183
00:08:08,220 --> 00:08:11,759
talked about is this index or find

184
00:08:10,319 --> 00:08:12,479
what's the difference between index and

185
00:08:11,759 --> 00:08:16,800
five

186
00:08:12,479 --> 00:08:20,520
uh find is that you're trying to find it

187
00:08:16,800 --> 00:08:24,000
and and also it could not be there and

188
00:08:20,520 --> 00:08:27,720
the computer won't complain but index is

189
00:08:24,000 --> 00:08:33,020
is you're trying to do you're trying to

190
00:08:27,720 --> 00:08:36,300
give it index of of uh value and if and

191
00:08:33,020 --> 00:08:38,640
so you're seeing that it that the value

192
00:08:36,300 --> 00:08:40,680
is there because you asked it yeah yeah

193
00:08:38,640 --> 00:08:42,080
if you don't layer you will return a

194
00:08:40,680 --> 00:08:44,279
value as well

195
00:08:42,080 --> 00:08:45,899
exception okay but in this case it's

196
00:08:44,279 --> 00:08:48,120
there right because I just filed it the

197
00:08:45,899 --> 00:08:50,279
maximum it's already like so it first

198
00:08:48,120 --> 00:08:53,700
final index is fine so now I have index

199
00:08:50,279 --> 00:08:56,880
I just need to change it to

200
00:08:53,700 --> 00:09:00,180
you know that I asked

201
00:08:56,880 --> 00:09:02,760
hey I I land returned some of it right

202
00:09:00,180 --> 00:09:04,680
make sense what's the time I'm actually

203
00:09:02,760 --> 00:09:06,480
okay

204
00:09:04,680 --> 00:09:11,459
and

205
00:09:06,480 --> 00:09:14,339
and yeah so it's uh K times n right this

206
00:09:11,459 --> 00:09:15,480
is two n okay times two n which is okay

207
00:09:14,339 --> 00:09:21,120
times n

208
00:09:15,480 --> 00:09:24,420
and plus plus uh n plus and yes

209
00:09:21,120 --> 00:09:26,640
but obviously this droplet uh trigger

210
00:09:24,420 --> 00:09:27,720
Factor so it's okay time side which is

211
00:09:26,640 --> 00:09:30,360
better

212
00:09:27,720 --> 00:09:32,519
this one another one that one this one

213
00:09:30,360 --> 00:09:35,399
yeah yeah because look okay times and

214
00:09:32,519 --> 00:09:37,620
and this one additional terms which is

215
00:09:35,399 --> 00:09:41,120
bigger than one okay so this is like

216
00:09:37,620 --> 00:09:41,120
that so we talked about

217
00:09:41,160 --> 00:09:45,540
the decimal or many

218
00:09:42,360 --> 00:09:48,120
Q we call it what kind of Q remember Q

219
00:09:45,540 --> 00:09:50,580
first in first hour right five if we is

220
00:09:48,120 --> 00:09:53,100
the first thing priority oh you know Max

221
00:09:50,580 --> 00:09:56,580
our minimal what do we call it a nice

222
00:09:53,100 --> 00:09:59,760
Cube Ice Cube yes it's priority killed

223
00:09:56,580 --> 00:10:02,640
but it can be implemented using his uh

224
00:09:59,760 --> 00:10:06,600
right remember the binary

225
00:10:02,640 --> 00:10:09,180
this is one two four a a hundred so

226
00:10:06,600 --> 00:10:10,440
always this is the minimum this is a

227
00:10:09,180 --> 00:10:13,200
common hip

228
00:10:10,440 --> 00:10:16,440
that they've been hip and if this is the

229
00:10:13,200 --> 00:10:19,200
maximum like 100 and this is 24 this is

230
00:10:16,440 --> 00:10:21,779
one this is still and this is called Max

231
00:10:19,200 --> 00:10:24,120
hip so it's kind of like a binary tree

232
00:10:21,779 --> 00:10:27,240
uh it's called binary here I find a tree

233
00:10:24,120 --> 00:10:28,560
that the loot is always the minimum or

234
00:10:27,240 --> 00:10:30,839
maximum okay

235
00:10:28,560 --> 00:10:31,680
okay this is called hip and we can use

236
00:10:30,839 --> 00:10:34,880
that

237
00:10:31,680 --> 00:10:34,880
the thing is

238
00:10:36,120 --> 00:10:42,480
because the heat is like a heel and if

239
00:10:38,640 --> 00:10:45,300
and if it if a minimum if a minimum was

240
00:10:42,480 --> 00:10:48,480
either root then it would just be a hole

241
00:10:45,300 --> 00:10:51,180
yeah no heat a heat is kind of like a

242
00:10:48,480 --> 00:10:53,399
heel yeah a heel so if the maximum

243
00:10:51,180 --> 00:10:55,200
should be on the top but if the minimum

244
00:10:53,399 --> 00:10:57,959
is over top then there's just being a

245
00:10:55,200 --> 00:11:00,120
hole not a heap yeah yeah I understand

246
00:10:57,959 --> 00:11:02,579
your point yes yes okay so we can

247
00:11:00,120 --> 00:11:04,579
transfer between mean have a maxi

248
00:11:02,579 --> 00:11:04,579
um

249
00:11:04,760 --> 00:11:11,579
so the heat is like this

250
00:11:09,000 --> 00:11:14,720
the maximum is at the top there's a

251
00:11:11,579 --> 00:11:14,720
minimum is is

252
00:11:17,180 --> 00:11:22,680
okay yeah that's very good that's very

253
00:11:19,920 --> 00:11:25,380
good in Python the hip is mean hip

254
00:11:22,680 --> 00:11:28,620
meaning like okay so if I turn an array

255
00:11:25,380 --> 00:11:30,779
to a hip when I hit push hit pop it's

256
00:11:28,620 --> 00:11:32,459
always getting the minimum right but in

257
00:11:30,779 --> 00:11:35,339
this case we want to get the maximum so

258
00:11:32,459 --> 00:11:37,560
at least numbers are positive right so

259
00:11:35,339 --> 00:11:38,880
how do we extend the positive numbers

260
00:11:37,560 --> 00:11:40,560
into the

261
00:11:38,880 --> 00:11:44,339
you know mean hip

262
00:11:40,560 --> 00:11:45,959
like they look two three a hundred if I

263
00:11:44,339 --> 00:11:48,300
do like hip hop

264
00:11:45,959 --> 00:11:51,300
and you'll give me two right how do we

265
00:11:48,300 --> 00:11:54,540
change it to give me a hundred left

266
00:11:51,300 --> 00:11:55,620
three numbers right in Python is Heap

267
00:11:54,540 --> 00:11:57,720
pop

268
00:11:55,620 --> 00:11:59,519
when I do hip hop

269
00:11:57,720 --> 00:12:01,740
you'll kill me too

270
00:11:59,519 --> 00:12:05,060
is there a way to make it give me a

271
00:12:01,740 --> 00:12:09,260
hundred instead hip hop right

272
00:12:05,060 --> 00:12:09,260
but we can do something he

273
00:12:11,380 --> 00:12:16,079
[Music]

274
00:12:14,160 --> 00:12:17,060
because there's no hip-hop on the other

275
00:12:16,079 --> 00:12:20,160
side

276
00:12:17,060 --> 00:12:23,040
he thought right I don't know Max okay

277
00:12:20,160 --> 00:12:24,959
but no I'm keep your hint how about this

278
00:12:23,040 --> 00:12:28,260
number positive if I change it to

279
00:12:24,959 --> 00:12:30,839
negative then what does it become

280
00:12:28,260 --> 00:12:34,320
minus two minus three minus a hundred

281
00:12:30,839 --> 00:12:37,079
what's the minimum of it minus 100 okay

282
00:12:34,320 --> 00:12:39,500
that's I know we just need get it does

283
00:12:37,079 --> 00:12:39,500
it make sense

284
00:12:41,180 --> 00:12:46,500
yeah obviously we need to turn the

285
00:12:43,920 --> 00:12:49,560
numbers into hip right so

286
00:12:46,500 --> 00:12:51,240
but we need to get this a equal we

287
00:12:49,560 --> 00:12:57,240
change to minus yeah because it's all

288
00:12:51,240 --> 00:13:00,420
positive minus I for I in a okay look a

289
00:12:57,240 --> 00:13:03,300
I change it to minus we get each one

290
00:13:00,420 --> 00:13:06,899
minus I for I in a okay and then now I

291
00:13:03,300 --> 00:13:09,000
need to pp5 pp5 what's hipify what's

292
00:13:06,899 --> 00:13:12,779
this means

293
00:13:09,000 --> 00:13:14,579
excellent make it a hit so if I hey and

294
00:13:12,779 --> 00:13:16,620
I change this other way into hipify okay

295
00:13:14,579 --> 00:13:21,959
and then now I can go through this okay

296
00:13:16,620 --> 00:13:25,740
time okay uh for underscore in range k

297
00:13:21,959 --> 00:13:32,339
okay and then I need to take it out so

298
00:13:25,740 --> 00:13:34,380
V equals hip hop a okay I take this out

299
00:13:32,339 --> 00:13:36,660
which is negative I need to make it

300
00:13:34,380 --> 00:13:39,899
positive again right this makes sense

301
00:13:36,660 --> 00:13:41,760
yeah hip

302
00:13:39,899 --> 00:13:46,320
push

303
00:13:41,760 --> 00:13:49,100
a minus V square root of it

304
00:13:46,320 --> 00:13:51,420
I square root of it

305
00:13:49,100 --> 00:13:53,639
and then I need to

306
00:13:51,420 --> 00:13:56,040
get it again for example like minus 100

307
00:13:53,639 --> 00:13:58,019
and take it out it's minus a hundred I

308
00:13:56,040 --> 00:14:00,959
need to make it a hundred I need to

309
00:13:58,019 --> 00:14:03,420
square root of 100 which is ten I need

310
00:14:00,959 --> 00:14:05,880
to put the minus 10 back into the hit

311
00:14:03,420 --> 00:14:08,160
all right that's what it means so V

312
00:14:05,880 --> 00:14:10,860
equals hip hop and I can actually put a

313
00:14:08,160 --> 00:14:12,139
minus here right and then here I'll

314
00:14:10,860 --> 00:14:17,700
become

315
00:14:12,139 --> 00:14:20,040
i s q r t v put the minus here all right

316
00:14:17,700 --> 00:14:21,300
and then sum return

317
00:14:20,040 --> 00:14:26,180
some

318
00:14:21,300 --> 00:14:26,180
hey okay so is that correct

319
00:14:28,620 --> 00:14:33,839
minus yes exactly well done okay thank

320
00:14:31,260 --> 00:14:35,820
you black see hit you five okay the key

321
00:14:33,839 --> 00:14:38,060
thing about the complexity here is the

322
00:14:35,820 --> 00:14:41,339
hippie file if we are making a hip

323
00:14:38,060 --> 00:14:44,519
directly by giving it a list of animals

324
00:14:41,339 --> 00:14:46,320
and the time conversation of hipify is o

325
00:14:44,519 --> 00:14:48,839
n

326
00:14:46,320 --> 00:14:50,100
okay it's the time for next year poop

327
00:14:48,839 --> 00:14:53,579
and

328
00:14:50,100 --> 00:14:57,240
and push is knocking

329
00:14:53,579 --> 00:15:00,480
okay so the time collects is o n plus k

330
00:14:57,240 --> 00:15:03,660
k times right log n

331
00:15:00,480 --> 00:15:05,940
okay and then plus this sum which is o n

332
00:15:03,660 --> 00:15:08,100
okay actually o to the N right chocolate

333
00:15:05,940 --> 00:15:11,220
constant so the time when this is o n

334
00:15:08,100 --> 00:15:13,980
plus K Times log n if we are building a

335
00:15:11,220 --> 00:15:17,360
hit by pushing and animals to it the

336
00:15:13,980 --> 00:15:21,600
time complex is o n log n

337
00:15:17,360 --> 00:15:24,120
for this one is o n plus K Times log n

338
00:15:21,600 --> 00:15:28,139
okay so which one is better space

339
00:15:24,120 --> 00:15:30,480
complexity obviously this one is o n we

340
00:15:28,139 --> 00:15:33,240
need a space

341
00:15:30,480 --> 00:15:34,620
this is time complexity this is Spec's a

342
00:15:33,240 --> 00:15:37,260
starting one

343
00:15:34,620 --> 00:15:39,240
the Time come back says K Times log n

344
00:15:37,260 --> 00:15:41,160
right we talk about space normally see

345
00:15:39,240 --> 00:15:45,660
your one

346
00:15:41,160 --> 00:15:48,720
Eric you said to your approach salty

347
00:15:45,660 --> 00:15:50,519
K times the uh K times o and not again

348
00:15:48,720 --> 00:15:53,639
right the second one by finding the max

349
00:15:50,519 --> 00:15:57,720
the finding the max index index measure

350
00:15:53,639 --> 00:16:01,860
the time complexity is o k times n right

351
00:15:57,720 --> 00:16:04,639
yes a space complexity over one the

352
00:16:01,860 --> 00:16:08,100
third one using the hip

353
00:16:04,639 --> 00:16:12,000
is o n Plus

354
00:16:08,100 --> 00:16:16,019
K Times log n

355
00:16:12,000 --> 00:16:17,579
okay the space complexity is o n okay so

356
00:16:16,019 --> 00:16:21,380
which one is better come on which one is

357
00:16:17,579 --> 00:16:21,380
better by looking at the tables

358
00:16:21,980 --> 00:16:26,660
which one has the optimum time

359
00:16:29,459 --> 00:16:33,360
this one obviously is better than the

360
00:16:31,260 --> 00:16:36,240
one this one and this one this is okay

361
00:16:33,360 --> 00:16:37,620
times n this is okay Times log n

362
00:16:36,240 --> 00:16:40,500
okay

363
00:16:37,620 --> 00:16:43,320
so obviously this is better yeah space

364
00:16:40,500 --> 00:16:45,899
complexity the second one is save the

365
00:16:43,320 --> 00:16:47,940
best one till now yeah but this one has

366
00:16:45,899 --> 00:16:51,500
the additional Ln space right because we

367
00:16:47,940 --> 00:16:51,500
need a hippie file if we can

368
00:16:52,339 --> 00:16:56,820
and space

369
00:16:54,360 --> 00:16:58,860
okay so let's I mean this Andy's

370
00:16:56,820 --> 00:17:01,259
question now because we are modifying

371
00:16:58,860 --> 00:17:03,240
the original array of the week we can

372
00:17:01,259 --> 00:17:05,939
modify the other additionally we don't

373
00:17:03,240 --> 00:17:08,040
need to use an additional array okay we

374
00:17:05,939 --> 00:17:10,319
can just go through this a and then

375
00:17:08,040 --> 00:17:13,020
change each number to negative and

376
00:17:10,319 --> 00:17:14,640
hipify and in this case we are not

377
00:17:13,020 --> 00:17:17,280
creating additional array we're just

378
00:17:14,640 --> 00:17:20,640
multiplying the input array let's learn

379
00:17:17,280 --> 00:17:23,040
it probably is a one okay okay so the

380
00:17:20,640 --> 00:17:25,679
thing is that for this talking okay we

381
00:17:23,040 --> 00:17:27,260
consider is a one space okay usually the

382
00:17:25,679 --> 00:17:30,179
Sorting again a quick song remember

383
00:17:27,260 --> 00:17:32,660
additional array right how do we quick

384
00:17:30,179 --> 00:17:32,660
so remember

385
00:17:34,380 --> 00:17:37,799
how do we cook salt we pick a number

386
00:17:36,840 --> 00:17:40,500
three

387
00:17:37,799 --> 00:17:42,660
in the previous number what numbers are

388
00:17:40,500 --> 00:17:43,980
smaller than three two and one point on

389
00:17:42,660 --> 00:17:46,500
the left four numbers are bigger than

390
00:17:43,980 --> 00:17:48,720
three four and a hundred okay so now

391
00:17:46,500 --> 00:17:50,520
three is here right and then we skip

392
00:17:48,720 --> 00:17:52,140
recursively starting the last time an

393
00:17:50,520 --> 00:17:54,260
apartment okay so what have you learned

394
00:17:52,140 --> 00:17:54,260
today

395
00:17:55,190 --> 00:18:03,900
[Music]

396
00:17:59,820 --> 00:18:06,179
so we're trying to relax squaring it and

397
00:18:03,900 --> 00:18:07,860
put it back yeah I want to perform okay

398
00:18:06,179 --> 00:18:11,900
time so what are the solutions you learn

399
00:18:07,860 --> 00:18:14,780
am I just describe one one is enough

400
00:18:11,900 --> 00:18:18,120
one of them is Heap yeah

401
00:18:14,780 --> 00:18:20,160
one of them is it index so if we want to

402
00:18:18,120 --> 00:18:22,740
find out the maximum minimum of another

403
00:18:20,160 --> 00:18:24,660
way do we have to solve it what are the

404
00:18:22,740 --> 00:18:26,400
best solution to find the maximum

405
00:18:24,660 --> 00:18:28,799
minimum

406
00:18:26,400 --> 00:18:31,620
what's the optimal solution for that you

407
00:18:28,799 --> 00:18:33,840
want to find the maximum of an array

408
00:18:31,620 --> 00:18:36,539
just linear right okay that's it for

409
00:18:33,840 --> 00:18:39,200
today bye-bye bye

410
00:18:36,539 --> 00:18:39,200
foreign

