1
00:00:00,000 --> 00:00:03,439
hello hello

2
00:00:03,659 --> 00:00:08,580
okay so let's take a look at this what's

3
00:00:06,420 --> 00:00:11,720
this a tree

4
00:00:08,580 --> 00:00:11,720
a binary tree

5
00:00:12,179 --> 00:00:16,160
yeah

6
00:00:13,559 --> 00:00:16,160
yeah yeah

7
00:00:17,100 --> 00:00:21,720
okay so this is the final trees anything

8
00:00:19,320 --> 00:00:24,500
special about this final tree they have

9
00:00:21,720 --> 00:00:24,500
duplicate numbers

10
00:00:26,119 --> 00:00:30,779
okay and

11
00:00:28,400 --> 00:00:34,040
oh I'm sorry actually

12
00:00:30,779 --> 00:00:37,559
what's uh so special about anything yeah

13
00:00:34,040 --> 00:00:41,940
when mirrored it's the same mirror okay

14
00:00:37,559 --> 00:00:45,260
so another one what do we mean right

15
00:00:41,940 --> 00:00:48,960
so this is a sensor is also sit

16
00:00:45,260 --> 00:00:50,760
symmetrical then it's not symmetrical

17
00:00:48,960 --> 00:00:53,300
it's not symmetrical because that tree

18
00:00:50,760 --> 00:00:53,300
needs to be upstairs

19
00:00:53,840 --> 00:00:58,140
why is it not symmetrical this is Mexico

20
00:00:56,280 --> 00:01:00,719
no it's not

21
00:00:58,140 --> 00:01:03,660
these socks have to be exactly the same

22
00:01:00,719 --> 00:01:05,580
you need to flip the numbers around you

23
00:01:03,660 --> 00:01:07,380
need to clean it so it's exactly so

24
00:01:05,580 --> 00:01:09,960
which food is North symmetrical a little

25
00:01:07,380 --> 00:01:12,360
bit huh a little bit that's symmetrical

26
00:01:09,960 --> 00:01:13,920
it's symmetrical right nine four four

27
00:01:12,360 --> 00:01:16,220
three three two two that's the

28
00:01:13,920 --> 00:01:18,900
definition of symmetrical no it's not

29
00:01:16,220 --> 00:01:21,840
symmetrical is something that is the

30
00:01:18,900 --> 00:01:23,880
same look this is dirty that's not that

31
00:01:21,840 --> 00:01:27,240
one needs to be like this and like

32
00:01:23,880 --> 00:01:30,140
something like that okay

33
00:01:27,240 --> 00:01:30,140
okay

34
00:01:34,700 --> 00:01:39,360
forget about the shapes we are talking

35
00:01:37,200 --> 00:01:41,579
just the values and that's it okay so

36
00:01:39,360 --> 00:01:43,979
this is symmetrical okay in early days

37
00:01:41,579 --> 00:01:45,360
we talk about how to check this uh a

38
00:01:43,979 --> 00:01:47,280
tree if it's symmetrical using the

39
00:01:45,360 --> 00:01:49,439
cushion remember yeah and today we're

40
00:01:47,280 --> 00:01:52,140
going to implement it using the just

41
00:01:49,439 --> 00:01:55,860
iterated approach okay yeah we Define

42
00:01:52,140 --> 00:02:01,020
check F function A and B right A and B

43
00:01:55,860 --> 00:02:02,880
are two two trees two trees okay so if a

44
00:02:01,020 --> 00:02:04,259
is now

45
00:02:02,880 --> 00:02:07,079
and

46
00:02:04,259 --> 00:02:09,179
p is none okay we want to compare if

47
00:02:07,079 --> 00:02:10,860
these two trees A and B are symmetrical

48
00:02:09,179 --> 00:02:13,800
right so we're given at the beginning

49
00:02:10,860 --> 00:02:15,599
we're given these two trees we want to

50
00:02:13,800 --> 00:02:19,620
check this is actually a hyper function

51
00:02:15,599 --> 00:02:22,560
to check if a and b are symmetrical A3

52
00:02:19,620 --> 00:02:25,620
and B3 are symmetrical okay so it

53
00:02:22,560 --> 00:02:28,379
requires two parameters but how how do

54
00:02:25,620 --> 00:02:31,620
we apply this function to to the finger

55
00:02:28,379 --> 00:02:34,379
finger tree so we are passing these

56
00:02:31,620 --> 00:02:36,959
three twice okay so that's what it means

57
00:02:34,379 --> 00:02:39,360
okay so A and B if a is now B is none

58
00:02:36,959 --> 00:02:42,480
both are empty then we'll return true

59
00:02:39,360 --> 00:02:44,940
right we turn two mt3 is the same

60
00:02:42,480 --> 00:02:47,400
symmetrical

61
00:02:44,940 --> 00:02:51,060
a is now

62
00:02:47,400 --> 00:02:52,920
or B is num right

63
00:02:51,060 --> 00:02:57,200
then we do 10

64
00:02:52,920 --> 00:02:57,200
fast and all right at this point

65
00:03:01,340 --> 00:03:09,300
because those trees are now is check

66
00:03:05,640 --> 00:03:12,239
here both are empty then we return true

67
00:03:09,300 --> 00:03:15,239
if one of them is empty we return first

68
00:03:12,239 --> 00:03:16,860
obviously and E3 and something is is not

69
00:03:15,239 --> 00:03:19,800
symmetrical

70
00:03:16,860 --> 00:03:21,800
then we have to check right now we can

71
00:03:19,800 --> 00:03:23,400
just return return

72
00:03:21,800 --> 00:03:26,819
value

73
00:03:23,400 --> 00:03:29,700
it has to be equal to Beta value right

74
00:03:26,819 --> 00:03:32,700
so look at the value needs to be equals

75
00:03:29,700 --> 00:03:36,360
to be the value all right

76
00:03:32,700 --> 00:03:39,180
I have another identical tree

77
00:03:36,360 --> 00:03:40,920
this value needs to be the same as this

78
00:03:39,180 --> 00:03:44,099
value right so we turn a the value

79
00:03:40,920 --> 00:03:48,000
equals beta value and

80
00:03:44,099 --> 00:03:49,319
f a DOT left we're looking for B to the

81
00:03:48,000 --> 00:03:51,299
right right here

82
00:03:49,319 --> 00:03:54,659
and

83
00:03:51,299 --> 00:03:58,379
f a DOT y

84
00:03:54,659 --> 00:04:00,420
B dot left okay so we swap we swap so

85
00:03:58,379 --> 00:04:04,799
how do we interpret this how to

86
00:04:00,420 --> 00:04:08,099
interpret this so f a DOT left a DOT

87
00:04:04,799 --> 00:04:09,959
left is this bit and B dot right

88
00:04:08,099 --> 00:04:12,659
be the right is this

89
00:04:09,959 --> 00:04:15,299
right so lead speed and this speed needs

90
00:04:12,659 --> 00:04:16,739
to be symmetrical and then this speed

91
00:04:15,299 --> 00:04:19,380
and then this speed needs to be

92
00:04:16,739 --> 00:04:22,019
symmetrical right this makes sense

93
00:04:19,380 --> 00:04:25,320
okay look at this

94
00:04:22,019 --> 00:04:28,860
this is a this is p okay

95
00:04:25,320 --> 00:04:31,800
okay so we need to call this recursive

96
00:04:28,860 --> 00:04:33,720
function if a is not B is now both trees

97
00:04:31,800 --> 00:04:35,940
are empty then obviously it's a

98
00:04:33,720 --> 00:04:37,139
symmetrical right if one number line is

99
00:04:35,940 --> 00:04:39,419
empty

100
00:04:37,139 --> 00:04:41,340
if one dollar is empty we'll return for

101
00:04:39,419 --> 00:04:42,600
us right otherwise we want to check if

102
00:04:41,340 --> 00:04:44,040
these two trees are symmetrical

103
00:04:42,600 --> 00:04:45,419
basically these three we want to check

104
00:04:44,040 --> 00:04:48,419
these three is the Mexican so we

105
00:04:45,419 --> 00:04:51,780
duplicate this right so in a the value

106
00:04:48,419 --> 00:04:55,500
needs to be equals to Beta value also

107
00:04:51,780 --> 00:04:58,080
the eight on left is this bit needs to

108
00:04:55,500 --> 00:05:00,060
be symmetrical to this speed right B dot

109
00:04:58,080 --> 00:05:02,340
right right look two three four two four

110
00:05:00,060 --> 00:05:04,740
three needs to be symmetric a DOT rise

111
00:05:02,340 --> 00:05:07,680
this bit needs to be symmetrical to be

112
00:05:04,740 --> 00:05:11,060
the left okay this is what it is and

113
00:05:07,680 --> 00:05:11,060
then you just need 10.

114
00:05:13,160 --> 00:05:17,759
that's the way it is

115
00:05:15,180 --> 00:05:20,520
okay so look at this one

116
00:05:17,759 --> 00:05:23,100
if we don't swap around what happened if

117
00:05:20,520 --> 00:05:24,900
look I'm saying that if we swap those

118
00:05:23,100 --> 00:05:26,580
eight or left Beetle right eight or

119
00:05:24,900 --> 00:05:28,979
right Peter left right this is to check

120
00:05:26,580 --> 00:05:31,259
if the tree is symmetrical but if I

121
00:05:28,979 --> 00:05:33,539
don't swap around then what does it do

122
00:05:31,259 --> 00:05:36,139
one question for you if I'm just say

123
00:05:33,539 --> 00:05:36,139
pretend

124
00:05:39,919 --> 00:05:44,100
what does it do

125
00:05:42,000 --> 00:05:46,320
if I change it to

126
00:05:44,100 --> 00:05:48,620
f a DOT left

127
00:05:46,320 --> 00:05:52,680
be the left

128
00:05:48,620 --> 00:05:56,100
and f a DOT right so what does it do so

129
00:05:52,680 --> 00:05:58,919
left and the right three would be would

130
00:05:56,100 --> 00:06:01,740
be the same exactly that's true if I'm

131
00:05:58,919 --> 00:06:03,539
changing to eight dollars we're just

132
00:06:01,740 --> 00:06:06,600
checking it yeah the two trees are the

133
00:06:03,539 --> 00:06:08,520
same right yeah okay okay so that's very

134
00:06:06,600 --> 00:06:10,979
good actually we talk about that when we

135
00:06:08,520 --> 00:06:13,020
talk about uh recursion to check if two

136
00:06:10,979 --> 00:06:14,759
trees are identical we use the iterative

137
00:06:13,020 --> 00:06:17,699
right and it's the same so I can

138
00:06:14,759 --> 00:06:20,039
Implement that using the iterative and a

139
00:06:17,699 --> 00:06:23,160
little bit okay

140
00:06:20,039 --> 00:06:26,840
uh so let me

141
00:06:23,160 --> 00:06:26,840
let me erase this pic

142
00:06:29,300 --> 00:06:37,319
so Define f a b let's compare if those

143
00:06:34,680 --> 00:06:41,400
trees are identical right so we use a q

144
00:06:37,319 --> 00:06:43,440
or stack right we use a cube V Cube

145
00:06:41,400 --> 00:06:45,780
we can perform this using data search

146
00:06:43,440 --> 00:06:48,660
preferences right level by level

147
00:06:45,780 --> 00:06:51,539
one two three and then we want to check

148
00:06:48,660 --> 00:06:52,919
if two threes are the same we just just

149
00:06:51,539 --> 00:06:57,479
perform this

150
00:06:52,919 --> 00:06:58,979
both level by level okay BQ I like at

151
00:06:57,479 --> 00:07:00,539
the beginning we'll push your topper A

152
00:06:58,979 --> 00:07:03,120
and B

153
00:07:00,539 --> 00:07:06,300
right and then wire Q

154
00:07:03,120 --> 00:07:11,460
Wireless anime in the queue we get it a

155
00:07:06,300 --> 00:07:12,900
a b b equals Q dot per left okay we're

156
00:07:11,460 --> 00:07:16,620
taking out from the left hand side we're

157
00:07:12,900 --> 00:07:19,440
taking out the elements then

158
00:07:16,620 --> 00:07:24,599
I was I was almost using this to erase

159
00:07:19,440 --> 00:07:29,639
it okay I learned right so we just put

160
00:07:24,599 --> 00:07:31,380
this put this here right come here if AI

161
00:07:29,639 --> 00:07:39,419
actually we need to change the a right

162
00:07:31,380 --> 00:07:41,660
so uh so if a a is nine and PB is none a

163
00:07:39,419 --> 00:07:44,699
a is none

164
00:07:41,660 --> 00:07:46,979
and PP is now

165
00:07:44,699 --> 00:07:48,680
we need to continue right if we need to

166
00:07:46,979 --> 00:07:50,580
continue

167
00:07:48,680 --> 00:07:53,099
instead of return right this is

168
00:07:50,580 --> 00:07:54,780
recursion with returning but but for the

169
00:07:53,099 --> 00:07:56,880
perfect stepper search we need to

170
00:07:54,780 --> 00:07:58,380
continue to checking the next right so

171
00:07:56,880 --> 00:08:04,259
air if

172
00:07:58,380 --> 00:08:06,419
a a is none what's added else if oh yes

173
00:08:04,259 --> 00:08:08,699
Phoebe is not and then we can false

174
00:08:06,419 --> 00:08:11,340
right because if one of the notes is

175
00:08:08,699 --> 00:08:13,440
empty one of node is not then it's not a

176
00:08:11,340 --> 00:08:17,419
identical tree right

177
00:08:13,440 --> 00:08:21,120
as as what do we do at least as

178
00:08:17,419 --> 00:08:23,639
now we need to check and actually we ask

179
00:08:21,120 --> 00:08:27,360
L if okay we still have to have to check

180
00:08:23,639 --> 00:08:28,379
if a a down value is not equal to P beta

181
00:08:27,360 --> 00:08:30,720
value

182
00:08:28,379 --> 00:08:33,060
then we'll return first right we found

183
00:08:30,720 --> 00:08:35,760
one of the nodes do not match each other

184
00:08:33,060 --> 00:08:36,839
if this here is one here is two it's not

185
00:08:35,760 --> 00:08:38,760
the same

186
00:08:36,839 --> 00:08:41,580
then as

187
00:08:38,760 --> 00:08:43,880
we need to push it back to the q i q dot

188
00:08:41,580 --> 00:08:43,880
a pen

189
00:08:44,219 --> 00:08:49,200
okay okay I'm gonna either left

190
00:08:47,160 --> 00:08:52,620
speed down left

191
00:08:49,200 --> 00:08:55,380
killed a pen a Double Y

192
00:08:52,620 --> 00:08:57,420
come on you don't like so if you want to

193
00:08:55,380 --> 00:08:59,640
make it make it chicken if the tree is

194
00:08:57,420 --> 00:09:01,860
symmetrical which line of code we need

195
00:08:59,640 --> 00:09:03,420
to check this is just iterated this is

196
00:09:01,860 --> 00:09:05,399
the iterative version of the left hand

197
00:09:03,420 --> 00:09:07,740
side right actually where something

198
00:09:05,399 --> 00:09:10,860
needs to be changed it to match exactly

199
00:09:07,740 --> 00:09:15,060
the same so which line of curve yeah so

200
00:09:10,860 --> 00:09:17,940
a to left B so right and a DOT right B

201
00:09:15,060 --> 00:09:19,920
to left left okay so look well done

202
00:09:17,940 --> 00:09:21,660
either left pizza left that's checking

203
00:09:19,920 --> 00:09:23,279
if the trees are the same yeah we have

204
00:09:21,660 --> 00:09:24,839
to check the left tree that's the same

205
00:09:23,279 --> 00:09:26,959
right trees are the same right this is

206
00:09:24,839 --> 00:09:29,880
to check if two trees are set to check

207
00:09:26,959 --> 00:09:31,860
if to check if a tree is a symmetrical

208
00:09:29,880 --> 00:09:34,440
we just have to check if the left tree

209
00:09:31,860 --> 00:09:36,600
is symmetrical to the if the right way

210
00:09:34,440 --> 00:09:38,220
and the right tree is the next level to

211
00:09:36,600 --> 00:09:40,320
the left chain that's the symmetrical

212
00:09:38,220 --> 00:09:42,839
right yeah yeah okay so this is the

213
00:09:40,320 --> 00:09:46,380
iterative look we are using the DQ here

214
00:09:42,839 --> 00:09:47,760
can we change it to stack yeah can we

215
00:09:46,380 --> 00:09:50,820
change us there

216
00:09:47,760 --> 00:09:53,399
yes because the order of checking

217
00:09:50,820 --> 00:09:57,600
accounts do not matter right here this

218
00:09:53,399 --> 00:10:01,019
is 2 3 right so one two three four five

219
00:09:57,600 --> 00:10:02,880
six seven right we want to check if two

220
00:10:01,019 --> 00:10:05,060
trees are the same

221
00:10:02,880 --> 00:10:08,100
all right two tricks I understand

222
00:10:05,060 --> 00:10:10,440
then order of checking each note no

223
00:10:08,100 --> 00:10:12,300
matter right does it make sense yeah I

224
00:10:10,440 --> 00:10:15,980
can check this I can check level by

225
00:10:12,300 --> 00:10:15,980
level look I can check level by level

226
00:10:24,560 --> 00:10:29,160
so this is the iterative and the

227
00:10:27,420 --> 00:10:30,899
question will be visible the two

228
00:10:29,160 --> 00:10:33,740
problems so one is the chicken if two

229
00:10:30,899 --> 00:10:33,740
trees are the same

230
00:10:35,000 --> 00:10:40,140
if we check uh the tree is symmetrical

231
00:10:37,860 --> 00:10:41,820
right symmetrical so when we talk about

232
00:10:40,140 --> 00:10:45,839
chicken the tree symmetrical we also

233
00:10:41,820 --> 00:10:46,700
talk about an animal cell one two

234
00:10:45,839 --> 00:10:51,060
two

235
00:10:46,700 --> 00:10:54,899
three four four

236
00:10:51,060 --> 00:10:57,060
five I'll fall asleep so we also talk

237
00:10:54,899 --> 00:11:01,519
about how do we do it

238
00:10:57,060 --> 00:11:01,519
this is a tree right we inverted

239
00:11:05,360 --> 00:11:11,640
we talk about that inverting the tree

240
00:11:08,760 --> 00:11:14,279
so you become this

241
00:11:11,640 --> 00:11:16,320
right this is original tree and then we

242
00:11:14,279 --> 00:11:18,000
invert inverted

243
00:11:16,320 --> 00:11:19,680
right we got these three and we just

244
00:11:18,000 --> 00:11:21,959
have to check this tree if it's the same

245
00:11:19,680 --> 00:11:25,019
as this one is the same it's symmetrical

246
00:11:21,959 --> 00:11:26,399
right this is ideal right this is how do

247
00:11:25,019 --> 00:11:31,620
we invert the tree are you using the

248
00:11:26,399 --> 00:11:33,980
recursion as well left equals uh inverse

249
00:11:31,620 --> 00:11:37,200
through the left right right

250
00:11:33,980 --> 00:11:39,600
equals invert do the right and I will

251
00:11:37,200 --> 00:11:41,519
just say low down left equals right

252
00:11:39,600 --> 00:11:44,760
right the left tree will assign it to

253
00:11:41,519 --> 00:11:47,399
the right I know that right equals left

254
00:11:44,760 --> 00:11:51,180
and then return Loop

255
00:11:47,399 --> 00:11:53,339
and then if if

256
00:11:51,180 --> 00:11:55,440
not

257
00:11:53,339 --> 00:11:59,399
if what if not load then we'll just

258
00:11:55,440 --> 00:12:00,600
return right yes yes

259
00:11:59,399 --> 00:12:02,579
so

260
00:12:00,600 --> 00:12:05,459
do don't laugh

261
00:12:02,579 --> 00:12:07,620
I want to email this tree so left needs

262
00:12:05,459 --> 00:12:09,540
to be invert version of the right tree

263
00:12:07,620 --> 00:12:12,180
and the right will be invert version and

264
00:12:09,540 --> 00:12:14,820
we keep recursively doing that okay this

265
00:12:12,180 --> 00:12:17,700
is actually the interview question of

266
00:12:14,820 --> 00:12:20,880
Google okay yeah just a few lines of

267
00:12:17,700 --> 00:12:23,100
confusing recursion okay okay and yeah

268
00:12:20,880 --> 00:12:24,839
so you see how we do it right so it's

269
00:12:23,100 --> 00:12:26,700
quite similar using recursion and using

270
00:12:24,839 --> 00:12:29,040
the iterator we can use a skill or stay

271
00:12:26,700 --> 00:12:32,160
it doesn't matter okay stack we're just

272
00:12:29,040 --> 00:12:34,920
using a list to do it and it's the same

273
00:12:32,160 --> 00:12:37,279
okay so what have you learned today

274
00:12:34,920 --> 00:12:42,180
silks

275
00:12:37,279 --> 00:12:44,100
about a binary submit to cool we wanted

276
00:12:42,180 --> 00:12:46,560
to find out if a tree if a binary tree

277
00:12:44,100 --> 00:12:49,260
is symmetrical so how can we do it we

278
00:12:46,560 --> 00:12:51,720
can use recording or we can use the

279
00:12:49,260 --> 00:12:53,579
integrative yeah we talk about these a

280
00:12:51,720 --> 00:12:58,579
long long time ago in the early days

281
00:12:53,579 --> 00:13:01,620
maybe in in 63 64 days

282
00:12:58,579 --> 00:13:05,760
talks about uh you should you should see

283
00:13:01,620 --> 00:13:05,760
day 40. okay foreign

284
00:13:07,800 --> 00:13:10,870
[Music]

285
00:13:25,880 --> 00:13:33,300
as long as each kid has only one uh one

286
00:13:30,300 --> 00:13:35,220
uh one kid the number of notes equals

287
00:13:33,300 --> 00:13:37,920
the height okay

288
00:13:35,220 --> 00:13:41,120
yeah okay okay that's it for today bye

289
00:13:37,920 --> 00:13:41,120
bye bye bye

