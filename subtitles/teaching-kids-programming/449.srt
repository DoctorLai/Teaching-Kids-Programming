1
00:00:00,080 --> 00:00:06,640
up hello hello mr mr rhino all right i

2
00:00:03,600 --> 00:00:09,840
go quick okay so anybody can tell me

3
00:00:06,640 --> 00:00:13,360
what is a binary search tree

4
00:00:09,840 --> 00:00:15,679
finally finally starts gp partnership

5
00:00:13,360 --> 00:00:17,440
it's a pirate tree right yeah but buying

6
00:00:15,679 --> 00:00:20,080
the research tree what is the final is

7
00:00:17,440 --> 00:00:21,039
that's true eric wine

8
00:00:20,080 --> 00:00:22,880
okay so

9
00:00:21,039 --> 00:00:24,320
i'm going to write the two trees two

10
00:00:22,880 --> 00:00:26,000
financially and you tell me which one is

11
00:00:24,320 --> 00:00:27,840
behind the search tree okay

12
00:00:26,000 --> 00:00:30,400
one wow look at this

13
00:00:27,840 --> 00:00:33,120
orange and quick

14
00:00:30,400 --> 00:00:35,760
um one three

15
00:00:33,120 --> 00:00:37,120
okay anybody which one is the final

16
00:00:35,760 --> 00:00:40,800
research tree

17
00:00:37,120 --> 00:00:43,760
on the right on the right why is that

18
00:00:40,800 --> 00:00:46,160
because binary tree

19
00:00:43,760 --> 00:00:48,559
left is smaller than three and right and

20
00:00:46,160 --> 00:00:51,039
bigger okay yeah exactly finally search

21
00:00:48,559 --> 00:00:53,280
string both are binary trees but binary

22
00:00:51,039 --> 00:00:55,440
search tree the last note should be

23
00:00:53,280 --> 00:00:57,199
strictly smaller than the root the right

24
00:00:55,440 --> 00:00:59,359
note should be strictly bigger than the

25
00:00:57,199 --> 00:01:00,480
loose note and i have no duplicates in

26
00:00:59,359 --> 00:01:03,600
uh

27
00:01:00,480 --> 00:01:07,040
also if you do that through one three

28
00:01:03,600 --> 00:01:08,560
three and in order it will be in order

29
00:01:07,040 --> 00:01:11,280
we're done okay um that's what i'm

30
00:01:08,560 --> 00:01:12,479
talking about yeah okay so this

31
00:01:11,280 --> 00:01:14,720
and if is

32
00:01:12,479 --> 00:01:16,799
do that in order

33
00:01:14,720 --> 00:01:19,280
if we do this in order you become one

34
00:01:16,799 --> 00:01:21,920
two three which is in order right that's

35
00:01:19,280 --> 00:01:24,000
very well done okay come on

36
00:01:21,920 --> 00:01:26,720
so today's task very easy we want to

37
00:01:24,000 --> 00:01:29,119
convert a fine research tree two

38
00:01:26,720 --> 00:01:31,439
to something like that

39
00:01:29,119 --> 00:01:35,360
two to these one

40
00:01:31,439 --> 00:01:38,320
two three so there's no left kid

41
00:01:35,360 --> 00:01:41,680
the final three only like it

42
00:01:38,320 --> 00:01:44,799
and the leftmost leftmost note

43
00:01:41,680 --> 00:01:46,640
one which is the root yeah so basically

44
00:01:44,799 --> 00:01:48,960
we want to convert these to these look

45
00:01:46,640 --> 00:01:51,040
this at least looks like a linklist but

46
00:01:48,960 --> 00:01:53,759
it's actually a binary tree it looks

47
00:01:51,040 --> 00:01:56,880
like a banana binary tree which doesn't

48
00:01:53,759 --> 00:01:59,920
have any left hit okay so any idea do

49
00:01:56,880 --> 00:02:01,520
you do that

50
00:01:59,920 --> 00:02:03,759
do you know how to do this come on

51
00:02:01,520 --> 00:02:05,840
anybody

52
00:02:03,759 --> 00:02:09,040
so we want to convert these to this eric

53
00:02:05,840 --> 00:02:09,040
eric ryan come on we're

54
00:02:15,280 --> 00:02:19,840
that's one way okay so we just yeah

55
00:02:17,200 --> 00:02:21,920
basically we just do this in order

56
00:02:19,840 --> 00:02:23,680
all right we do this in order yeah we

57
00:02:21,920 --> 00:02:27,200
can save it in the list yeah or we can

58
00:02:23,680 --> 00:02:30,080
use the iterator yeah yeah the keyword

59
00:02:27,200 --> 00:02:32,560
yeah what's here what's this one i

60
00:02:30,080 --> 00:02:33,360
forgot you forgot what's here

61
00:02:32,560 --> 00:02:36,959
uh

62
00:02:33,360 --> 00:02:36,959
it's the last word

63
00:02:43,360 --> 00:02:47,440
yeah for example mommy give you both

64
00:02:45,440 --> 00:02:48,959
five pounds each month but she's not

65
00:02:47,440 --> 00:02:51,040
going to give you

66
00:02:48,959 --> 00:02:53,599
five pound you know 60 pounds all

67
00:02:51,040 --> 00:02:55,360
together in one go right right yeah she

68
00:02:53,599 --> 00:02:57,840
will just give you

69
00:02:55,360 --> 00:02:58,959
every month every month

70
00:02:57,840 --> 00:03:01,760
so one

71
00:02:58,959 --> 00:03:04,959
at the beginning of each month

72
00:03:01,760 --> 00:03:04,959
every month yeah

73
00:03:12,800 --> 00:03:16,640
will be going to eat at five pounds and

74
00:03:14,800 --> 00:03:18,720
you're going to get it okay so this is

75
00:03:16,640 --> 00:03:20,560
kind of yet okay so if we're not using

76
00:03:18,720 --> 00:03:22,720
the iterator we're not using iterator

77
00:03:20,560 --> 00:03:24,159
then everything is raised

78
00:03:22,720 --> 00:03:25,440
apparently

79
00:03:24,159 --> 00:03:27,599
okay

80
00:03:25,440 --> 00:03:30,959
yes

81
00:03:27,599 --> 00:03:34,239
praise repent ask so okay so let's do

82
00:03:30,959 --> 00:03:36,159
this in order thing yeah define

83
00:03:34,239 --> 00:03:38,000
in all the

84
00:03:36,159 --> 00:03:40,640
um

85
00:03:38,000 --> 00:03:43,599
annoying little boy

86
00:03:40,640 --> 00:03:44,840
if not root we just return empty return

87
00:03:43,599 --> 00:03:47,599
our empty list

88
00:03:44,840 --> 00:03:50,000
yeah there are many ways of doing this

89
00:03:47,599 --> 00:03:52,319
in order but let's pick a way which is

90
00:03:50,000 --> 00:03:54,799
more straightforward another way is that

91
00:03:52,319 --> 00:03:57,439
you have lisa lister here you have this

92
00:03:54,799 --> 00:04:00,480
answer here and then you do this instead

93
00:03:57,439 --> 00:04:02,000
of returning you you just return

94
00:04:00,480 --> 00:04:03,040
and then you push

95
00:04:02,000 --> 00:04:06,400
every time

96
00:04:03,040 --> 00:04:09,120
we visit and now we push the to these

97
00:04:06,400 --> 00:04:10,959
to this answer instead of returning a

98
00:04:09,120 --> 00:04:12,400
new one so we can just return here

99
00:04:10,959 --> 00:04:16,479
return

100
00:04:12,400 --> 00:04:19,040
in order in order

101
00:04:16,479 --> 00:04:21,359
to let yeah we are visiting the

102
00:04:19,040 --> 00:04:24,080
tree first and then we want to visit the

103
00:04:21,359 --> 00:04:25,440
current law which is know the value

104
00:04:24,080 --> 00:04:27,840
yeah

105
00:04:25,440 --> 00:04:29,600
concatenate the list this is the list

106
00:04:27,840 --> 00:04:32,320
and this is the list yeah they do the

107
00:04:29,600 --> 00:04:33,840
value is an integer we concatenate it

108
00:04:32,320 --> 00:04:36,080
and then plus

109
00:04:33,840 --> 00:04:38,400
in order that we visit the right tree

110
00:04:36,080 --> 00:04:39,919
yeah rule right

111
00:04:38,400 --> 00:04:41,600
okay

112
00:04:39,919 --> 00:04:44,080
right so

113
00:04:41,600 --> 00:04:46,720
if i if we put the answer the

114
00:04:44,080 --> 00:04:48,560
empty this then we would

115
00:04:46,720 --> 00:04:50,800
what do we need to change we just ignore

116
00:04:48,560 --> 00:04:53,040
the root of that and answer the

117
00:04:50,800 --> 00:04:55,040
appendage value and in order to write

118
00:04:53,040 --> 00:04:57,840
that basically look recursion this is

119
00:04:55,040 --> 00:04:59,120
recursion what's your recussion in one

120
00:04:57,840 --> 00:05:01,600
one sentence

121
00:04:59,120 --> 00:05:04,080
what is that it's calling it itself well

122
00:05:01,600 --> 00:05:06,080
done it's calling itself yes and let's

123
00:05:04,080 --> 00:05:08,639
determine the condition when the loop is

124
00:05:06,080 --> 00:05:11,840
empty then we return nothing right yeah

125
00:05:08,639 --> 00:05:13,759
calling itself okay okay let's

126
00:05:11,840 --> 00:05:16,560
now we have this in order now we can do

127
00:05:13,759 --> 00:05:19,680
this yeah we can do this answer equals

128
00:05:16,560 --> 00:05:22,800
current equal we create a node which is

129
00:05:19,680 --> 00:05:25,800
the dummy node yeah tell me which what

130
00:05:22,800 --> 00:05:25,800
is

131
00:05:32,880 --> 00:05:37,039
it's not really

132
00:05:34,400 --> 00:05:39,280
useful we just have a placeholder for it

133
00:05:37,039 --> 00:05:40,720
we have created the price of it then we

134
00:05:39,280 --> 00:05:42,800
can say four

135
00:05:40,720 --> 00:05:45,520
uh pie dummy

136
00:05:42,800 --> 00:05:48,240
four okay so for c

137
00:05:45,520 --> 00:05:50,320
in in order yeah we could we do this in

138
00:05:48,240 --> 00:05:53,600
all the rooms

139
00:05:50,320 --> 00:05:55,120
right now we can say what tyrant dot

140
00:05:53,600 --> 00:05:58,160
next

141
00:05:55,120 --> 00:05:58,160
current on right okay

142
00:06:01,120 --> 00:06:07,840
current.right equals c right and i see

143
00:06:04,800 --> 00:06:11,440
current equals current dot next

144
00:06:07,840 --> 00:06:12,880
and then we can just do this uh return

145
00:06:11,440 --> 00:06:14,080
answer

146
00:06:12,880 --> 00:06:16,319
dot

147
00:06:14,080 --> 00:06:18,800
right okay so basically this is what

148
00:06:16,319 --> 00:06:21,039
error you propose we do this in order

149
00:06:18,800 --> 00:06:23,360
and then we just go to we just do this

150
00:06:21,039 --> 00:06:25,440
yeah one two three because once we have

151
00:06:23,360 --> 00:06:28,479
we know that we have this one two three

152
00:06:25,440 --> 00:06:30,000
yeah so we just iterate over the list

153
00:06:28,479 --> 00:06:32,639
yeah and then we do this current

154
00:06:30,000 --> 00:06:36,000
current.net white you know left right y

155
00:06:32,639 --> 00:06:37,120
equals c yeah currently equals current

156
00:06:36,000 --> 00:06:38,800
on right

157
00:06:37,120 --> 00:06:40,639
okay so current equals counter double y

158
00:06:38,800 --> 00:06:43,600
what what does it mean

159
00:06:40,639 --> 00:06:45,759
current was current on the right

160
00:06:43,600 --> 00:06:47,199
then current would be equal to z right

161
00:06:45,759 --> 00:06:49,840
so which is here

162
00:06:47,199 --> 00:06:53,440
and then the next iteration c will be

163
00:06:49,840 --> 00:06:54,720
two right so x current will be two and

164
00:06:53,440 --> 00:06:57,680
currently you could count the right

165
00:06:54,720 --> 00:06:59,680
camera will be moving to two okay

166
00:06:57,680 --> 00:07:02,960
yeah yeah

167
00:06:59,680 --> 00:07:02,960
okay the thing the

168
00:07:13,599 --> 00:07:17,840
exactly once the space complexity also

169
00:07:15,599 --> 00:07:20,080
on yeah we're using this uh additional

170
00:07:17,840 --> 00:07:22,560
list to and uh calling stack for

171
00:07:20,080 --> 00:07:25,599
education to install this uh

172
00:07:22,560 --> 00:07:28,080
uh to store in order okay so like yeah

173
00:07:25,599 --> 00:07:29,120
if you want to do this here yeah i think

174
00:07:28,080 --> 00:07:30,720
so in fact

175
00:07:29,120 --> 00:07:31,599
we want to do this thing how can we do

176
00:07:30,720 --> 00:07:33,520
it

177
00:07:31,599 --> 00:07:35,440
i'm gonna do right here this this this

178
00:07:33,520 --> 00:07:37,840
part will be the same yeah this part

179
00:07:35,440 --> 00:07:38,960
will be set but we change this

180
00:07:37,840 --> 00:07:41,520
so

181
00:07:38,960 --> 00:07:43,919
we can just say if not loot return okay

182
00:07:41,520 --> 00:07:46,160
we're not returning anything come on be

183
00:07:43,919 --> 00:07:48,160
quiet

184
00:07:46,160 --> 00:07:49,440
then we can we can we can do what we can

185
00:07:48,160 --> 00:07:51,280
do

186
00:07:49,440 --> 00:07:52,800
yet

187
00:07:51,280 --> 00:07:54,960
from

188
00:07:52,800 --> 00:07:58,560
in order

189
00:07:54,960 --> 00:07:58,560
to left yeah we want to

190
00:08:10,479 --> 00:08:15,120
right yeah

191
00:08:12,400 --> 00:08:17,199
okay so basically it's quite similar to

192
00:08:15,120 --> 00:08:18,000
this syntax yeah yeah from

193
00:08:17,199 --> 00:08:19,840
yeah

194
00:08:18,000 --> 00:08:22,080
right

195
00:08:19,840 --> 00:08:23,680
it's returning the same thing this is

196
00:08:22,080 --> 00:08:26,400
concrete

197
00:08:23,680 --> 00:08:28,319
no no no returning this this is actually

198
00:08:26,400 --> 00:08:30,479
written something concrete but what i'm

199
00:08:28,319 --> 00:08:32,159
saying yes wrong earphones means that

200
00:08:30,479 --> 00:08:34,000
okay i promise you

201
00:08:32,159 --> 00:08:36,640
that i'm going to return something but

202
00:08:34,000 --> 00:08:39,839
it's not time yet when you actually when

203
00:08:36,640 --> 00:08:42,399
you're the when you actually need it

204
00:08:39,839 --> 00:08:44,800
when c actually need it when we actually

205
00:08:42,399 --> 00:08:46,240
iterate c

206
00:08:44,800 --> 00:08:48,320
yeah then we

207
00:08:46,240 --> 00:08:51,519
the year we actually return something

208
00:08:48,320 --> 00:08:52,839
right so you get it so

209
00:08:51,519 --> 00:08:56,320
okay so the generator the time

210
00:08:52,839 --> 00:08:58,000
complexity and complexity so 01 okay so

211
00:08:56,320 --> 00:09:00,800
uh what have you learned today so far

212
00:08:58,000 --> 00:09:03,760
come on everyone anybody

213
00:09:00,800 --> 00:09:06,720
bst yeah we were converting a binary

214
00:09:03,760 --> 00:09:06,720
search tree into

215
00:09:06,839 --> 00:09:12,480
a a final treat which only whoa

216
00:09:10,800 --> 00:09:15,040
what what what do we call it it's a

217
00:09:12,480 --> 00:09:16,480
banana tree which has only the right

218
00:09:15,040 --> 00:09:19,760
triad

219
00:09:16,480 --> 00:09:22,240
right left final reset yeah so so

220
00:09:19,760 --> 00:09:24,720
basically the key thing today is that if

221
00:09:22,240 --> 00:09:27,519
we are performing an inorder what's the

222
00:09:24,720 --> 00:09:29,760
password if we are

223
00:09:27,519 --> 00:09:32,480
performing like another traversal on a

224
00:09:29,760 --> 00:09:35,600
binary search tree the least we get will

225
00:09:32,480 --> 00:09:40,600
be in order right yeah let's see that's

226
00:09:35,600 --> 00:09:40,600
it for today bye-bye bye bye

