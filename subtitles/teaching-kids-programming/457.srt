1
00:00:00,320 --> 00:00:06,000
hello mr erami all right we are given

2
00:00:03,360 --> 00:00:08,000
this multiple arrays yeah each array

3
00:00:06,000 --> 00:00:10,400
contains the distinct number this thing

4
00:00:08,000 --> 00:00:13,599
is another way of saying unique numbers

5
00:00:10,400 --> 00:00:16,560
right yeah if this thing unique

6
00:00:13,599 --> 00:00:18,720
i want to find out which elements

7
00:00:16,560 --> 00:00:21,119
appear in most of them are in all of

8
00:00:18,720 --> 00:00:23,439
them so that's what intersection is okay

9
00:00:21,119 --> 00:00:25,439
can you give me the answer for this uh

10
00:00:23,439 --> 00:00:27,439
which point

11
00:00:25,439 --> 00:00:30,080
okay

12
00:00:27,439 --> 00:00:33,280
yeah animal

13
00:00:30,080 --> 00:00:35,440
four yeah three and four three

14
00:00:33,280 --> 00:00:38,320
okay so basically you need to tell me

15
00:00:35,440 --> 00:00:40,320
the answer is three four it needs to the

16
00:00:38,320 --> 00:00:43,200
numbers need to be in increasing order

17
00:00:40,320 --> 00:00:44,160
okay ascending order okay so easy yeah

18
00:00:43,200 --> 00:00:46,800
okay

19
00:00:44,160 --> 00:00:48,800
yeah so to repeat we are given multiple

20
00:00:46,800 --> 00:00:51,680
arrays we want to find out which

21
00:00:48,800 --> 00:00:53,760
elements which numbers appear in order

22
00:00:51,680 --> 00:00:55,440
in sorting order in sorting order let's

23
00:00:53,760 --> 00:00:57,360
call the intersection intersection or

24
00:00:55,440 --> 00:00:59,920
multiple arrays

25
00:00:57,360 --> 00:01:03,359
please know that that these all this uh

26
00:00:59,920 --> 00:01:04,640
array contains distinct unique numbers

27
00:01:03,359 --> 00:01:07,200
meaning look

28
00:01:04,640 --> 00:01:09,600
it's all unique

29
00:01:07,200 --> 00:01:12,720
distinct distinct unique numbers yeah so

30
00:01:09,600 --> 00:01:13,920
when we talk about this unique thing

31
00:01:12,720 --> 00:01:16,560
yeah

32
00:01:13,920 --> 00:01:18,640
this unique thing so if i draw this

33
00:01:16,560 --> 00:01:19,600
diagram what kind of data structure can

34
00:01:18,640 --> 00:01:22,320
you

35
00:01:19,600 --> 00:01:24,159
that set exactly we're using set so we

36
00:01:22,320 --> 00:01:26,400
can just use a set

37
00:01:24,159 --> 00:01:27,840
yeah we can construct a set from what

38
00:01:26,400 --> 00:01:30,960
first array

39
00:01:27,840 --> 00:01:33,119
and then we can do the inside section

40
00:01:30,960 --> 00:01:34,560
yeah by each of it right

41
00:01:33,119 --> 00:01:37,840
define

42
00:01:34,560 --> 00:01:38,840
intersection of multiple array

43
00:01:37,840 --> 00:01:41,920
arrays

44
00:01:38,840 --> 00:01:43,600
okay we're given these nums which is the

45
00:01:41,920 --> 00:01:46,240
list of this

46
00:01:43,600 --> 00:01:48,880
now look if we are given an empty array

47
00:01:46,240 --> 00:01:51,119
then we just return and empty this right

48
00:01:48,880 --> 00:01:54,000
return and then finish

49
00:01:51,119 --> 00:01:59,040
otherwise let's say a is the first uh

50
00:01:54,000 --> 00:02:01,360
set set from the first least lungs here

51
00:01:59,040 --> 00:02:02,240
then we just have to do four

52
00:02:01,360 --> 00:02:07,040
i

53
00:02:02,240 --> 00:02:07,040
in nums we start from the second

54
00:02:07,439 --> 00:02:10,479
yeah for the second list

55
00:02:09,520 --> 00:02:13,360
a

56
00:02:10,479 --> 00:02:16,080
a equals a dot intercept there's a

57
00:02:13,360 --> 00:02:19,680
function there's a method for the

58
00:02:16,080 --> 00:02:21,840
for the set in the set i right

59
00:02:19,680 --> 00:02:24,959
but i this is a list so we have to

60
00:02:21,840 --> 00:02:27,920
convert it to a set set i

61
00:02:24,959 --> 00:02:29,200
so this is the same thing as a equals

62
00:02:27,920 --> 00:02:31,680
eight and

63
00:02:29,200 --> 00:02:33,680
set the i okay this is the same thing

64
00:02:31,680 --> 00:02:38,400
okay and then return

65
00:02:33,680 --> 00:02:41,280
return sorted we want to convert it the

66
00:02:38,400 --> 00:02:42,959
converted to a sorted list so a right

67
00:02:41,280 --> 00:02:44,800
but easy

68
00:02:42,959 --> 00:02:47,200
yeah so to

69
00:02:44,800 --> 00:02:49,760
to sum up we are converting we are

70
00:02:47,200 --> 00:02:52,319
converting at least to a set so look if

71
00:02:49,760 --> 00:02:54,640
we have the first list is what

72
00:02:52,319 --> 00:02:58,560
if first this is one two three four five

73
00:02:54,640 --> 00:03:00,720
yeah one two three four five and the

74
00:02:58,560 --> 00:03:02,000
second is one two three four so one two

75
00:03:00,720 --> 00:03:04,000
three four

76
00:03:02,000 --> 00:03:05,920
right so if we do the intersection the

77
00:03:04,000 --> 00:03:08,560
second this will be this one

78
00:03:05,920 --> 00:03:11,120
right another the third one three four

79
00:03:08,560 --> 00:03:14,879
five six three four five

80
00:03:11,120 --> 00:03:17,599
the third is three four five

81
00:03:14,879 --> 00:03:20,239
yeah and then six here

82
00:03:17,599 --> 00:03:23,060
yeah so look look at these three circles

83
00:03:20,239 --> 00:03:25,360
what are the comments about it

84
00:03:23,060 --> 00:03:27,360
[Music]

85
00:03:25,360 --> 00:03:28,319
do you get it

86
00:03:27,360 --> 00:03:30,959
no

87
00:03:28,319 --> 00:03:33,040
okay so look

88
00:03:30,959 --> 00:03:35,360
one two

89
00:03:33,040 --> 00:03:36,720
three four

90
00:03:35,360 --> 00:03:38,400
five

91
00:03:36,720 --> 00:03:40,159
six

92
00:03:38,400 --> 00:03:41,280
okay

93
00:03:40,159 --> 00:03:43,200
uh

94
00:03:41,280 --> 00:03:46,480
i'm already correct yeah so which which

95
00:03:43,200 --> 00:03:48,239
part is the uh the comment part

96
00:03:46,480 --> 00:03:51,280
which part is the common part of all

97
00:03:48,239 --> 00:03:53,840
this yeah exactly

98
00:03:51,280 --> 00:03:55,519
three four this part appears in all the

99
00:03:53,840 --> 00:03:57,120
three arrays

100
00:03:55,519 --> 00:03:59,519
that's all we got

101
00:03:57,120 --> 00:04:01,599
make sense

102
00:03:59,519 --> 00:04:02,959
okay so now this is the set we can also

103
00:04:01,599 --> 00:04:05,360
use the counter you have to remember

104
00:04:02,959 --> 00:04:06,959
what counter

105
00:04:05,360 --> 00:04:09,760
what counter

106
00:04:06,959 --> 00:04:12,000
additionally exactly so we count so we

107
00:04:09,760 --> 00:04:14,720
can count how many numbers each number

108
00:04:12,000 --> 00:04:16,479
yeah and we go through each number in a

109
00:04:14,720 --> 00:04:18,799
dictionary and then we count how many

110
00:04:16,479 --> 00:04:19,680
times they appear because each array is

111
00:04:18,799 --> 00:04:21,120
uh

112
00:04:19,680 --> 00:04:23,759
you know only contains the unique

113
00:04:21,120 --> 00:04:26,560
numbers if we do this counting if it

114
00:04:23,759 --> 00:04:29,360
appears n times then it appears in all

115
00:04:26,560 --> 00:04:31,360
the arrays right then we can do this

116
00:04:29,360 --> 00:04:33,040
define okay so these

117
00:04:31,360 --> 00:04:34,720
nums

118
00:04:33,040 --> 00:04:35,910
so at the beginning we have a c don't

119
00:04:34,720 --> 00:04:37,759
equal counter

120
00:04:35,910 --> 00:04:39,600
[Music]

121
00:04:37,759 --> 00:04:41,759
we don't need to give anything so it's

122
00:04:39,600 --> 00:04:45,759
empty dictionary okay so then now week

123
00:04:41,759 --> 00:04:49,280
four i in nums

124
00:04:45,759 --> 00:04:51,280
then we can use the counter to update

125
00:04:49,280 --> 00:04:52,560
you know which update which is the

126
00:04:51,280 --> 00:04:54,720
incremental

127
00:04:52,560 --> 00:04:58,880
changes which takes the changes from

128
00:04:54,720 --> 00:05:00,639
another set so c dot update

129
00:04:58,880 --> 00:05:02,479
yeah see the update

130
00:05:00,639 --> 00:05:03,199
counter

131
00:05:02,479 --> 00:05:04,720
i

132
00:05:03,199 --> 00:05:06,479
okay yeah

133
00:05:04,720 --> 00:05:09,600
now

134
00:05:06,479 --> 00:05:11,919
c contains the frequency of all the

135
00:05:09,600 --> 00:05:14,000
numbers combined for all arrays then we

136
00:05:11,919 --> 00:05:17,280
have to count each number if it appears

137
00:05:14,000 --> 00:05:20,160
that n times right so that n equals the

138
00:05:17,280 --> 00:05:22,080
length of the nums which is the

139
00:05:20,160 --> 00:05:24,800
number of the list yes so then we have

140
00:05:22,080 --> 00:05:26,080
this answer answer equals that

141
00:05:24,800 --> 00:05:27,039
for

142
00:05:26,080 --> 00:05:28,880
i

143
00:05:27,039 --> 00:05:30,400
in

144
00:05:28,880 --> 00:05:33,120
in c

145
00:05:30,400 --> 00:05:35,840
in c if c i

146
00:05:33,120 --> 00:05:37,759
equal equal n if it appears n times then

147
00:05:35,840 --> 00:05:39,440
it appears in all the arrays then we

148
00:05:37,759 --> 00:05:41,520
answer the obtained

149
00:05:39,440 --> 00:05:43,919
append i

150
00:05:41,520 --> 00:05:47,120
right but this is could be out of order

151
00:05:43,919 --> 00:05:48,479
then we have to return sorted

152
00:05:47,120 --> 00:05:50,080
sorted

153
00:05:48,479 --> 00:05:53,360
circuit answer

154
00:05:50,080 --> 00:05:55,360
right this is one way and we can

155
00:05:53,360 --> 00:05:57,440
make this shorter we can make this

156
00:05:55,360 --> 00:06:00,000
shorter right make sure

157
00:05:57,440 --> 00:06:02,240
so we can just return

158
00:06:00,000 --> 00:06:04,840
salt it

159
00:06:02,240 --> 00:06:07,280
and i

160
00:06:04,840 --> 00:06:09,039
for i j

161
00:06:07,280 --> 00:06:11,199
in

162
00:06:09,039 --> 00:06:15,600
in c the items

163
00:06:11,199 --> 00:06:18,880
see the items if j equal equal n

164
00:06:15,600 --> 00:06:21,520
right look all these one two

165
00:06:18,880 --> 00:06:23,600
no one two three four five side lines

166
00:06:21,520 --> 00:06:27,440
can can be converted to one line all

167
00:06:23,600 --> 00:06:30,560
right let's return sorted i for i j i is

168
00:06:27,440 --> 00:06:33,520
the number j is the frequency how how

169
00:06:30,560 --> 00:06:35,280
many times this i appears see the items

170
00:06:33,520 --> 00:06:37,440
if j equals n

171
00:06:35,280 --> 00:06:38,560
all right what does it mean if j equals

172
00:06:37,440 --> 00:06:40,639
n

173
00:06:38,560 --> 00:06:42,639
it appears in time what does it mean if

174
00:06:40,639 --> 00:06:43,140
your number appears in time what does it

175
00:06:42,639 --> 00:06:45,280
mean

176
00:06:43,140 --> 00:06:47,680
[Music]

177
00:06:45,280 --> 00:06:49,759
exactly if it appears anytime it appears

178
00:06:47,680 --> 00:06:51,599
in all of them right that's why it is

179
00:06:49,759 --> 00:06:54,639
some complexity

180
00:06:51,599 --> 00:06:57,199
and how do we find out the terms of next

181
00:06:54,639 --> 00:06:58,880
if there are anything if if let's say

182
00:06:57,199 --> 00:07:01,840
each of these is

183
00:06:58,880 --> 00:07:03,919
these m numbers and they are only the

184
00:07:01,840 --> 00:07:05,759
time complexity of below and all right

185
00:07:03,919 --> 00:07:07,759
the space conditions were using either

186
00:07:05,759 --> 00:07:08,639
the counter or using the set

187
00:07:07,759 --> 00:07:09,440
right

188
00:07:08,639 --> 00:07:10,880
yeah

189
00:07:09,440 --> 00:07:12,510
so what have you learned so far today

190
00:07:10,880 --> 00:07:14,080
come on

191
00:07:12,510 --> 00:07:16,240
[Music]

192
00:07:14,080 --> 00:07:19,759
in one sentence just to summarize the

193
00:07:16,240 --> 00:07:22,400
section of multiple right black set

194
00:07:19,759 --> 00:07:24,000
how many ways did they talk about

195
00:07:22,400 --> 00:07:24,720
set and

196
00:07:24,000 --> 00:07:25,520
set

197
00:07:24,720 --> 00:07:27,599
okay

198
00:07:25,520 --> 00:07:29,599
now okay what area

199
00:07:27,599 --> 00:07:31,360
what have you learned today and what are

200
00:07:29,599 --> 00:07:33,840
we trying to solve

201
00:07:31,360 --> 00:07:36,479
and how many ways can we solve okay just

202
00:07:33,840 --> 00:07:36,479
two questions

203
00:07:38,400 --> 00:07:43,039
multiple arrays yeah so it means that

204
00:07:40,960 --> 00:07:46,000
which find out which numbers

205
00:07:43,039 --> 00:07:48,400
appear in all races

206
00:07:46,000 --> 00:07:50,639
two what are those

207
00:07:48,400 --> 00:07:52,639
uh count and

208
00:07:50,639 --> 00:07:54,400
uh

209
00:07:52,639 --> 00:07:55,919
counter is the second method what's the

210
00:07:54,400 --> 00:07:58,800
first method

211
00:07:55,919 --> 00:08:00,479
yes yeah set what set is the data

212
00:07:58,800 --> 00:08:03,199
structure that contains only unique

213
00:08:00,479 --> 00:08:04,720
numbers okay so this problem is quite

214
00:08:03,199 --> 00:08:07,919
simple and

215
00:08:04,720 --> 00:08:10,479
the the the diff i mean the one thing we

216
00:08:07,919 --> 00:08:13,360
have to keep in mind is that these

217
00:08:10,479 --> 00:08:15,440
arrays contains distinct or unique

218
00:08:13,360 --> 00:08:18,160
numbers so there are no duplicate

219
00:08:15,440 --> 00:08:20,879
numbers in each array right so

220
00:08:18,160 --> 00:08:22,479
if they are duplicate in each array then

221
00:08:20,879 --> 00:08:24,639
we cannot use the

222
00:08:22,479 --> 00:08:26,639
set because we don't know how many times

223
00:08:24,639 --> 00:08:28,800
they appear for the set you only

224
00:08:26,639 --> 00:08:30,319
remember once right right they get it

225
00:08:28,800 --> 00:08:35,680
look

226
00:08:30,319 --> 00:08:38,640
one two three three and one two

227
00:08:35,680 --> 00:08:39,839
two three three okay if we can construct

228
00:08:38,640 --> 00:08:41,360
the set

229
00:08:39,839 --> 00:08:43,440
from these two

230
00:08:41,360 --> 00:08:45,360
look these two arrays are different one

231
00:08:43,440 --> 00:08:47,600
two three three that duplicate threes

232
00:08:45,360 --> 00:08:49,200
that duplicate two and duplicate three

233
00:08:47,600 --> 00:08:50,399
if we convert it

234
00:08:49,200 --> 00:08:52,720
if we can

235
00:08:50,399 --> 00:08:56,080
construct a set from each array

236
00:08:52,720 --> 00:08:59,120
they both will be a set of set

237
00:08:56,080 --> 00:09:01,120
set what one two three right

238
00:08:59,120 --> 00:09:02,880
so basically we said it's just the data

239
00:09:01,120 --> 00:09:04,959
structure contains only unique numbers

240
00:09:02,880 --> 00:09:07,120
right so it doesn't tell me how many

241
00:09:04,959 --> 00:09:10,560
times up here but that counter will be

242
00:09:07,120 --> 00:09:12,399
okay right counter you can but but the

243
00:09:10,560 --> 00:09:14,480
thing is that the counter

244
00:09:12,399 --> 00:09:16,480
for the counter to work we have to check

245
00:09:14,480 --> 00:09:17,519
it appears in time if it has the more

246
00:09:16,480 --> 00:09:20,240
than one

247
00:09:17,519 --> 00:09:22,480
if we have the if each array contains

248
00:09:20,240 --> 00:09:24,640
more than one duplicate number so then

249
00:09:22,480 --> 00:09:26,959
this way this method is not also not

250
00:09:24,640 --> 00:09:28,560
working okay

251
00:09:26,959 --> 00:09:32,519
make sense

252
00:09:28,560 --> 00:09:32,519
okay that's it for today bye

