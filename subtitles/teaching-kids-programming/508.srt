1
00:00:00,640 --> 00:00:04,240
hello mister with mr ryan are you right

2
00:00:03,280 --> 00:00:05,759
okay

3
00:00:04,240 --> 00:00:07,279
so a few days ago we talked about the

4
00:00:05,759 --> 00:00:10,000
bus station remember that the bus

5
00:00:07,279 --> 00:00:11,759
stations are in a circle

6
00:00:10,000 --> 00:00:16,480
simple graph

7
00:00:11,759 --> 00:00:19,199
zero one two three if the cost one

8
00:00:16,480 --> 00:00:21,520
two three

9
00:00:19,199 --> 00:00:22,960
four okay let's make this bigger if this

10
00:00:21,520 --> 00:00:24,000
is nine so

11
00:00:22,960 --> 00:00:26,160
what's the

12
00:00:24,000 --> 00:00:28,000
shortest distance between zero and one

13
00:00:26,160 --> 00:00:31,279
this is a quad right a regular graph

14
00:00:28,000 --> 00:00:31,279
right we talk about the mother

15
00:00:39,920 --> 00:00:45,040
19 and three are about the same okay

16
00:00:46,000 --> 00:00:50,879
especially this is the weighted graph

17
00:00:47,680 --> 00:00:52,800
right so this is a simple regular graph

18
00:00:50,879 --> 00:00:55,199
we talk about a regular graph regular

19
00:00:52,800 --> 00:00:58,800
graph means that each vertex has the

20
00:00:55,199 --> 00:01:00,879
same number of neighbors right and

21
00:00:58,800 --> 00:01:02,800
for this particular graph problem we can

22
00:01:00,879 --> 00:01:04,799
just use the mass the shot is distance

23
00:01:02,800 --> 00:01:05,840
there are only two ways right either is

24
00:01:04,799 --> 00:01:07,840
this bit

25
00:01:05,840 --> 00:01:10,000
or it's this bit right

26
00:01:07,840 --> 00:01:13,680
so we can just do a simple math we talk

27
00:01:10,000 --> 00:01:14,799
about that since we can treat this as a

28
00:01:13,680 --> 00:01:17,759
weighted

29
00:01:14,799 --> 00:01:19,360
undirected graph then we can use the the

30
00:01:17,759 --> 00:01:21,200
graph aggregate the shortest path we

31
00:01:19,360 --> 00:01:23,200
talk about lots of jobs about that

32
00:01:21,200 --> 00:01:25,280
baxter

33
00:01:23,200 --> 00:01:27,520
these can be used on direct or and

34
00:01:25,280 --> 00:01:29,920
directly radio and vertigo right but it

35
00:01:27,520 --> 00:01:31,920
does not work on negative

36
00:01:29,920 --> 00:01:34,640
weights

37
00:01:31,920 --> 00:01:36,479
we talked about uh floyd

38
00:01:34,640 --> 00:01:38,240
wasa

39
00:01:36,479 --> 00:01:41,520
uniform concert

40
00:01:38,240 --> 00:01:45,040
this is the variant of this the bfs dfs

41
00:01:41,520 --> 00:01:45,040
does know what this in this case

42
00:01:45,360 --> 00:01:49,759
why is that the devastation breakfast

43
00:01:47,680 --> 00:01:52,560
search does not work in this particular

44
00:01:49,759 --> 00:01:53,759
case why is that anybody

45
00:01:52,560 --> 00:01:55,680
unweighted

46
00:01:53,759 --> 00:01:57,920
yes so therefore certain purposes can

47
00:01:55,680 --> 00:01:59,520
only be used on unweighted graph okay so

48
00:01:57,920 --> 00:02:01,040
that means that we cannot use these two

49
00:01:59,520 --> 00:02:03,200
angles to do this right and we talk

50
00:02:01,040 --> 00:02:04,479
about iterative differences which is the

51
00:02:03,200 --> 00:02:05,520
combination of different searching

52
00:02:04,479 --> 00:02:08,160
preferences

53
00:02:05,520 --> 00:02:10,560
okay so we can use these three shortest

54
00:02:08,160 --> 00:02:12,480
paths again okay so let's use this for

55
00:02:10,560 --> 00:02:14,560
you also when you talk about that let's

56
00:02:12,480 --> 00:02:18,480
just review this by solving this problem

57
00:02:14,560 --> 00:02:21,680
right the foreign water is uh o v cubic

58
00:02:18,480 --> 00:02:23,599
uh 30 stars actually can be used on uh

59
00:02:21,680 --> 00:02:26,640
weighted or hybrid graph directly or

60
00:02:23,599 --> 00:02:28,160
another one and it's a matty sauce musty

61
00:02:26,640 --> 00:02:29,760
sauce

62
00:02:28,160 --> 00:02:31,840
meaning that when we perform this

63
00:02:29,760 --> 00:02:34,480
shortest part again we can get the

64
00:02:31,840 --> 00:02:37,360
shortest parts for any pair so we we

65
00:02:34,480 --> 00:02:38,480
have this i j

66
00:02:37,360 --> 00:02:40,160
is the

67
00:02:38,480 --> 00:02:42,560
represent the shortest path between the

68
00:02:40,160 --> 00:02:45,280
vertical side vertices okay the spirits

69
00:02:42,560 --> 00:02:46,480
of the fluid water is this vertex i and

70
00:02:45,280 --> 00:02:48,080
then

71
00:02:46,480 --> 00:02:50,480
we want to update the shortest path

72
00:02:48,080 --> 00:02:52,879
between the vertex side to veltex j and

73
00:02:50,480 --> 00:02:54,959
we keep updating this keep

74
00:02:52,879 --> 00:02:59,360
iterating the vertex k

75
00:02:54,959 --> 00:02:59,360
if the distance d i j

76
00:02:59,519 --> 00:03:02,640
if d i

77
00:03:01,440 --> 00:03:06,159
k

78
00:03:02,640 --> 00:03:08,159
plus d k j right look we talked about

79
00:03:06,159 --> 00:03:10,400
this if it's smaller than d i j now we

80
00:03:08,159 --> 00:03:13,280
can replace the distance of shortest

81
00:03:10,400 --> 00:03:14,159
distance from i to j with with this part

82
00:03:13,280 --> 00:03:16,800
right

83
00:03:14,159 --> 00:03:20,879
look this i to j

84
00:03:16,800 --> 00:03:23,280
may be a sub problem of of a bigger part

85
00:03:20,879 --> 00:03:25,360
of of a longer distance for example if

86
00:03:23,280 --> 00:03:26,879
these distance a to b

87
00:03:25,360 --> 00:03:28,879
if the shot is fine look we want to

88
00:03:26,879 --> 00:03:30,640
calculate the satisfied between a vertex

89
00:03:28,879 --> 00:03:32,480
and a vertex b

90
00:03:30,640 --> 00:03:35,840
right and at some point

91
00:03:32,480 --> 00:03:38,159
we realized that the distance to i

92
00:03:35,840 --> 00:03:40,720
from i to j can be replaced by i to k

93
00:03:38,159 --> 00:03:43,280
plus k to j right so then we just

94
00:03:40,720 --> 00:03:46,319
abandon this

95
00:03:43,280 --> 00:03:47,440
right so we can just replace this with

96
00:03:46,319 --> 00:03:49,440
this

97
00:03:47,440 --> 00:03:52,159
because this one

98
00:03:49,440 --> 00:03:54,879
is a sub problem and it provides a

99
00:03:52,159 --> 00:03:58,080
shorter path a better result

100
00:03:54,879 --> 00:04:01,760
okay so in order to apply this algorithm

101
00:03:58,080 --> 00:04:03,920
we need to convert these into

102
00:04:01,760 --> 00:04:05,840
into a graph into this right and then we

103
00:04:03,920 --> 00:04:08,080
can apply it okay

104
00:04:05,840 --> 00:04:08,799
i'll try to destroy water

105
00:04:08,080 --> 00:04:10,519
so

106
00:04:08,799 --> 00:04:14,720
this uh

107
00:04:10,519 --> 00:04:18,160
foreign sauce with ov cubic

108
00:04:14,720 --> 00:04:20,720
compared to dextra is o h plus v log of

109
00:04:18,160 --> 00:04:22,479
v which which one is bigger which one is

110
00:04:20,720 --> 00:04:25,360
faster

111
00:04:22,479 --> 00:04:27,919
this one is faster yeah because factor

112
00:04:25,360 --> 00:04:30,080
makes assumption that all the weights

113
00:04:27,919 --> 00:04:32,639
are positive so it's kind of greedy

114
00:04:30,080 --> 00:04:36,160
right so the remember the the direction

115
00:04:32,639 --> 00:04:38,479
again two step update the estimate and

116
00:04:36,160 --> 00:04:41,759
pick the vertex next vertex with the

117
00:04:38,479 --> 00:04:43,440
smallest weight in the ionix

118
00:04:41,759 --> 00:04:45,199
so it based on this assumption so it's

119
00:04:43,440 --> 00:04:47,680
very critical so it's a

120
00:04:45,199 --> 00:04:49,919
and if we implement it using a priority

121
00:04:47,680 --> 00:04:52,080
is the time complexities of

122
00:04:49,919 --> 00:04:53,440
e plus v log of v because the log v

123
00:04:52,080 --> 00:04:55,520
comes from

124
00:04:53,440 --> 00:04:58,800
the step extracting the minimum the

125
00:04:55,520 --> 00:05:02,080
optimum from the priority queue up here

126
00:04:58,800 --> 00:05:03,199
the frying wasa is much soft and it

127
00:05:02,080 --> 00:05:05,039
works on

128
00:05:03,199 --> 00:05:06,960
negative weights as well right it was a

129
00:05:05,039 --> 00:05:09,360
negative way so it's a slower but the

130
00:05:06,960 --> 00:05:12,479
advantage of this floyd water is that it

131
00:05:09,360 --> 00:05:14,240
can be used to compute the shutter path

132
00:05:12,479 --> 00:05:16,080
between any two pairs it's a microsoft

133
00:05:14,240 --> 00:05:19,199
this is a single source okay single

134
00:05:16,080 --> 00:05:21,680
source means that the output of dextra

135
00:05:19,199 --> 00:05:24,880
produce this p array b

136
00:05:21,680 --> 00:05:26,800
d array right so from zero to n that

137
00:05:24,880 --> 00:05:29,199
gives the shortest path between the

138
00:05:26,800 --> 00:05:31,440
source to any other vertex define the

139
00:05:29,199 --> 00:05:33,759
shortest distance

140
00:05:31,440 --> 00:05:37,039
and then we're given the distance of the

141
00:05:33,759 --> 00:05:39,280
array distance distance away the

142
00:05:37,039 --> 00:05:41,199
distance i

143
00:05:39,280 --> 00:05:45,039
is that the shortest

144
00:05:41,199 --> 00:05:48,720
is the distance between vertex i

145
00:05:45,039 --> 00:05:51,440
to vertex i plus one right so we need to

146
00:05:48,720 --> 00:05:53,680
convert these to the graph and we want

147
00:05:51,440 --> 00:05:56,800
to get a zero system between star to the

148
00:05:53,680 --> 00:06:00,080
n so first of all we need to use the d

149
00:05:56,800 --> 00:06:01,680
so the number of vertex lengths of the

150
00:06:00,080 --> 00:06:04,080
distance

151
00:06:01,680 --> 00:06:06,319
so now we can construct this d away

152
00:06:04,080 --> 00:06:08,720
theory this is the d

153
00:06:06,319 --> 00:06:10,240
two dimensional d i j right we want to

154
00:06:08,720 --> 00:06:12,319
have this d i think this is a two

155
00:06:10,240 --> 00:06:14,240
dimensional e equals at the beginning we

156
00:06:12,319 --> 00:06:15,840
set it to infinity

157
00:06:14,240 --> 00:06:19,759
times n

158
00:06:15,840 --> 00:06:21,919
for underscore in range n

159
00:06:19,759 --> 00:06:24,560
and at least he starts bij if we

160
00:06:21,919 --> 00:06:26,560
certainly set the initial value dij to

161
00:06:24,560 --> 00:06:28,240
infinity right so we

162
00:06:26,560 --> 00:06:29,919
so what does it mean it means that look

163
00:06:28,240 --> 00:06:32,560
if we have this uh

164
00:06:29,919 --> 00:06:35,440
remember the bus stop

165
00:06:32,560 --> 00:06:37,600
and the bus stop zero one two three if

166
00:06:35,440 --> 00:06:40,080
we do this it means that we haven't put

167
00:06:37,600 --> 00:06:41,680
the edges in so the distance between any

168
00:06:40,080 --> 00:06:43,840
two vertex

169
00:06:41,680 --> 00:06:45,840
is infinity because we haven't added the

170
00:06:43,840 --> 00:06:50,560
edge now we want to add the edge

171
00:06:45,840 --> 00:06:53,360
so we just go through for i in range

172
00:06:50,560 --> 00:06:54,800
n minus one we skip the last one because

173
00:06:53,360 --> 00:06:56,880
the last one has a connection to the

174
00:06:54,800 --> 00:06:58,080
first one right so now

175
00:06:56,880 --> 00:06:59,599
d

176
00:06:58,080 --> 00:07:03,919
i

177
00:06:59,599 --> 00:07:05,199
i plus 1 equals d i plus 1

178
00:07:03,919 --> 00:07:06,479
i

179
00:07:05,199 --> 00:07:08,639
equals

180
00:07:06,479 --> 00:07:10,720
distance i

181
00:07:08,639 --> 00:07:12,319
okay so basically this means that we set

182
00:07:10,720 --> 00:07:15,280
the distance i that's the distance

183
00:07:12,319 --> 00:07:18,880
between these uh the neighboring vertex

184
00:07:15,280 --> 00:07:22,000
right and c i i plus 1 equals d i plus 1

185
00:07:18,880 --> 00:07:23,919
i it means that it's undirected right

186
00:07:22,000 --> 00:07:25,599
the distance between these two this is

187
00:07:23,919 --> 00:07:27,599
the same as the distance between these

188
00:07:25,599 --> 00:07:31,039
trees that's what it means and then the

189
00:07:27,599 --> 00:07:32,160
last step is to add the edge of this one

190
00:07:31,039 --> 00:07:34,560
so t

191
00:07:32,160 --> 00:07:36,400
i zero

192
00:07:34,560 --> 00:07:37,919
actually is t

193
00:07:36,400 --> 00:07:39,440
t zero

194
00:07:37,919 --> 00:07:42,160
n minus one

195
00:07:39,440 --> 00:07:46,400
all right c g of n minus y equals t

196
00:07:42,160 --> 00:07:48,639
n minus one zero equals distance

197
00:07:46,400 --> 00:07:50,800
uh distance the

198
00:07:48,639 --> 00:07:53,039
last one is minus one okay so we have

199
00:07:50,800 --> 00:07:55,919
constructed edges right four

200
00:07:53,039 --> 00:07:58,800
k in range

201
00:07:55,919 --> 00:08:01,840
and next and then for

202
00:07:58,800 --> 00:08:02,960
i in range

203
00:08:01,840 --> 00:08:03,680
and

204
00:08:02,960 --> 00:08:05,520
for

205
00:08:03,680 --> 00:08:08,400
j this is the

206
00:08:05,520 --> 00:08:09,280
what the o and cubic obq becomes one

207
00:08:08,400 --> 00:08:12,560
okay

208
00:08:09,280 --> 00:08:18,800
in range n

209
00:08:12,560 --> 00:08:20,479
d i j d i j equals the minimum of d i j

210
00:08:18,800 --> 00:08:21,520
and this is basically the dynamic

211
00:08:20,479 --> 00:08:24,240
programming

212
00:08:21,520 --> 00:08:27,199
d i k

213
00:08:24,240 --> 00:08:29,599
plus d k j all right we're up keep

214
00:08:27,199 --> 00:08:32,320
updating so we so basically the outer

215
00:08:29,599 --> 00:08:35,200
root is to iterating each vertex and

216
00:08:32,320 --> 00:08:38,000
then the inner two loop is to iterate

217
00:08:35,200 --> 00:08:39,279
any pairs so we're iterating any pair i

218
00:08:38,000 --> 00:08:41,760
to j right

219
00:08:39,279 --> 00:08:43,839
and now we iterate another k

220
00:08:41,760 --> 00:08:46,320
so if we find the shutter pass by going

221
00:08:43,839 --> 00:08:48,640
to this by jump to k i put i to k

222
00:08:46,320 --> 00:08:50,959
different plus k to j

223
00:08:48,640 --> 00:08:52,480
then we can replace i to j with this

224
00:08:50,959 --> 00:08:53,760
shuffle path right that's what it means

225
00:08:52,480 --> 00:08:56,640
then we turn

226
00:08:53,760 --> 00:08:59,920
we just return distance star to the end

227
00:08:56,640 --> 00:09:01,680
right and then you give this answer

228
00:08:59,920 --> 00:09:04,800
and we talk about the

229
00:09:01,680 --> 00:09:07,519
product it's a two or four function here

230
00:09:04,800 --> 00:09:08,480
so this bit can be replaced by

231
00:09:07,519 --> 00:09:09,440
4

232
00:09:08,480 --> 00:09:12,240
k

233
00:09:09,440 --> 00:09:15,360
i j in it

234
00:09:12,240 --> 00:09:17,279
it's a tour eta tour

235
00:09:15,360 --> 00:09:19,600
from italy import

236
00:09:17,279 --> 00:09:21,680
product

237
00:09:19,600 --> 00:09:22,480
and range

238
00:09:21,680 --> 00:09:25,040
and

239
00:09:22,480 --> 00:09:25,040
repeat

240
00:09:25,680 --> 00:09:32,640
equal three okay so range n

241
00:09:30,000 --> 00:09:36,320
cartesian pressure excess three times

242
00:09:32,640 --> 00:09:38,080
is the same as this for loop right the

243
00:09:36,320 --> 00:09:40,959
time connects the lv could be the space

244
00:09:38,080 --> 00:09:42,560
convexity of v square why we use the

245
00:09:40,959 --> 00:09:45,040
two-dimensional way

246
00:09:42,560 --> 00:09:46,000
okay the bus stop problem is a regular

247
00:09:45,040 --> 00:09:48,560
graph

248
00:09:46,000 --> 00:09:50,720
you know with a circuit with the vertex

249
00:09:48,560 --> 00:09:52,160
in a circle right

250
00:09:50,720 --> 00:09:53,839
the first step problem right we're

251
00:09:52,160 --> 00:09:56,080
talking about a mass formula just to

252
00:09:53,839 --> 00:09:59,200
compute a minimum of two parts distance

253
00:09:56,080 --> 00:10:01,200
between any two bus stop vertex

254
00:09:59,200 --> 00:10:02,880
can be only two ways right right there

255
00:10:01,200 --> 00:10:05,200
are only two ways because they form a

256
00:10:02,880 --> 00:10:08,160
cycle yeah it's a

257
00:10:05,200 --> 00:10:10,000
regular graph today we're using this uh

258
00:10:08,160 --> 00:10:11,839
floyd water we talked about that this is

259
00:10:10,000 --> 00:10:14,399
the matty sauce

260
00:10:11,839 --> 00:10:16,240
shortest path acronym

261
00:10:14,399 --> 00:10:18,160
that works on

262
00:10:16,240 --> 00:10:20,480
directly and directly weighted iron

263
00:10:18,160 --> 00:10:22,640
weighted ground and the weights can be

264
00:10:20,480 --> 00:10:24,800
negative as well so basically this is a

265
00:10:22,640 --> 00:10:26,560
very very powerful aggregate

266
00:10:24,800 --> 00:10:29,839
it works on many many scenarios one

267
00:10:26,560 --> 00:10:32,160
disadvantage is that it's slow it's all

268
00:10:29,839 --> 00:10:34,240
we kill it right this

269
00:10:32,160 --> 00:10:36,720
can be visualized as a guard problem and

270
00:10:34,240 --> 00:10:39,600
we can apply the shortest path again to

271
00:10:36,720 --> 00:10:41,279
it can we use the texture algorithm to

272
00:10:39,600 --> 00:10:44,240
solve this problem

273
00:10:41,279 --> 00:10:47,720
um yes yes yeah we're done okay

274
00:10:44,240 --> 00:10:47,720
so you have this

275
00:10:49,839 --> 00:10:55,680
that's right yes and and numbers yes i

276
00:10:53,440 --> 00:10:57,279
know we what are we trying to do find

277
00:10:55,680 --> 00:10:58,800
the shortest part

278
00:10:57,279 --> 00:10:59,680
okay uh yeah we are trying to find a

279
00:10:58,800 --> 00:11:02,000
shout

280
00:10:59,680 --> 00:11:03,440
shorter distance between anything faster

281
00:11:02,000 --> 00:11:06,399
so what's the egg room we are using

282
00:11:03,440 --> 00:11:08,560
today floyd wash washer fluid washer

283
00:11:06,399 --> 00:11:10,240
yeah it's a mattress

284
00:11:08,560 --> 00:11:14,600
okay press it okay that's it for today

285
00:11:10,240 --> 00:11:14,600
bye bye bye bye

