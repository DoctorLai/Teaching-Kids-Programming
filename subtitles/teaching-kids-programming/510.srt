1
00:00:00,240 --> 00:00:03,040
hello miss erin mister ryan are you

2
00:00:01,839 --> 00:00:03,840
right

3
00:00:03,040 --> 00:00:05,680
yeah

4
00:00:03,840 --> 00:00:08,639
okay so we talked about the binary tree

5
00:00:05,680 --> 00:00:11,280
the uh low is common ancestor okay we

6
00:00:08,639 --> 00:00:13,440
talked about that on day i don't know

7
00:00:11,280 --> 00:00:15,519
100 days something like that

8
00:00:13,440 --> 00:00:17,520
of a binary or binary search tree what's

9
00:00:15,519 --> 00:00:19,119
a what's spinal retreat

10
00:00:17,520 --> 00:00:20,320
what's spinal tree and what's binary

11
00:00:19,119 --> 00:00:23,920
surgery

12
00:00:20,320 --> 00:00:27,359
[Music]

13
00:00:23,920 --> 00:00:28,880
okay so which one of these is binary

14
00:00:27,359 --> 00:00:32,400
search tree

15
00:00:28,880 --> 00:00:32,400
let me just do another one

16
00:00:33,520 --> 00:00:38,239
which one is finally search three and

17
00:00:35,360 --> 00:00:40,559
which one are the bottom one is one

18
00:00:38,239 --> 00:00:43,680
research three and all of these are

19
00:00:40,559 --> 00:00:45,600
financially right yeah finally search

20
00:00:43,680 --> 00:00:47,360
notes on the left are strictly smaller

21
00:00:45,600 --> 00:00:48,800
than the root the notes on the right are

22
00:00:47,360 --> 00:00:51,680
strictly bigger than the root okay

23
00:00:48,800 --> 00:00:54,719
that's a tricky one how about this one

24
00:00:51,680 --> 00:00:56,950
is this a fine is a tree

25
00:00:54,719 --> 00:01:00,149
why is that

26
00:00:56,950 --> 00:01:00,149
[Music]

27
00:01:02,239 --> 00:01:06,880
excellent okay so look on the left hand

28
00:01:04,479 --> 00:01:09,119
side these notes need to be strictly

29
00:01:06,880 --> 00:01:11,119
smaller than 7.

30
00:01:09,119 --> 00:01:13,439
even it's bigger than 6 but it's not

31
00:01:11,119 --> 00:01:17,600
strictly smaller than seven right right

32
00:01:13,439 --> 00:01:19,600
okay so on day i don't know 114 probably

33
00:01:17,600 --> 00:01:22,320
yeah we talk about finding the lowest

34
00:01:19,600 --> 00:01:24,799
common ancestor of two given notes so we

35
00:01:22,320 --> 00:01:25,680
we we are given two notes in the binary

36
00:01:24,799 --> 00:01:27,119
tree

37
00:01:25,680 --> 00:01:29,280
right and then we want to find out the

38
00:01:27,119 --> 00:01:30,880
lowest common sense for example like if

39
00:01:29,280 --> 00:01:32,079
we change this to

40
00:01:30,880 --> 00:01:33,759
11

41
00:01:32,079 --> 00:01:35,759
all right if we given seven and nine

42
00:01:33,759 --> 00:01:40,799
what's the lowest common ancestor of

43
00:01:35,759 --> 00:01:44,079
seven and i i said what's this mean

44
00:01:40,799 --> 00:01:47,759
ancestor what's the meaning in english

45
00:01:44,079 --> 00:01:47,759
what's the opposite of ancestor

46
00:01:49,520 --> 00:01:52,840
descendant

47
00:01:50,960 --> 00:01:56,000
descendant

48
00:01:52,840 --> 00:01:57,759
yeah basically this means their parents

49
00:01:56,000 --> 00:01:59,600
you know parents or parents parents or

50
00:01:57,759 --> 00:02:03,600
parents parents yeah

51
00:01:59,600 --> 00:02:05,200
what's your lowest common ancestor

52
00:02:03,600 --> 00:02:07,360
eric here

53
00:02:05,200 --> 00:02:08,959
ryan here what's the lowest common

54
00:02:07,360 --> 00:02:12,239
ancestor

55
00:02:08,959 --> 00:02:14,480
mommy and daddy here right

56
00:02:12,239 --> 00:02:17,120
yeah remember

57
00:02:14,480 --> 00:02:20,239
daddy's a sister has a

58
00:02:17,120 --> 00:02:25,280
has a son you met him before right yeah

59
00:02:20,239 --> 00:02:27,360
but that is a sister this is teddy yeah

60
00:02:25,280 --> 00:02:30,319
that is sister that's my house

61
00:02:27,360 --> 00:02:34,959
okay daddy's sister you call

62
00:02:30,319 --> 00:02:34,959
what do you call this auntie uh auntie

63
00:02:35,440 --> 00:02:38,640
google what do you call google in in

64
00:02:37,760 --> 00:02:41,200
english

65
00:02:38,640 --> 00:02:42,560
daddy's sister so what do you call

66
00:02:41,200 --> 00:02:45,040
auntie

67
00:02:42,560 --> 00:02:47,360
i'm not sure okay so um okay let's say

68
00:02:45,040 --> 00:02:47,360
auntie

69
00:02:47,440 --> 00:02:52,080
i only got the sun i don't know cause

70
00:02:50,080 --> 00:02:54,319
the han okay

71
00:02:52,080 --> 00:02:54,319
yeah

72
00:02:54,879 --> 00:03:00,959
so what's the common

73
00:02:57,280 --> 00:03:03,120
ancestor of eric and

74
00:03:00,959 --> 00:03:04,879
daddy and auntie's uh

75
00:03:03,120 --> 00:03:08,480
parent

76
00:03:04,879 --> 00:03:08,480
grandma in connecticut

77
00:03:10,159 --> 00:03:11,760
okay

78
00:03:10,959 --> 00:03:12,560
okay

79
00:03:11,760 --> 00:03:14,000
so

80
00:03:12,560 --> 00:03:15,040
common ancestor

81
00:03:14,000 --> 00:03:16,959
yeah

82
00:03:15,040 --> 00:03:19,599
so basically this question is asking

83
00:03:16,959 --> 00:03:22,159
what's the common note that has this

84
00:03:19,599 --> 00:03:24,239
descendant as it has a descendant yeah

85
00:03:22,159 --> 00:03:27,040
that's that's what it means okay you get

86
00:03:24,239 --> 00:03:29,280
get it yeah okay another question what's

87
00:03:27,040 --> 00:03:32,080
the common ancestor of uh

88
00:03:29,280 --> 00:03:32,080
seven and eight

89
00:03:32,319 --> 00:03:36,879
exactly what's the common sense of six

90
00:03:34,319 --> 00:03:36,879
and eleven

91
00:03:37,680 --> 00:03:42,319
that's a tricky one guess eleven you

92
00:03:39,599 --> 00:03:44,720
know yes so a node is a

93
00:03:42,319 --> 00:03:47,519
ancestor of itself and it's a descendant

94
00:03:44,720 --> 00:03:49,760
of set okay that's the concept

95
00:03:47,519 --> 00:03:51,799
okay so we talked about this lowest

96
00:03:49,760 --> 00:03:55,360
common ancestor in day

97
00:03:51,799 --> 00:03:57,519
114 probably and when we are talking

98
00:03:55,360 --> 00:03:59,840
about that binary it could be a binary

99
00:03:57,519 --> 00:04:00,720
surgery okay define f

100
00:03:59,840 --> 00:04:03,200
load

101
00:04:00,720 --> 00:04:04,640
p we on that day we talk about the

102
00:04:03,200 --> 00:04:05,840
recursion

103
00:04:04,640 --> 00:04:08,000
so

104
00:04:05,840 --> 00:04:09,280
we want to find out we are given these

105
00:04:08,000 --> 00:04:11,599
three loops we want to find out the

106
00:04:09,280 --> 00:04:14,319
common sense of p and q q p and q are

107
00:04:11,599 --> 00:04:18,000
given in the binary okay so let if not

108
00:04:14,319 --> 00:04:18,959
good right then we just return okay

109
00:04:18,000 --> 00:04:21,759
return

110
00:04:18,959 --> 00:04:23,199
if root of value

111
00:04:21,759 --> 00:04:26,639
is in

112
00:04:23,199 --> 00:04:28,800
p dot value or q dot value

113
00:04:26,639 --> 00:04:32,400
then we just return root right

114
00:04:28,800 --> 00:04:34,400
if p dot value and q the value right is

115
00:04:32,400 --> 00:04:36,960
equal to root of n if if the current

116
00:04:34,400 --> 00:04:39,840
given tree the root is the p and q

117
00:04:36,960 --> 00:04:42,720
either of it then we return it right

118
00:04:39,840 --> 00:04:45,040
look that's what it means look

119
00:04:42,720 --> 00:04:45,040
all right

120
00:04:45,120 --> 00:04:48,240
p and q and at least it's also a root

121
00:04:47,440 --> 00:04:52,000
and

122
00:04:48,240 --> 00:04:54,639
then as we talk about a loop is

123
00:04:52,000 --> 00:04:57,280
a node is a common system we said so we

124
00:04:54,639 --> 00:05:00,479
redundant okay uh f

125
00:04:57,280 --> 00:05:00,479
a root or left

126
00:05:00,560 --> 00:05:06,240
first of all we find out the left tree

127
00:05:02,479 --> 00:05:10,960
and next we find out the right tree

128
00:05:06,240 --> 00:05:13,440
if we can't find if a is now or not

129
00:05:10,960 --> 00:05:16,560
right if if we can't find it on the left

130
00:05:13,440 --> 00:05:18,639
tree look here is the root right

131
00:05:16,560 --> 00:05:20,720
and then when this is moved on that this

132
00:05:18,639 --> 00:05:22,800
is blue dot y if we are trying to find

133
00:05:20,720 --> 00:05:24,800
the common ancestor in the left tree if

134
00:05:22,800 --> 00:05:26,240
we can't find any like it must be on the

135
00:05:24,800 --> 00:05:28,400
right right

136
00:05:26,240 --> 00:05:30,800
but same thing if we trying to find the

137
00:05:28,400 --> 00:05:32,960
common ancestor in the right tree

138
00:05:30,800 --> 00:05:35,199
if we can't find it where is it

139
00:05:32,960 --> 00:05:40,160
left left yeah so that's what we mean

140
00:05:35,199 --> 00:05:42,240
return if a is not within b if b is none

141
00:05:40,160 --> 00:05:45,280
return a right okay

142
00:05:42,240 --> 00:05:47,199
right otherwise if we can't find both

143
00:05:45,280 --> 00:05:48,960
then there's only one possibility the p

144
00:05:47,199 --> 00:05:49,840
must be on the left humans only right

145
00:05:48,960 --> 00:05:52,160
right

146
00:05:49,840 --> 00:05:54,800
so in this case which which one is the

147
00:05:52,160 --> 00:05:56,560
common ancestor right look what i said

148
00:05:54,800 --> 00:05:57,840
you remember

149
00:05:56,560 --> 00:05:59,919
yeah

150
00:05:57,840 --> 00:06:01,600
okay so this is the previously we talked

151
00:05:59,919 --> 00:06:02,639
about recursion so

152
00:06:01,600 --> 00:06:05,520
let's

153
00:06:02,639 --> 00:06:08,720
talk about it again so first of all if

154
00:06:05,520 --> 00:06:09,840
if we solve this simple case if p

155
00:06:08,720 --> 00:06:11,440
and q

156
00:06:09,840 --> 00:06:13,840
are p

157
00:06:11,440 --> 00:06:15,919
uh all q and p if it's something like

158
00:06:13,840 --> 00:06:17,520
that if the loser is one of these if p

159
00:06:15,919 --> 00:06:18,880
is the root then we'll determine p if q

160
00:06:17,520 --> 00:06:21,520
is the rule then we don't keep right

161
00:06:18,880 --> 00:06:22,639
because the node is a common sensor of

162
00:06:21,520 --> 00:06:24,479
itself

163
00:06:22,639 --> 00:06:25,360
if not we're trying to find on the left

164
00:06:24,479 --> 00:06:26,880
tree

165
00:06:25,360 --> 00:06:28,960
and we're trying to find on the right if

166
00:06:26,880 --> 00:06:31,680
we can't find it on the left

167
00:06:28,960 --> 00:06:32,960
if if p and q is not on the left if p

168
00:06:31,680 --> 00:06:35,360
and q

169
00:06:32,960 --> 00:06:37,600
in here right then

170
00:06:35,360 --> 00:06:40,080
it must be here right look that's what

171
00:06:37,600 --> 00:06:41,919
it means if a is none a is not on the

172
00:06:40,080 --> 00:06:43,120
left we can't find it on the left so it

173
00:06:41,919 --> 00:06:45,280
could be

174
00:06:43,120 --> 00:06:47,360
p and q could be here right

175
00:06:45,280 --> 00:06:49,360
or p and q will be here that's two

176
00:06:47,360 --> 00:06:51,360
possibilities in either case we return

177
00:06:49,360 --> 00:06:52,400
this one right

178
00:06:51,360 --> 00:06:53,919
so

179
00:06:52,400 --> 00:06:56,160
the same thing if we can't find it on

180
00:06:53,919 --> 00:06:58,800
the right it must be on the left if we

181
00:06:56,160 --> 00:07:00,880
can't find both right if the common

182
00:06:58,800 --> 00:07:02,639
ancestor is not on the left tree and not

183
00:07:00,880 --> 00:07:05,919
on the right tree so there's only one

184
00:07:02,639 --> 00:07:08,160
possibility p and q is on left and right

185
00:07:05,919 --> 00:07:10,400
separately then in this case dude is the

186
00:07:08,160 --> 00:07:12,319
common ancestor

187
00:07:10,400 --> 00:07:14,319
okay so let's recursion

188
00:07:12,319 --> 00:07:16,080
okay how about if i'm telling you this

189
00:07:14,319 --> 00:07:17,919
is a primary search tree but that would

190
00:07:16,080 --> 00:07:19,120
be even simpler

191
00:07:17,919 --> 00:07:20,880
all right so look

192
00:07:19,120 --> 00:07:22,720
7

193
00:07:20,880 --> 00:07:24,000
6

194
00:07:22,720 --> 00:07:26,880
5

195
00:07:24,000 --> 00:07:28,080
6 1 5

196
00:07:26,880 --> 00:07:28,840
9

197
00:07:28,080 --> 00:07:32,080
8

198
00:07:28,840 --> 00:07:34,720
10. right so look

199
00:07:32,080 --> 00:07:37,120
what's the common sense of a and 10

200
00:07:34,720 --> 00:07:39,120
yeah if you look at here both values a

201
00:07:37,120 --> 00:07:41,680
and 10 is bigger than 7 so where is the

202
00:07:39,120 --> 00:07:43,280
command sister right right 3. okay where

203
00:07:41,680 --> 00:07:46,879
is the common system

204
00:07:43,280 --> 00:07:46,879
four five if you compare to this

205
00:07:47,280 --> 00:07:51,039
on the left right yeah learning must be

206
00:07:49,120 --> 00:07:53,120
okay so then look though

207
00:07:51,039 --> 00:07:55,759
it's simple if these three is a binary

208
00:07:53,120 --> 00:07:57,680
sentry we could just say okay if

209
00:07:55,759 --> 00:07:59,039
if both notes are smaller then you must

210
00:07:57,680 --> 00:08:01,440
be on the left tree

211
00:07:59,039 --> 00:08:03,680
if both notes are bigger they must be on

212
00:08:01,440 --> 00:08:05,360
the right trick otherwise which you know

213
00:08:03,680 --> 00:08:07,919
if one note is smaller one note is

214
00:08:05,360 --> 00:08:10,479
bigger which one is the command system

215
00:08:07,919 --> 00:08:12,800
the root easy simple logic right similar

216
00:08:10,479 --> 00:08:16,560
logic so we can implement this before

217
00:08:12,800 --> 00:08:18,319
going to this here another way is to

218
00:08:16,560 --> 00:08:20,800
okay another way i'm not going to write

219
00:08:18,319 --> 00:08:23,680
the code here if this is a binary

220
00:08:20,800 --> 00:08:25,599
now another way is to look we're given a

221
00:08:23,680 --> 00:08:27,039
root right so we can do this type of

222
00:08:25,599 --> 00:08:28,000
search your breakfast search passing

223
00:08:27,039 --> 00:08:30,720
through

224
00:08:28,000 --> 00:08:33,520
uh define different search all right

225
00:08:30,720 --> 00:08:33,520
loot the parent

226
00:08:33,760 --> 00:08:37,599
parent we will do this type of search if

227
00:08:35,760 --> 00:08:40,080
not root

228
00:08:37,599 --> 00:08:40,080
return

229
00:08:50,000 --> 00:08:53,920
yeah okay then we do this pepper search

230
00:08:52,240 --> 00:08:56,720
and then we can we call that this is the

231
00:08:53,920 --> 00:08:59,200
parent yeah right this is a dictionary

232
00:08:56,720 --> 00:09:02,240
and we can say parent dictionary the

233
00:08:59,200 --> 00:09:04,399
parent rule the pair equals parent right

234
00:09:02,240 --> 00:09:06,800
what do we need this parent for look

235
00:09:04,399 --> 00:09:09,440
given the root note we can travel from

236
00:09:06,800 --> 00:09:11,600
parents to the kids but we want it to

237
00:09:09,440 --> 00:09:14,320
look in the reverse way right so we want

238
00:09:11,600 --> 00:09:17,040
to record the parent of each node so

239
00:09:14,320 --> 00:09:19,279
given this then we can do this uh p we

240
00:09:17,040 --> 00:09:21,200
can do this p how do we do this we can

241
00:09:19,279 --> 00:09:23,279
travel backwards to the root and we

242
00:09:21,200 --> 00:09:26,240
remember the notes in the

243
00:09:23,279 --> 00:09:29,279
table so look at this one five

244
00:09:26,240 --> 00:09:31,680
okay so i put it in the same table right

245
00:09:29,279 --> 00:09:34,160
five put it here

246
00:09:31,680 --> 00:09:36,240
six put it here seven put it here okay

247
00:09:34,160 --> 00:09:38,399
this is the table from travel from p

248
00:09:36,240 --> 00:09:41,920
upwards okay and how about eight

249
00:09:38,399 --> 00:09:44,640
is a in scene no right what's a parent

250
00:09:41,920 --> 00:09:46,160
nine what's it's nine in c no what's a

251
00:09:44,640 --> 00:09:49,200
nice parent seven

252
00:09:46,160 --> 00:09:51,360
seven is in c so seven is the common

253
00:09:49,200 --> 00:09:53,200
sense right simple logic right so first

254
00:09:51,360 --> 00:09:55,920
of all we do the left search to remember

255
00:09:53,200 --> 00:09:58,399
the parents for each node and then

256
00:09:55,920 --> 00:10:01,040
with p or q if we do this with p we

257
00:09:58,399 --> 00:10:03,680
remember the note by going up right

258
00:10:01,040 --> 00:10:04,399
going up here and remember the note 5 6

259
00:10:03,680 --> 00:10:06,880
7

260
00:10:04,399 --> 00:10:10,000
and then now a or 10 yeah right it's 10

261
00:10:06,880 --> 00:10:11,440
in sim no transparent nine yeah because

262
00:10:10,000 --> 00:10:13,120
we have done this 10

263
00:10:11,440 --> 00:10:16,399
19 now

264
00:10:13,120 --> 00:10:18,560
nice parent seven 17 okay

265
00:10:16,399 --> 00:10:20,320
so seven is the lowest compensation this

266
00:10:18,560 --> 00:10:21,120
is another way okay coming back to this

267
00:10:20,320 --> 00:10:23,440
okay

268
00:10:21,120 --> 00:10:26,240
financial strict okay easy it'll be easy

269
00:10:23,440 --> 00:10:28,720
we can do this there in two ways

270
00:10:26,240 --> 00:10:30,320
recursion and iterative recursion easy

271
00:10:28,720 --> 00:10:33,360
symbology okay

272
00:10:30,320 --> 00:10:34,480
define f root

273
00:10:33,360 --> 00:10:37,360
p q

274
00:10:34,480 --> 00:10:39,760
okay look if not root return

275
00:10:37,360 --> 00:10:43,120
just to prevent the root is empty okay

276
00:10:39,760 --> 00:10:44,880
now if p dot value is smaller than root

277
00:10:43,120 --> 00:10:48,800
of value

278
00:10:44,880 --> 00:10:51,040
and q the value is smaller than root of

279
00:10:48,800 --> 00:10:52,320
value if p and q both on the left-hand

280
00:10:51,040 --> 00:10:54,000
side then

281
00:10:52,320 --> 00:10:55,279
return

282
00:10:54,000 --> 00:10:58,800
f

283
00:10:55,279 --> 00:11:01,200
what p q can you tell me

284
00:10:58,800 --> 00:11:04,160
if p value is smaller than root this is

285
00:11:01,200 --> 00:11:05,920
root right if p is on the left side p is

286
00:11:04,160 --> 00:11:08,560
on the left hand side so return f

287
00:11:05,920 --> 00:11:09,440
recursion this is recursion so what we

288
00:11:08,560 --> 00:11:10,720
need here

289
00:11:09,440 --> 00:11:12,640
[Music]

290
00:11:10,720 --> 00:11:15,519
left okay

291
00:11:12,640 --> 00:11:17,920
and then again if p dot value is bigger

292
00:11:15,519 --> 00:11:19,360
than root of value

293
00:11:17,920 --> 00:11:24,240
and

294
00:11:19,360 --> 00:11:25,279
q dot value is bigger than root of value

295
00:11:24,240 --> 00:11:27,519
return

296
00:11:25,279 --> 00:11:28,959
calling itself

297
00:11:27,519 --> 00:11:32,480
root

298
00:11:28,959 --> 00:11:35,680
y and p q yeah easy

299
00:11:32,480 --> 00:11:38,640
right here otherwise return

300
00:11:35,680 --> 00:11:38,640
otherwise return

301
00:11:39,120 --> 00:11:44,640
loot yeah perfect

302
00:11:41,680 --> 00:11:46,240
question iterative this simple iterate

303
00:11:44,640 --> 00:11:48,320
this is recursion every question calling

304
00:11:46,240 --> 00:11:50,720
itself here here

305
00:11:48,320 --> 00:11:52,800
yeah yeah we navigate it to the left of

306
00:11:50,720 --> 00:11:55,200
root.y we actually

307
00:11:52,800 --> 00:11:57,120
making the problem smaller so we can try

308
00:11:55,200 --> 00:11:59,120
to solve a smaller problem right that's

309
00:11:57,120 --> 00:12:00,959
what the recursion for it basically at

310
00:11:59,120 --> 00:12:02,399
some point you need to solve this

311
00:12:00,959 --> 00:12:04,079
problem otherwise if an application

312
00:12:02,399 --> 00:12:05,600
don't end what happened it's just

313
00:12:04,079 --> 00:12:06,880
calling itself it says

314
00:12:05,600 --> 00:12:09,600
and the computer just repeats the

315
00:12:06,880 --> 00:12:10,720
recording exam without solving anything

316
00:12:09,600 --> 00:12:13,200
all right

317
00:12:10,720 --> 00:12:13,920
yeah remember that the exclamation mark

318
00:12:13,200 --> 00:12:18,560
right

319
00:12:13,920 --> 00:12:21,839
f n equals n times m f n minus one

320
00:12:18,560 --> 00:12:24,079
right so s n minus one according to n n

321
00:12:21,839 --> 00:12:26,560
minus one times f minus 2 right look at

322
00:12:24,079 --> 00:12:28,560
this one is n minus 1 times

323
00:12:26,560 --> 00:12:30,639
f minus 2. so let's please keep keep

324
00:12:28,560 --> 00:12:33,360
recursing but we example we need to

325
00:12:30,639 --> 00:12:34,480
solve it when n equals

326
00:12:33,360 --> 00:12:38,560
zero

327
00:12:34,480 --> 00:12:41,760
zero exclamation is one right now once

328
00:12:38,560 --> 00:12:44,480
we get still zero estimation equals one

329
00:12:41,760 --> 00:12:48,240
then we go backwards to solve

330
00:12:44,480 --> 00:12:48,240
a bigger problem recursion

331
00:12:48,560 --> 00:12:53,120
but recursion has this problem that may

332
00:12:50,880 --> 00:12:55,680
sometimes if the recursion that is too

333
00:12:53,120 --> 00:12:57,120
big then we have respect overflow right

334
00:12:55,680 --> 00:13:00,160
stack overflow

335
00:12:57,120 --> 00:13:02,880
okay so learn this one the same uh load

336
00:13:00,160 --> 00:13:04,639
wire load

337
00:13:02,880 --> 00:13:08,240
this is the same yeah look

338
00:13:04,639 --> 00:13:08,240
if p the value

339
00:13:08,320 --> 00:13:13,040
is smaller than q uh load of value this

340
00:13:10,800 --> 00:13:15,519
is some basically copy but we are not

341
00:13:13,040 --> 00:13:17,839
returning we go to the left rule equals

342
00:13:15,519 --> 00:13:20,160
rule.net right

343
00:13:17,839 --> 00:13:24,079
a if

344
00:13:20,160 --> 00:13:26,800
p dot value bigger than root of value

345
00:13:24,079 --> 00:13:29,040
and p dot q dot value bigger than q dot

346
00:13:26,800 --> 00:13:31,519
value bigger than root of value so in

347
00:13:29,040 --> 00:13:32,560
this case what should we do blue equals

348
00:13:31,519 --> 00:13:34,480
one

349
00:13:32,560 --> 00:13:36,800
so now we have loaded here we need to go

350
00:13:34,480 --> 00:13:39,040
to the right right blue equals blue dot

351
00:13:36,800 --> 00:13:39,040
right

352
00:13:39,360 --> 00:13:45,760
otherwise errors else we just break and

353
00:13:42,079 --> 00:13:48,639
then at the end we just return root

354
00:13:45,760 --> 00:13:50,079
yeah okay so these two are the same

355
00:13:48,639 --> 00:13:52,240
recursion

356
00:13:50,079 --> 00:13:55,040
it's rated okay

357
00:13:52,240 --> 00:13:57,680
okay so to sum up yeah we talked about

358
00:13:55,040 --> 00:13:58,800
this problem uh in the early days

359
00:13:57,680 --> 00:14:00,639
but

360
00:13:58,800 --> 00:14:02,639
on that day we talked about recursion to

361
00:14:00,639 --> 00:14:04,720
solving this problem on

362
00:14:02,639 --> 00:14:06,480
uh binary tree but the title was

363
00:14:04,720 --> 00:14:08,320
incorrect at that time the title was

364
00:14:06,480 --> 00:14:09,920
final research trick so with spinal

365
00:14:08,320 --> 00:14:11,040
surgery we can apply this simple

366
00:14:09,920 --> 00:14:13,600
approach

367
00:14:11,040 --> 00:14:16,639
yeah the time convexity if it's final

368
00:14:13,600 --> 00:14:18,399
search tree the time complexity is o h

369
00:14:16,639 --> 00:14:19,839
o h

370
00:14:18,399 --> 00:14:21,600
actually it's the height of the final

371
00:14:19,839 --> 00:14:23,920
thirty right because every time we go

372
00:14:21,600 --> 00:14:26,160
one level so the maximum distance we

373
00:14:23,920 --> 00:14:29,040
travel from the root to the leaf

374
00:14:26,160 --> 00:14:31,040
right every time we go down one level

375
00:14:29,040 --> 00:14:32,399
it's height in the worst case final

376
00:14:31,040 --> 00:14:34,320
search tree

377
00:14:32,399 --> 00:14:36,720
the height is the number of nodes right

378
00:14:34,320 --> 00:14:39,519
you know the final surgery is degenerate

379
00:14:36,720 --> 00:14:41,920
like like one two three

380
00:14:39,519 --> 00:14:43,839
four so it's basically a linkage you

381
00:14:41,920 --> 00:14:46,480
know it doesn't have two ways right so

382
00:14:43,839 --> 00:14:47,920
look at this the final surgery right

383
00:14:46,480 --> 00:14:49,920
every time we can only go to the right

384
00:14:47,920 --> 00:14:52,639
it's a linguist right we're we're not

385
00:14:49,920 --> 00:14:54,320
using the characteristic of bonuses to

386
00:14:52,639 --> 00:14:57,040
the left and right strictly because they

387
00:14:54,320 --> 00:14:59,600
know left nodes okay also one two and

388
00:14:57,040 --> 00:15:02,639
then you go to the left it will be 1.5

389
00:14:59,600 --> 00:15:03,760
so every node has one

390
00:15:02,639 --> 00:15:04,800
kit

391
00:15:03,760 --> 00:15:06,880
then

392
00:15:04,800 --> 00:15:09,600
the height is

393
00:15:06,880 --> 00:15:12,079
equals to the number of nodes

394
00:15:09,600 --> 00:15:14,079
let's face max the uh

395
00:15:12,079 --> 00:15:16,560
this one we're not using any additional

396
00:15:14,079 --> 00:15:18,399
space this one we're using recursion but

397
00:15:16,560 --> 00:15:19,839
sometimes the location can be optimized

398
00:15:18,399 --> 00:15:22,079
okay so

399
00:15:19,839 --> 00:15:23,199
if it's a binary string if it's a binary

400
00:15:22,079 --> 00:15:25,519
we can

401
00:15:23,199 --> 00:15:28,079
still use the iterative or recursion

402
00:15:25,519 --> 00:15:30,079
right and we also talk about using the

403
00:15:28,079 --> 00:15:32,000
uh set so basically we do that perform

404
00:15:30,079 --> 00:15:33,839
the definition breakfast search from the

405
00:15:32,000 --> 00:15:36,880
rule to the kids so we remember the

406
00:15:33,839 --> 00:15:38,880
parents of each each node then from p or

407
00:15:36,880 --> 00:15:41,680
q we travel backwards to the root and we

408
00:15:38,880 --> 00:15:43,759
remember we put those nodes yeah we will

409
00:15:41,680 --> 00:15:46,079
pronounce nouns in a hash set right and

410
00:15:43,759 --> 00:15:48,720
then we travel from the queue backwards

411
00:15:46,079 --> 00:15:51,360
again and here it means the first note

412
00:15:48,720 --> 00:15:53,120
that is already seen by key p right yeah

413
00:15:51,360 --> 00:15:54,800
that's that's what you do when you're

414
00:15:53,120 --> 00:15:56,399
trying to find the law is common and

415
00:15:54,800 --> 00:15:57,519
sensitive okay

416
00:15:56,399 --> 00:16:00,480
okay so

417
00:15:57,519 --> 00:16:00,480
what have you learned today

418
00:16:05,120 --> 00:16:07,199
finally

419
00:16:06,160 --> 00:16:09,600
okay so

420
00:16:07,199 --> 00:16:11,360
okay so how do we find the coma assets

421
00:16:09,600 --> 00:16:13,839
the lowest commerce system financial

422
00:16:11,360 --> 00:16:15,680
street so p and q so if they are both

423
00:16:13,839 --> 00:16:18,079
smaller than a root then where do we

424
00:16:15,680 --> 00:16:22,560
find the lowest commands

425
00:16:18,079 --> 00:16:22,560
left tree and if it's all bigger than a

426
00:16:26,639 --> 00:16:29,639
bye

