1
00:00:00,080 --> 00:00:03,840
hello mr and mr ryan are you right yes

2
00:00:03,040 --> 00:00:06,319
yes

3
00:00:03,840 --> 00:00:07,200
okay so look what's this look i draw

4
00:00:06,319 --> 00:00:09,440
something

5
00:00:07,200 --> 00:00:11,200
a graph yes a graph but particularly

6
00:00:09,440 --> 00:00:13,599
what's this what kind of data structure

7
00:00:11,200 --> 00:00:13,599
is this

8
00:00:14,880 --> 00:00:19,840
yes well done financially so look we are

9
00:00:17,279 --> 00:00:21,359
given this final tree a full financing

10
00:00:19,840 --> 00:00:23,760
okay

11
00:00:21,359 --> 00:00:23,760
blue

12
00:00:23,920 --> 00:00:30,560
four binary a four biology means that

13
00:00:26,880 --> 00:00:32,719
each node contains zero or two kids

14
00:00:30,560 --> 00:00:34,559
right so each node has yellow kits or

15
00:00:32,719 --> 00:00:37,280
two kits for the leaf node you don't

16
00:00:34,559 --> 00:00:41,120
have any kit so we are given the value

17
00:00:37,280 --> 00:00:42,719
two that two or four and two of us

18
00:00:41,120 --> 00:00:45,680
yeah you can simply

19
00:00:42,719 --> 00:00:47,200
two of us two values is basically tick

20
00:00:45,680 --> 00:00:50,000
cross okay

21
00:00:47,200 --> 00:00:52,079
yes no okay this is pulling

22
00:00:50,000 --> 00:00:54,800
yes no

23
00:00:52,079 --> 00:00:57,280
okay and then for the other note

24
00:00:54,800 --> 00:00:59,760
we are given this uh o or n

25
00:00:57,280 --> 00:01:02,399
right so we talk about this binary

26
00:00:59,760 --> 00:01:03,760
binary operators or

27
00:01:02,399 --> 00:01:05,280
a or b

28
00:01:03,760 --> 00:01:07,680
what's all mean what's the difference

29
00:01:05,280 --> 00:01:10,960
between on and what's the meaning or

30
00:01:07,680 --> 00:01:11,760
else if you have a choice

31
00:01:10,960 --> 00:01:13,920
one of yes of

32
00:01:11,760 --> 00:01:16,159
true then it's true and it's the both

33
00:01:13,920 --> 00:01:17,520
must be true right so we're given this

34
00:01:16,159 --> 00:01:19,360
boolean tree

35
00:01:17,520 --> 00:01:21,680
which is a full binary we want to

36
00:01:19,360 --> 00:01:25,119
evaluate it so look first of all we

37
00:01:21,680 --> 00:01:28,000
evaluate leaf node fourth and true is

38
00:01:25,119 --> 00:01:29,680
false right so look we replace this bit

39
00:01:28,000 --> 00:01:32,479
before

40
00:01:29,680 --> 00:01:35,360
true or false is true yeah we have a

41
00:01:32,479 --> 00:01:38,400
choice either is okay then it's okay now

42
00:01:35,360 --> 00:01:40,799
we do tend to we are given a full final

43
00:01:38,400 --> 00:01:43,439
tree which contains the

44
00:01:40,799 --> 00:01:46,079
booleans and boolean operators right

45
00:01:43,439 --> 00:01:48,640
it's a full binary means that each node

46
00:01:46,079 --> 00:01:51,119
contains zero or two kit

47
00:01:48,640 --> 00:01:53,600
and we want to evaluate it by the tree

48
00:01:51,119 --> 00:01:55,040
we evaluate the leaves

49
00:01:53,600 --> 00:01:57,920
so this bit

50
00:01:55,040 --> 00:02:00,079
will be evaluated for us

51
00:01:57,920 --> 00:02:01,840
right and then we continue evaluating

52
00:02:00,079 --> 00:02:04,320
these

53
00:02:01,840 --> 00:02:07,280
fourth and true is false true or false

54
00:02:04,320 --> 00:02:09,920
is true and for the end

55
00:02:07,280 --> 00:02:12,560
n usually using this symbol yeah for the

56
00:02:09,920 --> 00:02:13,520
o usually simple

57
00:02:12,560 --> 00:02:18,879
true

58
00:02:13,520 --> 00:02:20,840
and true is true true and false is first

59
00:02:18,879 --> 00:02:23,280
fourth and

60
00:02:20,840 --> 00:02:26,319
fourth is first

61
00:02:23,280 --> 00:02:27,360
fourth and two is

62
00:02:26,319 --> 00:02:29,200
false

63
00:02:27,360 --> 00:02:32,239
okay so only

64
00:02:29,200 --> 00:02:35,440
only both are true then the results so

65
00:02:32,239 --> 00:02:38,480
all others are false but for all

66
00:02:35,440 --> 00:02:39,360
two or two is two

67
00:02:38,480 --> 00:02:42,480
two

68
00:02:39,360 --> 00:02:45,040
or four is two

69
00:02:42,480 --> 00:02:46,080
fourths or two is

70
00:02:45,040 --> 00:02:50,319
two

71
00:02:46,080 --> 00:02:53,599
fourth or fourth is first okay so look

72
00:02:50,319 --> 00:02:55,040
as long as we have at least one

73
00:02:53,599 --> 00:02:57,360
then

74
00:02:55,040 --> 00:02:59,440
then the result is so otherwise this is

75
00:02:57,360 --> 00:03:02,080
first okay let's pull it

76
00:02:59,440 --> 00:03:04,319
so we can evaluate these trees

77
00:03:02,080 --> 00:03:05,440
uh by using what kind of aggregate uh

78
00:03:04,319 --> 00:03:07,200
what kind of

79
00:03:05,440 --> 00:03:08,640
three travelers are equine can we use in

80
00:03:07,200 --> 00:03:11,120
this case

81
00:03:08,640 --> 00:03:13,280
breakfast deficit okay questions

82
00:03:11,120 --> 00:03:15,360
definitely so in this case which one is

83
00:03:13,280 --> 00:03:17,120
better better search

84
00:03:15,360 --> 00:03:19,200
better search is better right for

85
00:03:17,120 --> 00:03:20,800
surgery is level by level

86
00:03:19,200 --> 00:03:22,239
right because we want to evaluate the

87
00:03:20,800 --> 00:03:24,879
leaves first right

88
00:03:22,239 --> 00:03:26,400
so we go down the tree and then we use

89
00:03:24,879 --> 00:03:28,879
the recursion

90
00:03:26,400 --> 00:03:29,920
we evaluate the leaf node and then we

91
00:03:28,879 --> 00:03:32,159
reverse

92
00:03:29,920 --> 00:03:33,760
so we use the stack we can use the stack

93
00:03:32,159 --> 00:03:36,319
to implement the definition oh we use

94
00:03:33,760 --> 00:03:38,720
the recursion right so usually step

95
00:03:36,319 --> 00:03:41,840
recursion it means that we go down the

96
00:03:38,720 --> 00:03:43,680
tree as as deep as we can until we

97
00:03:41,840 --> 00:03:46,239
reach the terminals which is the

98
00:03:43,680 --> 00:03:49,840
difference and then we evaluate it right

99
00:03:46,239 --> 00:03:53,519
and then we pass back we go back

100
00:03:49,840 --> 00:03:55,120
okay so this is definition define f

101
00:03:53,519 --> 00:03:57,360
root

102
00:03:55,120 --> 00:04:00,080
so first of all if the note is a

103
00:03:57,360 --> 00:04:02,560
terminal if it's a big note it doesn't

104
00:04:00,080 --> 00:04:04,799
have blanket then we just return the

105
00:04:02,560 --> 00:04:06,959
value if root of left

106
00:04:04,799 --> 00:04:08,480
is noun

107
00:04:06,959 --> 00:04:10,959
and

108
00:04:08,480 --> 00:04:13,200
root of right is numb right so this

109
00:04:10,959 --> 00:04:15,040
basically means that

110
00:04:13,200 --> 00:04:16,959
it's a leaf node and we just return to

111
00:04:15,040 --> 00:04:19,440
the value right

112
00:04:16,959 --> 00:04:22,240
there's nothing we can do here

113
00:04:19,440 --> 00:04:24,479
len okay so then we check if it's not

114
00:04:22,240 --> 00:04:26,720
different now then we just change if

115
00:04:24,479 --> 00:04:30,000
root of value

116
00:04:26,720 --> 00:04:32,960
is n right if it's n

117
00:04:30,000 --> 00:04:35,520
okay then we just return

118
00:04:32,960 --> 00:04:37,600
return f rule

119
00:04:35,520 --> 00:04:39,040
dot left

120
00:04:37,600 --> 00:04:39,919
and

121
00:04:39,040 --> 00:04:40,960
f

122
00:04:39,919 --> 00:04:42,720
rule

123
00:04:40,960 --> 00:04:45,759
dot right okay

124
00:04:42,720 --> 00:04:49,120
look if this is n now we need to return

125
00:04:45,759 --> 00:04:51,840
the leaf f dot f do the left is little

126
00:04:49,120 --> 00:04:54,080
bit absolute right is this bit the

127
00:04:51,840 --> 00:04:57,360
result is n right

128
00:04:54,080 --> 00:04:59,919
otherwise return if it's a if it's not

129
00:04:57,360 --> 00:05:02,720
and then it's all the return

130
00:04:59,919 --> 00:05:03,600
f blue dot left

131
00:05:02,720 --> 00:05:06,720
o

132
00:05:03,600 --> 00:05:06,720
f root of right

133
00:05:07,280 --> 00:05:10,479
okay

134
00:05:08,880 --> 00:05:12,639
does doesn't make sense yeah

135
00:05:10,479 --> 00:05:15,280
it's very simple right

136
00:05:12,639 --> 00:05:15,280
okay so look

137
00:05:15,360 --> 00:05:19,360
look at this recursion yeah so we just

138
00:05:17,199 --> 00:05:21,360
go down like this is the leaf node if

139
00:05:19,360 --> 00:05:24,800
this is the leaf node we just return

140
00:05:21,360 --> 00:05:26,800
itself right look if it's a n

141
00:05:24,800 --> 00:05:29,120
look at this if this noun is n it will

142
00:05:26,800 --> 00:05:31,680
return f root of left least the value of

143
00:05:29,120 --> 00:05:34,720
this sub tree as root of right the value

144
00:05:31,680 --> 00:05:37,520
of the sub 3 and then it's n otherwise

145
00:05:34,720 --> 00:05:39,759
it's all right it's all and f left or

146
00:05:37,520 --> 00:05:43,440
left is these three the value of this

147
00:05:39,759 --> 00:05:45,759
three the f to the right is the value of

148
00:05:43,440 --> 00:05:47,680
the right tree and then we're doing all

149
00:05:45,759 --> 00:05:49,680
and then that's it we go down uh the

150
00:05:47,680 --> 00:05:52,560
tree as different we can so look we're

151
00:05:49,680 --> 00:05:54,560
here so it's not this one it's it's not

152
00:05:52,560 --> 00:05:56,720
n it's this one so we first of all

153
00:05:54,560 --> 00:05:59,520
recall recursive we call this uh

154
00:05:56,720 --> 00:06:01,280
function f root left and root of right

155
00:05:59,520 --> 00:06:02,639
and then you will return the all of

156
00:06:01,280 --> 00:06:05,680
these two trees

157
00:06:02,639 --> 00:06:07,840
okay look f to the left

158
00:06:05,680 --> 00:06:11,759
is a leaf node then you just return true

159
00:06:07,840 --> 00:06:14,319
right f right is is a another sub tree

160
00:06:11,759 --> 00:06:17,919
it's not a leaf node it's a n okay it's

161
00:06:14,319 --> 00:06:20,720
an n and f root on left is this this bit

162
00:06:17,919 --> 00:06:22,960
which is again evaluated root of uh

163
00:06:20,720 --> 00:06:26,240
value which is fourth and then this is

164
00:06:22,960 --> 00:06:28,800
little a little rain which is the true

165
00:06:26,240 --> 00:06:31,840
fourth and fourth and true right

166
00:06:28,800 --> 00:06:33,759
is fourth right and then we go back we

167
00:06:31,840 --> 00:06:35,520
visit the trees

168
00:06:33,759 --> 00:06:37,520
from top down

169
00:06:35,520 --> 00:06:39,759
but when we reach the terminal nodes

170
00:06:37,520 --> 00:06:41,039
that determine the levels we evaluate

171
00:06:39,759 --> 00:06:43,919
the leaf nodes

172
00:06:41,039 --> 00:06:46,000
and we pass the values backwards

173
00:06:43,919 --> 00:06:49,120
backwards to the top so first of all we

174
00:06:46,000 --> 00:06:51,599
call this calling calling stack when we

175
00:06:49,120 --> 00:06:53,919
evaluate the leaf node we pass back okay

176
00:06:51,599 --> 00:06:56,000
so this is recursion we can do it in the

177
00:06:53,919 --> 00:06:57,599
iterative as well using the step okay

178
00:06:56,000 --> 00:06:58,639
okay so what have you learned today what

179
00:06:57,599 --> 00:06:59,919
have you learned

180
00:06:58,639 --> 00:07:03,840
about

181
00:06:59,919 --> 00:07:03,840
everything what have you learned today

182
00:07:07,759 --> 00:07:10,560
okay so we're given a tuning tree which

183
00:07:09,919 --> 00:07:12,319
is

184
00:07:10,560 --> 00:07:13,759
pudding yeah putting true or false yes

185
00:07:12,319 --> 00:07:15,680
or no

186
00:07:13,759 --> 00:07:18,479
okay so what's pulling what's what's

187
00:07:15,680 --> 00:07:19,240
this meaning in english put in

188
00:07:18,479 --> 00:07:20,720
the

189
00:07:19,240 --> 00:07:22,319
[Music]

190
00:07:20,720 --> 00:07:23,520
flower

191
00:07:22,319 --> 00:07:24,960
flower

192
00:07:23,520 --> 00:07:26,319
no

193
00:07:24,960 --> 00:07:27,120
i don't know

194
00:07:26,319 --> 00:07:28,400
so

195
00:07:27,120 --> 00:07:31,599
it's a

196
00:07:28,400 --> 00:07:33,440
it's a thing that you could

197
00:07:31,599 --> 00:07:35,840
that you could blow

198
00:07:33,440 --> 00:07:38,319
okay okay so pulling you can think of it

199
00:07:35,840 --> 00:07:39,120
as two and fours two values two two

200
00:07:38,319 --> 00:07:42,960
sides

201
00:07:39,120 --> 00:07:45,840
the coin okay two sides you flip a coin

202
00:07:42,960 --> 00:07:47,919
that's a boolean value the heads of tail

203
00:07:45,840 --> 00:07:49,840
true or false yes or no

204
00:07:47,919 --> 00:07:51,599
kicker cross

205
00:07:49,840 --> 00:07:54,319
heads are test

206
00:07:51,599 --> 00:07:56,720
pulling so look this is a pulling tree

207
00:07:54,319 --> 00:07:58,879
the leaf nodes which do not have any kit

208
00:07:56,720 --> 00:08:01,440
which is the pulling value two or four

209
00:07:58,879 --> 00:08:04,319
of that and the other intermediate nodes

210
00:08:01,440 --> 00:08:07,280
which are putting putting operators

211
00:08:04,319 --> 00:08:09,360
putting operators there

212
00:08:07,280 --> 00:08:11,120
we are having two here so which is all

213
00:08:09,360 --> 00:08:13,599
oh it means that one of them is okay

214
00:08:11,120 --> 00:08:15,280
then it's okay and it means the both

215
00:08:13,599 --> 00:08:17,280
needs to be okay

216
00:08:15,280 --> 00:08:18,879
both needs to be true in order for the

217
00:08:17,280 --> 00:08:21,199
result to be true and we're going to

218
00:08:18,879 --> 00:08:22,560
evaluate this this boundary okay and

219
00:08:21,199 --> 00:08:25,039
then what kind of a government are we

220
00:08:22,560 --> 00:08:26,800
using today

221
00:08:25,039 --> 00:08:29,199
research we're using the data search

222
00:08:26,800 --> 00:08:30,639
today okay and then using the

223
00:08:29,199 --> 00:08:31,840
there are two ways to implement the

224
00:08:30,639 --> 00:08:34,479
different search we're using the

225
00:08:31,840 --> 00:08:35,279
recursion instead of uh using a stack

226
00:08:34,479 --> 00:08:37,440
okay

227
00:08:35,279 --> 00:08:39,599
the time context is on we are traversing

228
00:08:37,440 --> 00:08:42,399
the tree now right now each node is

229
00:08:39,599 --> 00:08:44,080
visited once so the time to next is over

230
00:08:42,399 --> 00:08:46,399
the space convex this one because we're

231
00:08:44,080 --> 00:08:50,360
using that because

232
00:08:46,399 --> 00:08:50,360
okay that's it for today bye

