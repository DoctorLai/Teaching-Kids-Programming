1
00:00:00,399 --> 00:00:03,189

hey hello hello

2
00:00:03,189 --> 00:00:03,199
hey hello hello
 

3
00:00:03,199 --> 00:00:05,910
hey hello hello
how are you today everything ryan good

4
00:00:05,910 --> 00:00:05,920
how are you today everything ryan good
 

5
00:00:05,920 --> 00:00:07,749
how are you today everything ryan good
good

6
00:00:07,749 --> 00:00:07,759
good
 

7
00:00:07,759 --> 00:00:11,270
good
okay so today we talk about um

8
00:00:11,270 --> 00:00:11,280
okay so today we talk about um
 

9
00:00:11,280 --> 00:00:14,629
okay so today we talk about um
checking if two trees have similar

10
00:00:14,629 --> 00:00:14,639
checking if two trees have similar
 

11
00:00:14,639 --> 00:00:17,349
checking if two trees have similar
leaves so for example like these three

12
00:00:17,349 --> 00:00:17,359
leaves so for example like these three
 

13
00:00:17,359 --> 00:00:18,710
leaves so for example like these three
one

14
00:00:18,710 --> 00:00:18,720
one
 

15
00:00:18,720 --> 00:00:22,870
one
two three four

16
00:00:22,870 --> 00:00:22,880
two three four
 

17
00:00:22,880 --> 00:00:26,230
two three four
five and then these three

18
00:00:26,230 --> 00:00:26,240
five and then these three
 

19
00:00:26,240 --> 00:00:32,630
five and then these three
one four

20
00:00:32,630 --> 00:00:32,640

 

21
00:00:32,640 --> 00:00:37,750

two three

22
00:00:37,750 --> 00:00:37,760

 

23
00:00:37,760 --> 00:00:41,510

four uh

24
00:00:41,510 --> 00:00:41,520
four uh
 

25
00:00:41,520 --> 00:00:46,229
four uh
okay maybe i i will do this

26
00:00:46,229 --> 00:00:46,239

 

27
00:00:46,239 --> 00:00:50,709

another one seven

28
00:00:50,709 --> 00:00:50,719

 

29
00:00:50,719 --> 00:00:56,830

and then

30
00:00:56,830 --> 00:00:56,840

 

31
00:00:56,840 --> 00:01:00,229

four seven

32
00:01:00,229 --> 00:01:00,239
four seven
 

33
00:01:00,239 --> 00:01:03,270
four seven
uh okay so there's a four here okay so

34
00:01:03,270 --> 00:01:03,280
uh okay so there's a four here okay so
 

35
00:01:03,280 --> 00:01:05,030
uh okay so there's a four here okay so
these will be

36
00:01:05,030 --> 00:01:05,040
these will be
 

37
00:01:05,040 --> 00:01:08,149
these will be
yeah just get rid of it okay so now

38
00:01:08,149 --> 00:01:08,159
yeah just get rid of it okay so now
 

39
00:01:08,159 --> 00:01:10,550
yeah just get rid of it okay so now
look the leaves what what are the leaves

40
00:01:10,550 --> 00:01:10,560
look the leaves what what are the leaves
 

41
00:01:10,560 --> 00:01:11,990
look the leaves what what are the leaves
of this binary tree

42
00:01:11,990 --> 00:01:12,000
of this binary tree
 

43
00:01:12,000 --> 00:01:15,990
of this binary tree
one two three four leaves these

44
00:01:15,990 --> 00:01:16,000
one two three four leaves these
 

45
00:01:16,000 --> 00:01:18,469
one two three four leaves these
three four seven three four seven three

46
00:01:18,469 --> 00:01:18,479
three four seven three four seven three
 

47
00:01:18,479 --> 00:01:20,870
three four seven three four seven three
four seven

48
00:01:20,870 --> 00:01:20,880
four seven
 

49
00:01:20,880 --> 00:01:23,270
four seven
what what are the leaves of this binary

50
00:01:23,270 --> 00:01:23,280
what what are the leaves of this binary
 

51
00:01:23,280 --> 00:01:24,149
what what are the leaves of this binary
four seven

52
00:01:24,149 --> 00:01:24,159
four seven
 

53
00:01:24,159 --> 00:01:28,149
four seven
three four seven okay so we return

54
00:01:28,149 --> 00:01:28,159
three four seven okay so we return
 

55
00:01:28,159 --> 00:01:30,789
three four seven okay so we return
two if there are leaves in the left to

56
00:01:30,789 --> 00:01:30,799
two if there are leaves in the left to
 

57
00:01:30,799 --> 00:01:32,870
two if there are leaves in the left to
the from left to the right order is

58
00:01:32,870 --> 00:01:32,880
the from left to the right order is
 

59
00:01:32,880 --> 00:01:36,149
the from left to the right order is
three four seven okay so if i have

60
00:01:36,149 --> 00:01:36,159
three four seven okay so if i have
 

61
00:01:36,159 --> 00:01:37,990
three four seven okay so if i have
another one like a

62
00:01:37,990 --> 00:01:38,000
another one like a
 

63
00:01:38,000 --> 00:01:39,749
another one like a
then this will return first because the

64
00:01:39,749 --> 00:01:39,759
then this will return first because the
 

65
00:01:39,759 --> 00:01:41,590
then this will return first because the
eight is also the leaf

66
00:01:41,590 --> 00:01:41,600
eight is also the leaf
 

67
00:01:41,600 --> 00:01:44,469
eight is also the leaf
okay so these are not equal so do you

68
00:01:44,469 --> 00:01:44,479
okay so these are not equal so do you
 

69
00:01:44,479 --> 00:01:46,149
okay so these are not equal so do you
understand the problem

70
00:01:46,149 --> 00:01:46,159
understand the problem
 

71
00:01:46,159 --> 00:01:49,749
understand the problem
ryan do you understand the problem right

72
00:01:49,749 --> 00:01:49,759
ryan do you understand the problem right
 

73
00:01:49,759 --> 00:01:51,990
ryan do you understand the problem right
you understand the problem yeah so any

74
00:01:51,990 --> 00:01:52,000
you understand the problem yeah so any
 

75
00:01:52,000 --> 00:01:53,190
you understand the problem yeah so any
ideas

76
00:01:53,190 --> 00:01:53,200
ideas
 

77
00:01:53,200 --> 00:01:56,789
ideas
any sauce yes check the leaves

78
00:01:56,789 --> 00:01:56,799
any sauce yes check the leaves
 

79
00:01:56,799 --> 00:01:59,270
any sauce yes check the leaves
yeah well we're done what we chuck just

80
00:01:59,270 --> 00:01:59,280
yeah well we're done what we chuck just
 

81
00:01:59,280 --> 00:02:00,550
yeah well we're done what we chuck just
chicken leaves

82
00:02:00,550 --> 00:02:00,560
chicken leaves
 

83
00:02:00,560 --> 00:02:03,749
chicken leaves
and how do we check the leaves

84
00:02:03,749 --> 00:02:03,759
and how do we check the leaves
 

85
00:02:03,759 --> 00:02:05,830
and how do we check the leaves
how do we how do we first of all how do

86
00:02:05,830 --> 00:02:05,840
how do we how do we first of all how do
 

87
00:02:05,840 --> 00:02:08,550
how do we how do we first of all how do
we check if the nut is a leaf

88
00:02:08,550 --> 00:02:08,560
we check if the nut is a leaf
 

89
00:02:08,560 --> 00:02:11,910
we check if the nut is a leaf
it has no children well yes

90
00:02:11,910 --> 00:02:11,920
it has no children well yes
 

91
00:02:11,920 --> 00:02:14,070
it has no children well yes
exactly it has no children if a note has

92
00:02:14,070 --> 00:02:14,080
exactly it has no children if a note has
 

93
00:02:14,080 --> 00:02:16,070
exactly it has no children if a note has
no children it's a leaf

94
00:02:16,070 --> 00:02:16,080
no children it's a leaf
 

95
00:02:16,080 --> 00:02:18,710
no children it's a leaf
all right yeah just remember the tree is

96
00:02:18,710 --> 00:02:18,720
all right yeah just remember the tree is
 

97
00:02:18,720 --> 00:02:20,309
all right yeah just remember the tree is
upside down in computer yeah

98
00:02:20,309 --> 00:02:20,319
upside down in computer yeah
 

99
00:02:20,319 --> 00:02:22,630
upside down in computer yeah
this is the loot but in the real life

100
00:02:22,630 --> 00:02:22,640
this is the loot but in the real life
 

101
00:02:22,640 --> 00:02:23,750
this is the loot but in the real life
the root is down

102
00:02:23,750 --> 00:02:23,760
the root is down
 

103
00:02:23,760 --> 00:02:26,470
the root is down
and the leaves yeah growing upwards but

104
00:02:26,470 --> 00:02:26,480
and the leaves yeah growing upwards but
 

105
00:02:26,480 --> 00:02:27,670
and the leaves yeah growing upwards but
in computers

106
00:02:27,670 --> 00:02:27,680
in computers
 

107
00:02:27,680 --> 00:02:30,470
in computers
the leaf the tree is growing downwards

108
00:02:30,470 --> 00:02:30,480
the leaf the tree is growing downwards
 

109
00:02:30,480 --> 00:02:31,990
the leaf the tree is growing downwards
okay so that's the dude

110
00:02:31,990 --> 00:02:32,000
okay so that's the dude
 

111
00:02:32,000 --> 00:02:33,910
okay so that's the dude
that's the leaves that's the branch

112
00:02:33,910 --> 00:02:33,920
that's the leaves that's the branch
 

113
00:02:33,920 --> 00:02:35,990
that's the leaves that's the branch
that's the trunk yeah

114
00:02:35,990 --> 00:02:36,000
that's the trunk yeah
 

115
00:02:36,000 --> 00:02:41,509
that's the trunk yeah
trunk trunk yeah trunks

116
00:02:41,509 --> 00:02:41,519

 

117
00:02:41,519 --> 00:02:43,830

okay so look you mentioned something

118
00:02:43,830 --> 00:02:43,840
okay so look you mentioned something
 

119
00:02:43,840 --> 00:02:45,190
okay so look you mentioned something
very important is

120
00:02:45,190 --> 00:02:45,200
very important is
 

121
00:02:45,200 --> 00:02:47,910
very important is
how we checking the leaf is that we

122
00:02:47,910 --> 00:02:47,920
how we checking the leaf is that we
 

123
00:02:47,920 --> 00:02:51,110
how we checking the leaf is that we
check even now has no does it have an

124
00:02:51,110 --> 00:02:51,120
check even now has no does it have an
 

125
00:02:51,120 --> 00:02:54,790
check even now has no does it have an
uh uh and in children if it doesn't have

126
00:02:54,790 --> 00:02:54,800
uh uh and in children if it doesn't have
 

127
00:02:54,800 --> 00:02:56,309
uh uh and in children if it doesn't have
any children so leave now

128
00:02:56,309 --> 00:02:56,319
any children so leave now
 

129
00:02:56,319 --> 00:02:59,350
any children so leave now
but another thing to

130
00:02:59,350 --> 00:02:59,360
but another thing to
 

131
00:02:59,360 --> 00:03:02,470
but another thing to
see here is that we need to

132
00:03:02,470 --> 00:03:02,480
see here is that we need to
 

133
00:03:02,480 --> 00:03:05,910
see here is that we need to
we need to record the

134
00:03:05,910 --> 00:03:05,920
we need to record the
 

135
00:03:05,920 --> 00:03:09,430
we need to record the
leaf notes from the left to right so

136
00:03:09,430 --> 00:03:09,440
leaf notes from the left to right so
 

137
00:03:09,440 --> 00:03:12,790
leaf notes from the left to right so
do you remember which uh how how are we

138
00:03:12,790 --> 00:03:12,800
do you remember which uh how how are we
 

139
00:03:12,800 --> 00:03:14,550
do you remember which uh how how are we
traveling the trees

140
00:03:14,550 --> 00:03:14,560
traveling the trees
 

141
00:03:14,560 --> 00:03:19,830
traveling the trees
usually which kind of um

142
00:03:19,830 --> 00:03:19,840
usually which kind of um
 

143
00:03:19,840 --> 00:03:23,270
usually which kind of um
breakfast professors yes exactly this is

144
00:03:23,270 --> 00:03:23,280
breakfast professors yes exactly this is
 

145
00:03:23,280 --> 00:03:24,070
breakfast professors yes exactly this is
travel from

146
00:03:24,070 --> 00:03:24,080
travel from
 

147
00:03:24,080 --> 00:03:26,630
travel from
level to level yeah and another one

148
00:03:26,630 --> 00:03:26,640
level to level yeah and another one
 

149
00:03:26,640 --> 00:03:28,149
level to level yeah and another one
compared to

150
00:03:28,149 --> 00:03:28,159
compared to
 

151
00:03:28,159 --> 00:03:30,710
compared to
where down yeah definitely search okay

152
00:03:30,710 --> 00:03:30,720
where down yeah definitely search okay
 

153
00:03:30,720 --> 00:03:32,630
where down yeah definitely search okay
okay so which one do you think is better

154
00:03:32,630 --> 00:03:32,640
okay so which one do you think is better
 

155
00:03:32,640 --> 00:03:36,630
okay so which one do you think is better
suited in this case why is that

156
00:03:36,630 --> 00:03:36,640
suited in this case why is that
 

157
00:03:36,640 --> 00:03:38,309
suited in this case why is that
yes you are right definitely search so

158
00:03:38,309 --> 00:03:38,319
yes you are right definitely search so
 

159
00:03:38,319 --> 00:03:39,670
yes you are right definitely search so
you will go

160
00:03:39,670 --> 00:03:39,680
you will go
 

161
00:03:39,680 --> 00:03:43,350
you will go
left yeah as as deep as we want and

162
00:03:43,350 --> 00:03:43,360
left yeah as as deep as we want and
 

163
00:03:43,360 --> 00:03:45,990
left yeah as as deep as we want and
until we meet the leaf node now we know

164
00:03:45,990 --> 00:03:46,000
until we meet the leaf node now we know
 

165
00:03:46,000 --> 00:03:46,470
until we meet the leaf node now we know
we

166
00:03:46,470 --> 00:03:46,480
we
 

167
00:03:46,480 --> 00:03:48,390
we
win the develop right and then we go

168
00:03:48,390 --> 00:03:48,400
win the develop right and then we go
 

169
00:03:48,400 --> 00:03:49,589
win the develop right and then we go
back

170
00:03:49,589 --> 00:03:49,599
back
 

171
00:03:49,599 --> 00:03:52,470
back
we find four yeah go back up and seven

172
00:03:52,470 --> 00:03:52,480
we find four yeah go back up and seven
 

173
00:03:52,480 --> 00:03:53,110
we find four yeah go back up and seven
yeah

174
00:03:53,110 --> 00:03:53,120
yeah
 

175
00:03:53,120 --> 00:03:55,110
yeah
this is the travel yeah and then this is

176
00:03:55,110 --> 00:03:55,120
this is the travel yeah and then this is
 

177
00:03:55,120 --> 00:03:57,030
this is the travel yeah and then this is
some so we first of all we need a

178
00:03:57,030 --> 00:03:57,040
some so we first of all we need a
 

179
00:03:57,040 --> 00:03:57,670
some so we first of all we need a
function

180
00:03:57,670 --> 00:03:57,680
function
 

181
00:03:57,680 --> 00:04:00,630
function
to travel a tree from the root and then

182
00:04:00,630 --> 00:04:00,640
to travel a tree from the root and then
 

183
00:04:00,640 --> 00:04:03,030
to travel a tree from the root and then
we record the leaves

184
00:04:03,030 --> 00:04:03,040
we record the leaves
 

185
00:04:03,040 --> 00:04:05,670
we record the leaves
as we do the traveling therefore search

186
00:04:05,670 --> 00:04:05,680
as we do the traveling therefore search
 

187
00:04:05,680 --> 00:04:06,390
as we do the traveling therefore search
right

188
00:04:06,390 --> 00:04:06,400
right
 

189
00:04:06,400 --> 00:04:09,589
right
and at last we just need to compare if

190
00:04:09,589 --> 00:04:09,599
and at last we just need to compare if
 

191
00:04:09,599 --> 00:04:11,030
and at last we just need to compare if
the both

192
00:04:11,030 --> 00:04:11,040
the both
 

193
00:04:11,040 --> 00:04:13,509
the both
definitions produce the same sequence

194
00:04:13,509 --> 00:04:13,519
definitions produce the same sequence
 

195
00:04:13,519 --> 00:04:14,550
definitions produce the same sequence
all right

196
00:04:14,550 --> 00:04:14,560
all right
 

197
00:04:14,560 --> 00:04:17,590
all right
yes okay let's write it we're done we're

198
00:04:17,590 --> 00:04:17,600
yes okay let's write it we're done we're
 

199
00:04:17,600 --> 00:04:17,990
yes okay let's write it we're done we're
done

200
00:04:17,990 --> 00:04:18,000
done
 

201
00:04:18,000 --> 00:04:21,270
done
it's the default search okay so first of

202
00:04:21,270 --> 00:04:21,280
it's the default search okay so first of
 

203
00:04:21,280 --> 00:04:22,790
it's the default search okay so first of
all we need to check

204
00:04:22,790 --> 00:04:22,800
all we need to check
 

205
00:04:22,800 --> 00:04:27,430
all we need to check
uh let's say same leaf okay same leaf

206
00:04:27,430 --> 00:04:27,440
uh let's say same leaf okay same leaf
 

207
00:04:27,440 --> 00:04:31,430
uh let's say same leaf okay same leaf
leaves plural yeah send this and then

208
00:04:31,430 --> 00:04:31,440
leaves plural yeah send this and then
 

209
00:04:31,440 --> 00:04:34,150
leaves plural yeah send this and then
let's do this a and b yeah so there are

210
00:04:34,150 --> 00:04:34,160
let's do this a and b yeah so there are
 

211
00:04:34,160 --> 00:04:35,350
let's do this a and b yeah so there are
two notes

212
00:04:35,350 --> 00:04:35,360
two notes
 

213
00:04:35,360 --> 00:04:38,390
two notes
two trees a and b okay two new blues

214
00:04:38,390 --> 00:04:38,400
two trees a and b okay two new blues
 

215
00:04:38,400 --> 00:04:41,030
two trees a and b okay two new blues
so we again we can have another another

216
00:04:41,030 --> 00:04:41,040
so we again we can have another another
 

217
00:04:41,040 --> 00:04:42,390
so we again we can have another another
function inside

218
00:04:42,390 --> 00:04:42,400
function inside
 

219
00:04:42,400 --> 00:04:45,909
function inside
okay look we call it that first search

220
00:04:45,909 --> 00:04:45,919
okay look we call it that first search
 

221
00:04:45,919 --> 00:04:49,350
okay look we call it that first search
ah yeah and then let's call it a root

222
00:04:49,350 --> 00:04:49,360
ah yeah and then let's call it a root
 

223
00:04:49,360 --> 00:04:51,270
ah yeah and then let's call it a root
and then can you tell me what i'm

224
00:04:51,270 --> 00:04:51,280
and then can you tell me what i'm
 

225
00:04:51,280 --> 00:04:52,950
and then can you tell me what i'm
missing

226
00:04:52,950 --> 00:04:52,960
missing
 

227
00:04:52,960 --> 00:04:57,670
missing
how many columns one how many columns

228
00:04:57,670 --> 00:04:57,680
how many columns one how many columns
 

229
00:04:57,680 --> 00:05:01,909
how many columns one how many columns
one two okay so look

230
00:05:01,909 --> 00:05:01,919
one two okay so look
 

231
00:05:01,919 --> 00:05:05,430
one two okay so look
if root yeah you know this before yeah

232
00:05:05,430 --> 00:05:05,440
if root yeah you know this before yeah
 

233
00:05:05,440 --> 00:05:15,430
if root yeah you know this before yeah
it's long yeah then we should return

234
00:05:15,430 --> 00:05:15,440

 

235
00:05:15,440 --> 00:05:17,749

we want to return an empty bracket which

236
00:05:17,749 --> 00:05:17,759
we want to return an empty bracket which
 

237
00:05:17,759 --> 00:05:19,270
we want to return an empty bracket which
is empty list

238
00:05:19,270 --> 00:05:19,280
is empty list
 

239
00:05:19,280 --> 00:05:21,270
is empty list
i'll tell you what why is empty this

240
00:05:21,270 --> 00:05:21,280
i'll tell you what why is empty this
 

241
00:05:21,280 --> 00:05:23,590
i'll tell you what why is empty this
okay so if it's not

242
00:05:23,590 --> 00:05:23,600
okay so if it's not
 

243
00:05:23,600 --> 00:05:25,909
okay so if it's not
any link let's try it yes it doesn't

244
00:05:25,909 --> 00:05:25,919
any link let's try it yes it doesn't
 

245
00:05:25,919 --> 00:05:26,950
any link let's try it yes it doesn't
have any leaves

246
00:05:26,950 --> 00:05:26,960
have any leaves
 

247
00:05:26,960 --> 00:05:29,189
have any leaves
empty so basically this function will

248
00:05:29,189 --> 00:05:29,199
empty so basically this function will
 

249
00:05:29,199 --> 00:05:30,150
empty so basically this function will
return

250
00:05:30,150 --> 00:05:30,160
return
 

251
00:05:30,160 --> 00:05:33,670
return
a list of leaves in the order right

252
00:05:33,670 --> 00:05:33,680
a list of leaves in the order right
 

253
00:05:33,680 --> 00:05:35,990
a list of leaves in the order right
and if it's non it means there's no

254
00:05:35,990 --> 00:05:36,000
and if it's non it means there's no
 

255
00:05:36,000 --> 00:05:37,430
and if it's non it means there's no
leaves in the bucket

256
00:05:37,430 --> 00:05:37,440
leaves in the bucket
 

257
00:05:37,440 --> 00:05:39,590
leaves in the bucket
you can say it's a bucket yeah [ __ ]

258
00:05:39,590 --> 00:05:39,600
you can say it's a bucket yeah [ __ ]
 

259
00:05:39,600 --> 00:05:40,950
you can say it's a bucket yeah [ __ ]
at least yeah

260
00:05:40,950 --> 00:05:40,960
at least yeah
 

261
00:05:40,960 --> 00:05:43,990
at least yeah
okay then if loot

262
00:05:43,990 --> 00:05:44,000
okay then if loot
 

263
00:05:44,000 --> 00:05:48,390
okay then if loot
dot left is noun

264
00:05:48,390 --> 00:05:48,400

 

265
00:05:48,400 --> 00:05:51,830

and

266
00:05:51,830 --> 00:05:51,840

 

267
00:05:51,840 --> 00:05:55,029

dot right is num

268
00:05:55,029 --> 00:05:55,039
dot right is num
 

269
00:05:55,039 --> 00:05:58,550
dot right is num
so what does it mean here what does this

270
00:05:58,550 --> 00:05:58,560
so what does it mean here what does this
 

271
00:05:58,560 --> 00:06:00,390
so what does it mean here what does this
mean

272
00:06:00,390 --> 00:06:00,400
mean
 

273
00:06:00,400 --> 00:06:03,270
mean
if looter left if this boot blue dot

274
00:06:03,270 --> 00:06:03,280
if looter left if this boot blue dot
 

275
00:06:03,280 --> 00:06:04,550
if looter left if this boot blue dot
left

276
00:06:04,550 --> 00:06:04,560
left
 

277
00:06:04,560 --> 00:06:06,710
left
is num and no right it's not what does

278
00:06:06,710 --> 00:06:06,720
is num and no right it's not what does
 

279
00:06:06,720 --> 00:06:10,150
is num and no right it's not what does
it mean

280
00:06:10,150 --> 00:06:10,160

 

281
00:06:10,160 --> 00:06:12,070

it's a leaf no yeah we're done if we

282
00:06:12,070 --> 00:06:12,080
it's a leaf no yeah we're done if we
 

283
00:06:12,080 --> 00:06:13,510
it's a leaf no yeah we're done if we
don't need to know then we

284
00:06:13,510 --> 00:06:13,520
don't need to know then we
 

285
00:06:13,520 --> 00:06:17,029
don't need to know then we
can yeah remember if it's

286
00:06:17,029 --> 00:06:17,039
can yeah remember if it's
 

287
00:06:17,039 --> 00:06:19,189
can yeah remember if it's
leave no we need to return a bucket with

288
00:06:19,189 --> 00:06:19,199
leave no we need to return a bucket with
 

289
00:06:19,199 --> 00:06:21,350
leave no we need to return a bucket with
a leaf with current leave

290
00:06:21,350 --> 00:06:21,360
a leaf with current leave
 

291
00:06:21,360 --> 00:06:24,629
a leaf with current leave
yeah yeah so this bracket

292
00:06:24,629 --> 00:06:24,639
yeah yeah so this bracket
 

293
00:06:24,639 --> 00:06:28,150
yeah yeah so this bracket
but loot loo value

294
00:06:28,150 --> 00:06:28,160
but loot loo value
 

295
00:06:28,160 --> 00:06:31,510
but loot loo value
yeah does it make sense yeah yeah

296
00:06:31,510 --> 00:06:31,520
yeah does it make sense yeah yeah
 

297
00:06:31,520 --> 00:06:34,790
yeah does it make sense yeah yeah
okay then now now we recursively we just

298
00:06:34,790 --> 00:06:34,800
okay then now now we recursively we just
 

299
00:06:34,800 --> 00:06:36,550
okay then now now we recursively we just
need to return

300
00:06:36,550 --> 00:06:36,560
need to return
 

301
00:06:36,560 --> 00:06:41,029
need to return
therefore search blue dot

302
00:06:41,029 --> 00:06:41,039
therefore search blue dot
 

303
00:06:41,039 --> 00:06:44,469
therefore search blue dot
left plus

304
00:06:44,469 --> 00:06:44,479
left plus
 

305
00:06:44,479 --> 00:06:47,510
left plus
different search one let me guess

306
00:06:47,510 --> 00:06:47,520
different search one let me guess
 

307
00:06:47,520 --> 00:06:49,670
different search one let me guess
we are detaining the left and the right

308
00:06:49,670 --> 00:06:49,680
we are detaining the left and the right
 

309
00:06:49,680 --> 00:06:50,950
we are detaining the left and the right
so what was it

310
00:06:50,950 --> 00:06:50,960
so what was it
 

311
00:06:50,960 --> 00:06:55,430
so what was it
right or right yeah

312
00:06:55,430 --> 00:06:55,440

 

313
00:06:55,440 --> 00:06:58,230

so does it make sense if if it's not a

314
00:06:58,230 --> 00:06:58,240
so does it make sense if if it's not a
 

315
00:06:58,240 --> 00:06:59,510
so does it make sense if if it's not a
leaf now

316
00:06:59,510 --> 00:06:59,520
leaf now
 

317
00:06:59,520 --> 00:07:02,710
leaf now
if this if this is not leaf load yeah

318
00:07:02,710 --> 00:07:02,720
if this if this is not leaf load yeah
 

319
00:07:02,720 --> 00:07:05,270
if this if this is not leaf load yeah
so the final sequence will be the leaf

320
00:07:05,270 --> 00:07:05,280
so the final sequence will be the leaf
 

321
00:07:05,280 --> 00:07:06,790
so the final sequence will be the leaf
nuts in this bucket

322
00:07:06,790 --> 00:07:06,800
nuts in this bucket
 

323
00:07:06,800 --> 00:07:09,270
nuts in this bucket
in this tree plus the definite of on the

324
00:07:09,270 --> 00:07:09,280
in this tree plus the definite of on the
 

325
00:07:09,280 --> 00:07:09,990
in this tree plus the definite of on the
right tree

326
00:07:09,990 --> 00:07:10,000
right tree
 

327
00:07:10,000 --> 00:07:12,710
right tree
so put it together all right yeah let's

328
00:07:12,710 --> 00:07:12,720
so put it together all right yeah let's
 

329
00:07:12,720 --> 00:07:13,990
so put it together all right yeah let's
go to the first stage

330
00:07:13,990 --> 00:07:14,000
go to the first stage
 

331
00:07:14,000 --> 00:07:16,629
go to the first stage
and here if we want to compare if two

332
00:07:16,629 --> 00:07:16,639
and here if we want to compare if two
 

333
00:07:16,639 --> 00:07:18,469
and here if we want to compare if two
are the same so

334
00:07:18,469 --> 00:07:18,479
are the same so
 

335
00:07:18,479 --> 00:07:21,830
are the same so
return y can you can you guess

336
00:07:21,830 --> 00:07:21,840
return y can you can you guess
 

337
00:07:21,840 --> 00:07:25,270
return y can you can you guess
we have this function so therefore

338
00:07:25,270 --> 00:07:25,280
we have this function so therefore
 

339
00:07:25,280 --> 00:07:29,350
we have this function so therefore
search a or this is the

340
00:07:29,350 --> 00:07:29,360
search a or this is the
 

341
00:07:29,360 --> 00:07:32,390
search a or this is the
leaf order of the tree a

342
00:07:32,390 --> 00:07:32,400
leaf order of the tree a
 

343
00:07:32,400 --> 00:07:34,230
leaf order of the tree a
we want to compare it to the same as the

344
00:07:34,230 --> 00:07:34,240
we want to compare it to the same as the
 

345
00:07:34,240 --> 00:07:36,070
we want to compare it to the same as the
definition of loot

346
00:07:36,070 --> 00:07:36,080
definition of loot
 

347
00:07:36,080 --> 00:07:38,230
definition of loot
another tree so what is what should i

348
00:07:38,230 --> 00:07:38,240
another tree so what is what should i
 

349
00:07:38,240 --> 00:07:39,909
another tree so what is what should i
write here

350
00:07:39,909 --> 00:07:39,919
write here
 

351
00:07:39,919 --> 00:07:42,309
write here
something about b yes something about b

352
00:07:42,309 --> 00:07:42,319
something about b yes something about b
 

353
00:07:42,319 --> 00:07:44,950
something about b yes something about b
what what about b

354
00:07:44,950 --> 00:07:44,960
what what about b
 

355
00:07:44,960 --> 00:07:47,990
what what about b
that's a search b huh yeah and that's

356
00:07:47,990 --> 00:07:48,000
that's a search b huh yeah and that's
 

357
00:07:48,000 --> 00:07:49,430
that's a search b huh yeah and that's
what search b

358
00:07:49,430 --> 00:07:49,440
what search b
 

359
00:07:49,440 --> 00:07:53,110
what search b
so what should i put here equal

360
00:07:53,110 --> 00:07:53,120
so what should i put here equal
 

361
00:07:53,120 --> 00:07:56,629
so what should i put here equal
how many equals two yes well done wow be

362
00:07:56,629 --> 00:07:56,639
how many equals two yes well done wow be
 

363
00:07:56,639 --> 00:07:58,309
how many equals two yes well done wow be
confident come on you're right

364
00:07:58,309 --> 00:07:58,319
confident come on you're right
 

365
00:07:58,319 --> 00:08:00,469
confident come on you're right
yeah it's too too confident it doesn't

366
00:08:00,469 --> 00:08:00,479
yeah it's too too confident it doesn't
 

367
00:08:00,479 --> 00:08:01,749
yeah it's too too confident it doesn't
make sense

368
00:08:01,749 --> 00:08:01,759
make sense
 

369
00:08:01,759 --> 00:08:04,790
make sense
so look this function we define to

370
00:08:04,790 --> 00:08:04,800
so look this function we define to
 

371
00:08:04,800 --> 00:08:06,390
so look this function we define to
return

372
00:08:06,390 --> 00:08:06,400
return
 

373
00:08:06,400 --> 00:08:10,070
return
the to previously we have 1 3 4 yeah

374
00:08:10,070 --> 00:08:10,080
the to previously we have 1 3 4 yeah
 

375
00:08:10,080 --> 00:08:14,550
the to previously we have 1 3 4 yeah
yeah 134 so one maybe

376
00:08:14,550 --> 00:08:14,560
yeah 134 so one maybe
 

377
00:08:14,560 --> 00:08:17,830
yeah 134 so one maybe
uh three uh maybe here

378
00:08:17,830 --> 00:08:17,840
uh three uh maybe here
 

379
00:08:17,840 --> 00:08:21,110
uh three uh maybe here
three four yeah yeah yes so these return

380
00:08:21,110 --> 00:08:21,120
three four yeah yeah yes so these return
 

381
00:08:21,120 --> 00:08:22,390
three four yeah yeah yes so these return
one three four yeah

382
00:08:22,390 --> 00:08:22,400
one three four yeah
 

383
00:08:22,400 --> 00:08:24,710
one three four yeah
yeah and then another three different

384
00:08:24,710 --> 00:08:24,720
yeah and then another three different
 

385
00:08:24,720 --> 00:08:25,909
yeah and then another three different
different structure but

386
00:08:25,909 --> 00:08:25,919
different structure but
 

387
00:08:25,919 --> 00:08:28,309
different structure but
also return once before then we compare

388
00:08:28,309 --> 00:08:28,319
also return once before then we compare
 

389
00:08:28,319 --> 00:08:29,270
also return once before then we compare
if it's present

390
00:08:29,270 --> 00:08:29,280
if it's present
 

391
00:08:29,280 --> 00:08:31,909
if it's present
so at least look if a load isn't lung

392
00:08:31,909 --> 00:08:31,919
so at least look if a load isn't lung
 

393
00:08:31,919 --> 00:08:33,829
so at least look if a load isn't lung
return an empty bucket with no leaves

394
00:08:33,829 --> 00:08:33,839
return an empty bucket with no leaves
 

395
00:08:33,839 --> 00:08:34,389
return an empty bucket with no leaves
yeah because

396
00:08:34,389 --> 00:08:34,399
yeah because
 

397
00:08:34,399 --> 00:08:37,190
yeah because
if it's nothing it's air it's not a leaf

398
00:08:37,190 --> 00:08:37,200
if it's nothing it's air it's not a leaf
 

399
00:08:37,200 --> 00:08:37,909
if it's nothing it's air it's not a leaf
if no

400
00:08:37,909 --> 00:08:37,919
if no
 

401
00:08:37,919 --> 00:08:39,909
if no
left is numb and neutral rudolph is now

402
00:08:39,909 --> 00:08:39,919
left is numb and neutral rudolph is now
 

403
00:08:39,919 --> 00:08:41,350
left is numb and neutral rudolph is now
it means that the current leaf

404
00:08:41,350 --> 00:08:41,360
it means that the current leaf
 

405
00:08:41,360 --> 00:08:43,589
it means that the current leaf
cardinal is a different note then great

406
00:08:43,589 --> 00:08:43,599
cardinal is a different note then great
 

407
00:08:43,599 --> 00:08:46,070
cardinal is a different note then great
we just return a bucket with itself

408
00:08:46,070 --> 00:08:46,080
we just return a bucket with itself
 

409
00:08:46,080 --> 00:08:50,150
we just return a bucket with itself
otherwise this is not a leaf note right

410
00:08:50,150 --> 00:08:50,160
otherwise this is not a leaf note right
 

411
00:08:50,160 --> 00:08:52,150
otherwise this is not a leaf note right
and then we just need to recursively

412
00:08:52,150 --> 00:08:52,160
and then we just need to recursively
 

413
00:08:52,160 --> 00:08:53,670
and then we just need to recursively
travel on the left tree and the right

414
00:08:53,670 --> 00:08:53,680
travel on the left tree and the right
 

415
00:08:53,680 --> 00:08:54,389
travel on the left tree and the right
tree

416
00:08:54,389 --> 00:08:54,399
tree
 

417
00:08:54,399 --> 00:08:56,630
tree
because the left of tree and red we know

418
00:08:56,630 --> 00:08:56,640
because the left of tree and red we know
 

419
00:08:56,640 --> 00:08:58,230
because the left of tree and red we know
how to solve it we already

420
00:08:58,230 --> 00:08:58,240
how to solve it we already
 

421
00:08:58,240 --> 00:09:00,150
how to solve it we already
know it and then we after we get a

422
00:09:00,150 --> 00:09:00,160
know it and then we after we get a
 

423
00:09:00,160 --> 00:09:02,230
know it and then we after we get a
result we put it together

424
00:09:02,230 --> 00:09:02,240
result we put it together
 

425
00:09:02,240 --> 00:09:06,829
result we put it together
yeah so dfs root on left is one right

426
00:09:06,829 --> 00:09:06,839
yeah so dfs root on left is one right
 

427
00:09:06,839 --> 00:09:10,070
yeah so dfs root on left is one right
yeah and then dfs

428
00:09:10,070 --> 00:09:10,080
yeah and then dfs
 

429
00:09:10,080 --> 00:09:13,110
yeah and then dfs
do the right is three and four so plus

430
00:09:13,110 --> 00:09:13,120
do the right is three and four so plus
 

431
00:09:13,120 --> 00:09:15,829
do the right is three and four so plus
three and four so this is at least yeah

432
00:09:15,829 --> 00:09:15,839
three and four so this is at least yeah
 

433
00:09:15,839 --> 00:09:17,990
three and four so this is at least yeah
a bucket with the list one plus a

434
00:09:17,990 --> 00:09:18,000
a bucket with the list one plus a
 

435
00:09:18,000 --> 00:09:20,150
a bucket with the list one plus a
bucket with this three and four what

436
00:09:20,150 --> 00:09:20,160
bucket with this three and four what
 

437
00:09:20,160 --> 00:09:21,110
bucket with this three and four what
does it equal

438
00:09:21,110 --> 00:09:21,120
does it equal
 

439
00:09:21,120 --> 00:09:24,630
does it equal
a bucket with one three four yeah

440
00:09:24,630 --> 00:09:24,640
a bucket with one three four yeah
 

441
00:09:24,640 --> 00:09:27,430
a bucket with one three four yeah
got it yes whether what's the term

442
00:09:27,430 --> 00:09:27,440
got it yes whether what's the term
 

443
00:09:27,440 --> 00:09:29,990
got it yes whether what's the term
complexity

444
00:09:29,990 --> 00:09:30,000
complexity
 

445
00:09:30,000 --> 00:09:33,190
complexity
[Music]

446
00:09:33,190 --> 00:09:33,200
[Music]
 

447
00:09:33,200 --> 00:09:35,829
[Music]
guess if if there are n number of nodes

448
00:09:35,829 --> 00:09:35,839
guess if if there are n number of nodes
 

449
00:09:35,839 --> 00:09:36,870
guess if if there are n number of nodes
in the root a

450
00:09:36,870 --> 00:09:36,880
in the root a
 

451
00:09:36,880 --> 00:09:39,590
in the root a
and m number of nodes in the root b so

452
00:09:39,590 --> 00:09:39,600
and m number of nodes in the root b so
 

453
00:09:39,600 --> 00:09:43,750
and m number of nodes in the root b so
what's the term complexity

454
00:09:43,750 --> 00:09:43,760

 

455
00:09:43,760 --> 00:09:45,590

yeah we're done and what's the space

456
00:09:45,590 --> 00:09:45,600
yeah we're done and what's the space
 

457
00:09:45,600 --> 00:09:47,430
yeah we're done and what's the space
complexity let's say yeah

458
00:09:47,430 --> 00:09:47,440
complexity let's say yeah
 

459
00:09:47,440 --> 00:09:50,470
complexity let's say yeah
yeah so why is it oh n plus n because we

460
00:09:50,470 --> 00:09:50,480
yeah so why is it oh n plus n because we
 

461
00:09:50,480 --> 00:09:51,670
yeah so why is it oh n plus n because we
need to travel

462
00:09:51,670 --> 00:09:51,680
need to travel
 

463
00:09:51,680 --> 00:09:55,269
need to travel
the the all the end nodes in the in

464
00:09:55,269 --> 00:09:55,279
the the all the end nodes in the in
 

465
00:09:55,279 --> 00:09:57,590
the the all the end nodes in the in
one tree and the m nodes in another tree

466
00:09:57,590 --> 00:09:57,600
one tree and the m nodes in another tree
 

467
00:09:57,600 --> 00:09:58,470
one tree and the m nodes in another tree
yes

468
00:09:58,470 --> 00:09:58,480
yes
 

469
00:09:58,480 --> 00:10:02,069
yes
yes okay yes okay close your eyes

470
00:10:02,069 --> 00:10:02,079
yes okay yes okay close your eyes
 

471
00:10:02,079 --> 00:10:06,470
yes okay yes okay close your eyes
close your eyes hmm

472
00:10:06,470 --> 00:10:06,480

 

473
00:10:06,480 --> 00:10:09,670

i'm going to erase this

474
00:10:09,670 --> 00:10:09,680
i'm going to erase this
 

475
00:10:09,680 --> 00:10:13,190
i'm going to erase this
right come on return something yeah if

476
00:10:13,190 --> 00:10:13,200
right come on return something yeah if
 

477
00:10:13,200 --> 00:10:16,310
right come on return something yeah if
you come along is the leaf node what

478
00:10:16,310 --> 00:10:16,320
you come along is the leaf node what
 

479
00:10:16,320 --> 00:10:19,670
you come along is the leaf node what
will return if current this is the

480
00:10:19,670 --> 00:10:19,680
will return if current this is the
 

481
00:10:19,680 --> 00:10:22,230
will return if current this is the
the current is the leaf now and then

482
00:10:22,230 --> 00:10:22,240
the current is the leaf now and then
 

483
00:10:22,240 --> 00:10:23,910
the current is the leaf now and then
remember we want to return the bucket

484
00:10:23,910 --> 00:10:23,920
remember we want to return the bucket
 

485
00:10:23,920 --> 00:10:25,829
remember we want to return the bucket
with the current node

486
00:10:25,829 --> 00:10:25,839
with the current node
 

487
00:10:25,839 --> 00:10:29,190
with the current node
what does that mean return it just lay

488
00:10:29,190 --> 00:10:29,200
what does that mean return it just lay
 

489
00:10:29,200 --> 00:10:30,230
what does that mean return it just lay
it down return

490
00:10:30,230 --> 00:10:30,240
it down return
 

491
00:10:30,240 --> 00:10:33,590
it down return
okay return but yeah we're down if we

492
00:10:33,590 --> 00:10:33,600
okay return but yeah we're down if we
 

493
00:10:33,600 --> 00:10:35,509
okay return but yeah we're down if we
current note is the leaf node

494
00:10:35,509 --> 00:10:35,519
current note is the leaf node
 

495
00:10:35,519 --> 00:10:40,230
current note is the leaf node
yeah yeah i don't know is knee flow

496
00:10:40,230 --> 00:10:40,240
yeah yeah i don't know is knee flow
 

497
00:10:40,240 --> 00:10:43,670
yeah yeah i don't know is knee flow
right are you okay and bracket

498
00:10:43,670 --> 00:10:43,680
right are you okay and bracket
 

499
00:10:43,680 --> 00:10:46,949
right are you okay and bracket
bracket if we can't know it's the leaf

500
00:10:46,949 --> 00:10:46,959
bracket if we can't know it's the leaf
 

501
00:10:46,959 --> 00:10:47,590
bracket if we can't know it's the leaf
no like

502
00:10:47,590 --> 00:10:47,600
no like
 

503
00:10:47,600 --> 00:10:50,550
no like
one yeah and we want to return the leaf

504
00:10:50,550 --> 00:10:50,560
one yeah and we want to return the leaf
 

505
00:10:50,560 --> 00:10:51,509
one yeah and we want to return the leaf
node which is one

506
00:10:51,509 --> 00:10:51,519
node which is one
 

507
00:10:51,519 --> 00:10:55,590
node which is one
yeah so what do we want to put inside

508
00:10:55,590 --> 00:10:55,600
yeah so what do we want to put inside
 

509
00:10:55,600 --> 00:10:58,630
yeah so what do we want to put inside
the value of the node so what's the low

510
00:10:58,630 --> 00:10:58,640
the value of the node so what's the low
 

511
00:10:58,640 --> 00:11:00,470
the value of the node so what's the low
dot value yeah yeah

512
00:11:00,470 --> 00:11:00,480
dot value yeah yeah
 

513
00:11:00,480 --> 00:11:04,710
dot value yeah yeah
yeah you can do it look loose already

514
00:11:04,710 --> 00:11:04,720
yeah you can do it look loose already
 

515
00:11:04,720 --> 00:11:07,509
yeah you can do it look loose already
and then we're done yes that's what we

516
00:11:07,509 --> 00:11:07,519
and then we're done yes that's what we
 

517
00:11:07,519 --> 00:11:09,350
and then we're done yes that's what we
want okay

518
00:11:09,350 --> 00:11:09,360
want okay
 

519
00:11:09,360 --> 00:11:13,190
want okay
any any questions no okay so let's

520
00:11:13,190 --> 00:11:13,200
any any questions no okay so let's
 

521
00:11:13,200 --> 00:11:15,829
any any questions no okay so let's
say bye bye to people i see you tomorrow

522
00:11:15,829 --> 00:11:15,839
say bye bye to people i see you tomorrow
 

523
00:11:15,839 --> 00:11:17,030
say bye bye to people i see you tomorrow
blah blah blah

524
00:11:17,030 --> 00:11:17,040
blah blah blah
 

525
00:11:17,040 --> 00:11:19,710
blah blah blah
blah blah blah okay bye-bye see you

526
00:11:19,710 --> 00:11:19,720
blah blah blah okay bye-bye see you
 

527
00:11:19,720 --> 00:11:22,720
blah blah blah okay bye-bye see you
tomorrow

