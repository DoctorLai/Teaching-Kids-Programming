1
00:00:00,480 --> 00:00:03,120
hello mister mister right now you're

2
00:00:02,080 --> 00:00:07,279
right

3
00:00:03,120 --> 00:00:08,960
okay so look you know the backscape uh

4
00:00:07,279 --> 00:00:11,360
key on the keyboard right what does it

5
00:00:08,960 --> 00:00:13,440
do it deletes the

6
00:00:11,360 --> 00:00:15,759
last character the

7
00:00:13,440 --> 00:00:18,080
latest character

8
00:00:15,759 --> 00:00:19,920
it deletes the character before the you

9
00:00:18,080 --> 00:00:21,600
know before the blinking

10
00:00:19,920 --> 00:00:23,439
cursor yeah

11
00:00:21,600 --> 00:00:24,480
so let's say we are given this string a

12
00:00:23,439 --> 00:00:26,720
b c

13
00:00:24,480 --> 00:00:29,679
and then there's a lower

14
00:00:26,720 --> 00:00:31,599
smaller and minus okay so that's smaller

15
00:00:29,679 --> 00:00:34,480
and minus these two characters together

16
00:00:31,599 --> 00:00:37,040
means uh we are pressing that backscape

17
00:00:34,480 --> 00:00:40,719
so what do we get what do we get as the

18
00:00:37,040 --> 00:00:41,600
final string ryan array come on anybody

19
00:00:40,719 --> 00:00:44,719
ryan

20
00:00:41,600 --> 00:00:46,559
we get a b a b okay

21
00:00:44,719 --> 00:00:50,079
that's very good let me get another one

22
00:00:46,559 --> 00:00:50,079
which is more challenging okay

23
00:00:50,399 --> 00:00:54,879
i bet it's not

24
00:00:52,480 --> 00:00:58,960
okay so what's this what do we have

25
00:00:54,879 --> 00:00:58,960
a b best game a b basket

26
00:01:06,479 --> 00:01:10,840
nothing nothing how do we even count how

27
00:01:09,040 --> 00:01:13,280
do you even yeah that's

28
00:01:10,840 --> 00:01:15,119
nothing step by step

29
00:01:13,280 --> 00:01:17,119
yes

30
00:01:15,119 --> 00:01:18,880
and then there are three boxes and

31
00:01:17,119 --> 00:01:21,280
they're three letters so

32
00:01:18,880 --> 00:01:23,119
look one two three four and then one two

33
00:01:21,280 --> 00:01:24,840
three four so we have four keys and

34
00:01:23,119 --> 00:01:28,479
we're here that's very good

35
00:01:24,840 --> 00:01:29,360
so so you have any questions flat toilet

36
00:01:28,479 --> 00:01:33,840
yeah

37
00:01:29,360 --> 00:01:36,000
yes i need that toilet okay

38
00:01:33,840 --> 00:01:37,840
what is the back spaces at the front

39
00:01:36,000 --> 00:01:39,520
well that's a very good question what if

40
00:01:37,840 --> 00:01:40,159
we have a backscape in the front and

41
00:01:39,520 --> 00:01:41,680
then

42
00:01:40,159 --> 00:01:45,040
there's nothing that's a very special

43
00:01:41,680 --> 00:01:45,759
case okay so like that if not

44
00:01:45,040 --> 00:01:47,439
so

45
00:01:45,759 --> 00:01:49,600
what kind of data structure can we use

46
00:01:47,439 --> 00:01:51,920
to do this i mean

47
00:01:49,600 --> 00:01:53,680
yes yeah exactly how do we do this look

48
00:01:51,920 --> 00:01:56,000
for example we're taking this one a

49
00:01:53,680 --> 00:01:58,719
stack a b c

50
00:01:56,000 --> 00:02:01,280
so what's that first thing first and

51
00:01:58,719 --> 00:02:02,640
last step yeah no like like this okay so

52
00:02:01,280 --> 00:02:05,439
a

53
00:02:02,640 --> 00:02:07,439
b for the b plus c okay then we have a

54
00:02:05,439 --> 00:02:10,000
best game so what do we do we take the

55
00:02:07,439 --> 00:02:11,680
one out of our stack yeah so that's what

56
00:02:10,000 --> 00:02:13,520
we have a b

57
00:02:11,680 --> 00:02:15,680
okay then we join this

58
00:02:13,520 --> 00:02:16,959
we join the journal stack right so

59
00:02:15,680 --> 00:02:18,000
that's what we got

60
00:02:16,959 --> 00:02:20,480
okay

61
00:02:18,000 --> 00:02:22,000
so eric when we have uh when we have a

62
00:02:20,480 --> 00:02:24,239
back scale in the front we just do

63
00:02:22,000 --> 00:02:26,160
nothing okay okay so let's quickly write

64
00:02:24,239 --> 00:02:27,680
this okay

65
00:02:26,160 --> 00:02:30,160
okay

66
00:02:27,680 --> 00:02:33,200
so we start using the stack we can we

67
00:02:30,160 --> 00:02:36,239
can do this using the step easily

68
00:02:33,200 --> 00:02:38,480
define let's say that we have this text

69
00:02:36,239 --> 00:02:41,120
editor

70
00:02:38,480 --> 00:02:43,519
and we have this string so

71
00:02:41,120 --> 00:02:44,400
we have a stack answer equals empty

72
00:02:43,519 --> 00:02:47,200
stack

73
00:02:44,400 --> 00:02:48,239
then we have we need to know the length

74
00:02:47,200 --> 00:02:49,120
okay

75
00:02:48,239 --> 00:02:51,519
okay

76
00:02:49,120 --> 00:02:52,640
so now what do we do so we just go

77
00:02:51,519 --> 00:02:54,000
through

78
00:02:52,640 --> 00:02:56,239
so for

79
00:02:54,000 --> 00:02:57,760
eric went for i

80
00:02:56,239 --> 00:03:01,519
in

81
00:02:57,760 --> 00:03:02,959
he was in range

82
00:03:01,519 --> 00:03:06,000
n right

83
00:03:02,959 --> 00:03:08,800
so if if i is bigger than if it's on the

84
00:03:06,000 --> 00:03:10,080
second character then we can check n

85
00:03:08,800 --> 00:03:12,640
as i

86
00:03:10,080 --> 00:03:13,760
equal equal

87
00:03:12,640 --> 00:03:15,040
minus

88
00:03:13,760 --> 00:03:18,800
and

89
00:03:15,040 --> 00:03:20,560
s i minus 1 the previous character is is

90
00:03:18,800 --> 00:03:22,080
more small yeah

91
00:03:20,560 --> 00:03:24,720
well how do you call this what do you

92
00:03:22,080 --> 00:03:26,080
call it what what do you call this

93
00:03:24,720 --> 00:03:27,360
uh

94
00:03:26,080 --> 00:03:28,560
great

95
00:03:27,360 --> 00:03:31,599
greater than

96
00:03:28,560 --> 00:03:35,200
less than less than less than

97
00:03:31,599 --> 00:03:38,000
then what do we do so we

98
00:03:35,200 --> 00:03:38,000
uh pegman

99
00:03:40,180 --> 00:03:44,480
[Music]

100
00:03:42,480 --> 00:03:47,200
i see i see so look

101
00:03:44,480 --> 00:03:48,799
what what is this chicken if it's uh if

102
00:03:47,200 --> 00:03:51,440
this character is a minor and the

103
00:03:48,799 --> 00:03:53,280
previous one is the less than that like

104
00:03:51,440 --> 00:03:54,560
makes a

105
00:03:53,280 --> 00:03:57,200
that makes a

106
00:03:54,560 --> 00:03:59,040
backstage then we need to do this answer

107
00:03:57,200 --> 00:04:02,000
dot pop

108
00:03:59,040 --> 00:04:04,959
but we also have to check if answer

109
00:04:02,000 --> 00:04:07,439
i need a toilet okay answer the pop

110
00:04:04,959 --> 00:04:10,720
right next to that i'm going to explain

111
00:04:07,439 --> 00:04:10,720
this later okay ass

112
00:04:11,200 --> 00:04:14,070
and

113
00:04:12,560 --> 00:04:17,120
a pen

114
00:04:14,070 --> 00:04:17,120
[Music]

115
00:04:17,919 --> 00:04:20,959
and then we do ten

116
00:04:21,680 --> 00:04:27,919
empty the joint let's join by the way

117
00:04:25,840 --> 00:04:30,320
we're joining stuff oh we join the

118
00:04:27,919 --> 00:04:32,160
answer okay not during the

119
00:04:30,320 --> 00:04:32,880
answer is a stack okay

120
00:04:32,160 --> 00:04:35,440
so

121
00:04:32,880 --> 00:04:38,080
look at that let's emulate this okay

122
00:04:35,440 --> 00:04:40,320
a b c

123
00:04:38,080 --> 00:04:43,440
this one yeah

124
00:04:40,320 --> 00:04:44,639
so answer at the beginning okay it's not

125
00:04:43,440 --> 00:04:49,040
coming in

126
00:04:44,639 --> 00:04:51,360
we put the a let's answer the append a

127
00:04:49,040 --> 00:04:52,479
all right answer dot append b answer dot

128
00:04:51,360 --> 00:04:54,080
open c

129
00:04:52,479 --> 00:04:55,520
is not a pen

130
00:04:54,080 --> 00:04:56,560
smaller sign

131
00:04:55,520 --> 00:04:58,880
now

132
00:04:56,560 --> 00:05:01,120
when you will get to this point yeah

133
00:04:58,880 --> 00:05:03,919
it's pretty it's current symbol

134
00:05:01,120 --> 00:05:06,320
character is minus its previous one its

135
00:05:03,919 --> 00:05:10,320
previous one is the less than equal so

136
00:05:06,320 --> 00:05:13,919
what do we do so we just take it out and

137
00:05:10,320 --> 00:05:13,919
also take one character okay

138
00:05:15,440 --> 00:05:18,160
yeah

139
00:05:17,039 --> 00:05:21,520
so

140
00:05:18,160 --> 00:05:23,360
why do we need to have this let's let's

141
00:05:21,520 --> 00:05:25,440
avoid that

142
00:05:23,360 --> 00:05:28,560
there's nothing before the

143
00:05:25,440 --> 00:05:30,479
escape for example like this one so if

144
00:05:28,560 --> 00:05:32,639
this is a symbol yeah so what we do

145
00:05:30,479 --> 00:05:35,360
coming there coming here so let's stack

146
00:05:32,639 --> 00:05:36,560
we have less than equal time

147
00:05:35,360 --> 00:05:40,320
let's

148
00:05:36,560 --> 00:05:43,280
let's not equal and then we'll go here

149
00:05:40,320 --> 00:05:44,960
what do we do we pop it

150
00:05:43,280 --> 00:05:46,880
then there's nothing left in the stack

151
00:05:44,960 --> 00:05:49,280
so we don't talk okay

152
00:05:46,880 --> 00:05:51,600
so that that's one way okay the other

153
00:05:49,280 --> 00:05:52,400
way is it's quite similar it's quite

154
00:05:51,600 --> 00:05:54,800
similar

155
00:05:52,400 --> 00:05:56,560
it's just yellow uh look we're checking

156
00:05:54,800 --> 00:06:00,000
this current character and the previous

157
00:05:56,560 --> 00:06:03,120
one to come to make a backscape yeah

158
00:06:00,000 --> 00:06:05,600
that's good back backspace

159
00:06:03,120 --> 00:06:09,120
not landscape

160
00:06:05,600 --> 00:06:11,680
no backspace best space okay sorry best

161
00:06:09,120 --> 00:06:13,360
base yeah backspace okay sorry all right

162
00:06:11,680 --> 00:06:16,319
so it's bestscape

163
00:06:13,360 --> 00:06:18,560
okay backspace okay bs

164
00:06:16,319 --> 00:06:20,880
bs

165
00:06:18,560 --> 00:06:23,120
okay so another way

166
00:06:20,880 --> 00:06:25,120
another way we we have at least this is

167
00:06:23,120 --> 00:06:26,560
quite similar so answer then we have

168
00:06:25,120 --> 00:06:28,560
wire

169
00:06:26,560 --> 00:06:30,479
is smaller than n

170
00:06:28,560 --> 00:06:32,160
then we check if

171
00:06:30,479 --> 00:06:35,919
i

172
00:06:32,160 --> 00:06:37,280
before i plus 1 smaller than n

173
00:06:35,919 --> 00:06:38,560
and

174
00:06:37,280 --> 00:06:40,000
s i

175
00:06:38,560 --> 00:06:41,360
equal

176
00:06:40,000 --> 00:06:44,479
this one

177
00:06:41,360 --> 00:06:46,000
and s i plus 1

178
00:06:44,479 --> 00:06:47,120
equal

179
00:06:46,000 --> 00:06:49,199
equal

180
00:06:47,120 --> 00:06:51,520
minus okay

181
00:06:49,199 --> 00:06:54,319
so this character and the next character

182
00:06:51,520 --> 00:06:55,759
makes a better on the school

183
00:06:54,319 --> 00:06:58,000
okay

184
00:06:55,759 --> 00:07:00,000
and then what do we do so we have a long

185
00:06:58,000 --> 00:07:03,840
school no no need to be in the middle no

186
00:07:00,000 --> 00:07:06,160
no no we do work if answer if answer

187
00:07:03,840 --> 00:07:07,919
answer the pop right

188
00:07:06,160 --> 00:07:10,880
but for this one we need to jump to

189
00:07:07,919 --> 00:07:13,759
character i plus equals two

190
00:07:10,880 --> 00:07:16,639
else i plus equals one

191
00:07:13,759 --> 00:07:19,280
and then return

192
00:07:16,639 --> 00:07:19,280
the joy

193
00:07:19,840 --> 00:07:25,120
very right

194
00:07:22,160 --> 00:07:25,120
so what does it mean look

195
00:07:25,280 --> 00:07:29,039
this means that every time we go through

196
00:07:27,039 --> 00:07:32,400
this character one by one and we're

197
00:07:29,039 --> 00:07:36,240
checking if this current if the current

198
00:07:32,400 --> 00:07:39,280
character yeah if current character is

199
00:07:36,240 --> 00:07:41,520
okay so i i i probably need here answer

200
00:07:39,280 --> 00:07:45,720
the append okay we have a

201
00:07:41,520 --> 00:07:45,720
missing answer a pen si

202
00:07:46,479 --> 00:07:52,800
so if this character is if this uh

203
00:07:49,039 --> 00:07:55,280
character is and the next character

204
00:07:52,800 --> 00:07:56,560
together is the best game then we need

205
00:07:55,280 --> 00:07:58,160
to pop one

206
00:07:56,560 --> 00:08:00,639
first base so then we need to pop one

207
00:07:58,160 --> 00:08:02,560
character out of the stack it's not bad

208
00:08:00,639 --> 00:08:05,120
and i plus equals two

209
00:08:02,560 --> 00:08:07,120
otherwise we can append this one put it

210
00:08:05,120 --> 00:08:09,440
in a stack and i plus this one right

211
00:08:07,120 --> 00:08:10,879
because every time we we have a best

212
00:08:09,440 --> 00:08:13,680
backspace

213
00:08:10,879 --> 00:08:15,919
we need to ignore it and jump two

214
00:08:13,680 --> 00:08:17,039
characters ahead right

215
00:08:15,919 --> 00:08:17,919
make sense

216
00:08:17,039 --> 00:08:20,240
yeah

217
00:08:17,919 --> 00:08:22,000
this is this is one and this one is with

218
00:08:20,240 --> 00:08:25,680
checking this current character and the

219
00:08:22,000 --> 00:08:27,520
previous character if it's a bad space

220
00:08:25,680 --> 00:08:29,919
then we need to pop one

221
00:08:27,520 --> 00:08:32,320
but at the same time we have to pop

222
00:08:29,919 --> 00:08:35,440
another one because because the first

223
00:08:32,320 --> 00:08:38,399
time we met eric ryan tonight the first

224
00:08:35,440 --> 00:08:42,320
time we have we meet the

225
00:08:38,399 --> 00:08:44,720
fast space we already put push it

226
00:08:42,320 --> 00:08:46,480
to the stack so we have to push we have

227
00:08:44,720 --> 00:08:48,720
to pop these again

228
00:08:46,480 --> 00:08:50,240
so we have to put the properties again

229
00:08:48,720 --> 00:08:53,120
and this is just

230
00:08:50,240 --> 00:08:54,800
in both cases just to avoid that

231
00:08:53,120 --> 00:08:57,440
there's nothing

232
00:08:54,800 --> 00:08:59,839
in a stack right when there's nothing in

233
00:08:57,440 --> 00:09:03,279
the stack when you press the

234
00:08:59,839 --> 00:09:05,360
backspace nothing will happen so okay

235
00:09:03,279 --> 00:09:08,560
because because if i don't produce a

236
00:09:05,360 --> 00:09:11,600
check what happen if you try to pop from

237
00:09:08,560 --> 00:09:14,240
an empty stack what happened

238
00:09:11,600 --> 00:09:15,920
if we if nothing no no no the computer

239
00:09:14,240 --> 00:09:18,240
will scream because you're trying to pop

240
00:09:15,920 --> 00:09:19,839
something from the empty stack

241
00:09:18,240 --> 00:09:22,080
the computer will say

242
00:09:19,839 --> 00:09:24,480
okay something is wrong so that's why we

243
00:09:22,080 --> 00:09:26,080
have to check if the step is empty or

244
00:09:24,480 --> 00:09:29,360
not right okay

245
00:09:26,080 --> 00:09:31,279
another way okay which is quite

246
00:09:29,360 --> 00:09:33,440
fancy okay so look

247
00:09:31,279 --> 00:09:36,480
a b backspace

248
00:09:33,440 --> 00:09:39,839
b c backspace d okay

249
00:09:36,480 --> 00:09:41,680
look if we can use the split function

250
00:09:39,839 --> 00:09:44,560
remember look eric this is quite

251
00:09:41,680 --> 00:09:46,800
interesting if we use the split from c a

252
00:09:44,560 --> 00:09:48,720
b d yeah yeah yeah look look then what

253
00:09:46,800 --> 00:09:51,040
you become you'll become

254
00:09:48,720 --> 00:09:51,040
a

255
00:09:53,200 --> 00:09:57,519
right look

256
00:09:54,880 --> 00:10:00,399
yeah that's the three groups so what

257
00:09:57,519 --> 00:10:02,320
happened so we just have to

258
00:10:00,399 --> 00:10:03,519
remove the last bit

259
00:10:02,320 --> 00:10:04,560
of each one

260
00:10:03,519 --> 00:10:06,800
right

261
00:10:04,560 --> 00:10:08,800
if it's two unless uh

262
00:10:06,800 --> 00:10:10,240
yeah if it's not the last one right

263
00:10:08,800 --> 00:10:12,079
don't get it

264
00:10:10,240 --> 00:10:13,760
so look a b

265
00:10:12,079 --> 00:10:15,519
because we have a best verse we can do

266
00:10:13,760 --> 00:10:17,360
this bc

267
00:10:15,519 --> 00:10:20,640
we have backspace here so we did it here

268
00:10:17,360 --> 00:10:21,839
so that without be abd exactly yeah did

269
00:10:20,640 --> 00:10:22,880
you get it

270
00:10:21,839 --> 00:10:25,440
so

271
00:10:22,880 --> 00:10:28,079
so let me just remove this bit okay so

272
00:10:25,440 --> 00:10:30,640
how that will be quite interesting as

273
00:10:28,079 --> 00:10:31,680
well look so what um

274
00:10:30,640 --> 00:10:35,760
array

275
00:10:31,680 --> 00:10:35,760
equals s dot split

276
00:10:36,240 --> 00:10:41,120
we split by this backspace okay and an

277
00:10:38,959 --> 00:10:44,079
answer

278
00:10:41,120 --> 00:10:48,079
okay so answer equals what i say equals

279
00:10:44,079 --> 00:10:51,360
equals the okay so let's check if not as

280
00:10:48,079 --> 00:10:53,680
if s is empty then we just return okay

281
00:10:51,360 --> 00:10:57,360
our answer equals we have the first one

282
00:10:53,680 --> 00:10:59,680
first so which is a uh zlo

283
00:10:57,360 --> 00:11:01,279
then we go through for i

284
00:10:59,680 --> 00:11:03,680
in

285
00:11:01,279 --> 00:11:03,680
range

286
00:11:04,959 --> 00:11:11,839
probably we don't need a range i in

287
00:11:09,040 --> 00:11:13,200
a r we start from the second one

288
00:11:11,839 --> 00:11:16,079
so

289
00:11:13,200 --> 00:11:17,680
first time so we get we need to get rid

290
00:11:16,079 --> 00:11:19,680
of the last character

291
00:11:17,680 --> 00:11:21,920
this is a string yeah answer so answer

292
00:11:19,680 --> 00:11:24,640
equals answer

293
00:11:21,920 --> 00:11:26,000
minus one okay for the string we use

294
00:11:24,640 --> 00:11:28,560
this way to get rid of the last

295
00:11:26,000 --> 00:11:30,320
character here up to minus one means to

296
00:11:28,560 --> 00:11:31,760
get to get rid of last character and

297
00:11:30,320 --> 00:11:34,640
then answer

298
00:11:31,760 --> 00:11:36,399
plus equals i right so we need to plus

299
00:11:34,640 --> 00:11:39,760
the current character yeah

300
00:11:36,399 --> 00:11:41,120
current group okay and then return

301
00:11:39,760 --> 00:11:42,880
answer

302
00:11:41,120 --> 00:11:45,120
okay make sense

303
00:11:42,880 --> 00:11:47,600
the time time actually for all of it is

304
00:11:45,120 --> 00:11:49,839
one right we are going to each uh one

305
00:11:47,600 --> 00:11:51,760
time right right

306
00:11:49,839 --> 00:11:53,519
so we're going through the characters

307
00:11:51,760 --> 00:11:56,560
the string character by character just

308
00:11:53,519 --> 00:11:58,800
one in one go let's open time

309
00:11:56,560 --> 00:12:00,399
space convexity for the first two

310
00:11:58,800 --> 00:12:02,160
we're using the stack

311
00:12:00,399 --> 00:12:04,800
o-m right

312
00:12:02,160 --> 00:12:07,360
for this one we also need to use some uh

313
00:12:04,800 --> 00:12:09,519
additional array uh

314
00:12:07,360 --> 00:12:11,360
yeah so that's all then as

315
00:12:09,519 --> 00:12:14,000
all right so okay so to sum up what have

316
00:12:11,360 --> 00:12:15,200
you learned today about backspace

317
00:12:14,000 --> 00:12:16,959
factory

318
00:12:15,200 --> 00:12:20,560
what about backscape

319
00:12:16,959 --> 00:12:22,240
backspace backspace

320
00:12:20,560 --> 00:12:24,320
so we are given the string then we want

321
00:12:22,240 --> 00:12:26,399
to emulate the process of the keys

322
00:12:24,320 --> 00:12:28,240
typing using and then we want to that's

323
00:12:26,399 --> 00:12:30,720
the key thing today is what what kind of

324
00:12:28,240 --> 00:12:32,320
data structure are we using

325
00:12:30,720 --> 00:12:34,160
yeah because every time we push the

326
00:12:32,320 --> 00:12:36,720
characters character by character to the

327
00:12:34,160 --> 00:12:38,480
stack and then we have when we meet uh

328
00:12:36,720 --> 00:12:40,959
press the backscape

329
00:12:38,480 --> 00:12:42,800
backspace sorry we just take one

330
00:12:40,959 --> 00:12:45,839
character out of the

331
00:12:42,800 --> 00:12:48,160
outer space yeah so the thing is that

332
00:12:45,839 --> 00:12:50,800
the corner case is that

333
00:12:48,160 --> 00:12:52,720
that's very good ryan you raise this

334
00:12:50,800 --> 00:12:54,720
question and area as well but when

335
00:12:52,720 --> 00:12:58,160
there's nothing when how about

336
00:12:54,720 --> 00:12:59,519
the cases when we have uh the backspace

337
00:12:58,160 --> 00:13:01,120
and then the front

338
00:12:59,519 --> 00:13:03,360
nothing happens right

339
00:13:01,120 --> 00:13:05,440
because when we need to check

340
00:13:03,360 --> 00:13:07,519
if answer if the stack is not empty if

341
00:13:05,440 --> 00:13:09,600
it's empty then we do nothing okay okay

342
00:13:07,519 --> 00:13:12,839
that's it for today bye

343
00:13:09,600 --> 00:13:12,839
bye bye

