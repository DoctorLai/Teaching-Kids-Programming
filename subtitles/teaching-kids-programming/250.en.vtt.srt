1
00:00:00,000 --> 00:00:03,750

hello hello hello mr are you right

2
00:00:03,750 --> 00:00:03,760
hello hello hello mr are you right
 

3
00:00:03,760 --> 00:00:06,950
hello hello hello mr are you right
what did you talk about yesterday um

4
00:00:06,950 --> 00:00:06,960
what did you talk about yesterday um
 

5
00:00:06,960 --> 00:00:10,070
what did you talk about yesterday um
we talked about sci-fi log

6
00:00:10,070 --> 00:00:10,080
we talked about sci-fi log
 

7
00:00:10,080 --> 00:00:14,150
we talked about sci-fi log
13 yeah and here there we use a function

8
00:00:14,150 --> 00:00:14,160
13 yeah and here there we use a function
 

9
00:00:14,160 --> 00:00:15,669
13 yeah and here there we use a function
called string.find

10
00:00:15,669 --> 00:00:15,679
called string.find
 

11
00:00:15,679 --> 00:00:18,870
called string.find
right string defined

12
00:00:18,870 --> 00:00:18,880
right string defined
 

13
00:00:18,880 --> 00:00:23,029
right string defined
so abc remember abc dot find

14
00:00:23,029 --> 00:00:23,039
so abc remember abc dot find
 

15
00:00:23,039 --> 00:00:26,950
so abc remember abc dot find
find in a character yeah fire character

16
00:00:26,950 --> 00:00:26,960
find in a character yeah fire character
 

17
00:00:26,960 --> 00:00:30,550
find in a character yeah fire character
so this is the string string sdr type

18
00:00:30,550 --> 00:00:30,560
so this is the string string sdr type
 

19
00:00:30,560 --> 00:00:32,150
so this is the string string sdr type
and it's a messer confine

20
00:00:32,150 --> 00:00:32,160
and it's a messer confine
 

21
00:00:32,160 --> 00:00:35,270
and it's a messer confine
file a target a character okay so it

22
00:00:35,270 --> 00:00:35,280
file a target a character okay so it
 

23
00:00:35,280 --> 00:00:37,270
file a target a character okay so it
returns the first

24
00:00:37,270 --> 00:00:37,280
returns the first
 

25
00:00:37,280 --> 00:00:40,150
returns the first
index right the string has the first

26
00:00:40,150 --> 00:00:40,160
index right the string has the first
 

27
00:00:40,160 --> 00:00:40,950
index right the string has the first
index

28
00:00:40,950 --> 00:00:40,960
index
 

29
00:00:40,960 --> 00:00:43,510
index
of the c in the string right for example

30
00:00:43,510 --> 00:00:43,520
of the c in the string right for example
 

31
00:00:43,520 --> 00:00:44,950
of the c in the string right for example
like

32
00:00:44,950 --> 00:00:44,960
like
 

33
00:00:44,960 --> 00:00:50,150
like
a b c d dot 5

34
00:00:50,150 --> 00:00:50,160

 

35
00:00:50,160 --> 00:00:54,229

b what does it return

36
00:00:54,229 --> 00:00:54,239

 

37
00:00:54,239 --> 00:00:58,709

number one yeah one because zero one two

38
00:00:58,709 --> 00:00:58,719
number one yeah one because zero one two
 

39
00:00:58,719 --> 00:00:59,110
number one yeah one because zero one two
three

40
00:00:59,110 --> 00:00:59,120
three
 

41
00:00:59,120 --> 00:01:01,590
three
one and how about if i i have another b

42
00:01:01,590 --> 00:01:01,600
one and how about if i i have another b
 

43
00:01:01,600 --> 00:01:03,990
one and how about if i i have another b
here it returns still one right

44
00:01:03,990 --> 00:01:04,000
here it returns still one right
 

45
00:01:04,000 --> 00:01:06,469
here it returns still one right
but it always returns the first matched

46
00:01:06,469 --> 00:01:06,479
but it always returns the first matched
 

47
00:01:06,479 --> 00:01:07,750
but it always returns the first matched
characters

48
00:01:07,750 --> 00:01:07,760
characters
 

49
00:01:07,760 --> 00:01:09,429
characters
okay so if it doesn't find if you write

50
00:01:09,429 --> 00:01:09,439
okay so if it doesn't find if you write
 

51
00:01:09,439 --> 00:01:11,190
okay so if it doesn't find if you write
let's say i want to find t

52
00:01:11,190 --> 00:01:11,200
let's say i want to find t
 

53
00:01:11,200 --> 00:01:15,190
let's say i want to find t
so it returns minus one okay yeah

54
00:01:15,190 --> 00:01:15,200
so it returns minus one okay yeah
 

55
00:01:15,200 --> 00:01:18,230
so it returns minus one okay yeah
so and this method is only if we

56
00:01:18,230 --> 00:01:18,240
so and this method is only if we
 

57
00:01:18,240 --> 00:01:21,510
so and this method is only if we
let's implement this method and then

58
00:01:21,510 --> 00:01:21,520
let's implement this method and then
 

59
00:01:21,520 --> 00:01:23,670
let's implement this method and then
we only need to consider finding a

60
00:01:23,670 --> 00:01:23,680
we only need to consider finding a
 

61
00:01:23,680 --> 00:01:24,870
we only need to consider finding a
string

62
00:01:24,870 --> 00:01:24,880
string
 

63
00:01:24,880 --> 00:01:26,310
string
finding a character in the string this

64
00:01:26,310 --> 00:01:26,320
finding a character in the string this
 

65
00:01:26,320 --> 00:01:28,390
finding a character in the string this
almost only applies to finding a

66
00:01:28,390 --> 00:01:28,400
almost only applies to finding a
 

67
00:01:28,400 --> 00:01:29,830
almost only applies to finding a
character in a string right if it

68
00:01:29,830 --> 00:01:29,840
character in a string right if it
 

69
00:01:29,840 --> 00:01:30,550
character in a string right if it
doesn't

70
00:01:30,550 --> 00:01:30,560
doesn't
 

71
00:01:30,560 --> 00:01:34,789
doesn't
if it is this given string it's not uh

72
00:01:34,789 --> 00:01:34,799
if it is this given string it's not uh
 

73
00:01:34,799 --> 00:01:37,350
if it is this given string it's not uh
if a given type is not a string then we

74
00:01:37,350 --> 00:01:37,360
if a given type is not a string then we
 

75
00:01:37,360 --> 00:01:39,190
if a given type is not a string then we
need to show an exception okay so in

76
00:01:39,190 --> 00:01:39,200
need to show an exception okay so in
 

77
00:01:39,200 --> 00:01:42,230
need to show an exception okay so in
python we use the raise exception

78
00:01:42,230 --> 00:01:42,240
python we use the raise exception
 

79
00:01:42,240 --> 00:01:44,630
python we use the raise exception
and let's be easy to improve let's say

80
00:01:44,630 --> 00:01:44,640
and let's be easy to improve let's say
 

81
00:01:44,640 --> 00:01:46,230
and let's be easy to improve let's say
let's just define

82
00:01:46,230 --> 00:01:46,240
let's just define
 

83
00:01:46,240 --> 00:01:50,469
let's just define
find and then we want to find the string

84
00:01:50,469 --> 00:01:50,479
find and then we want to find the string
 

85
00:01:50,479 --> 00:01:53,830
find and then we want to find the string
in a target right comma okay so that

86
00:01:53,830 --> 00:01:53,840
in a target right comma okay so that
 

87
00:01:53,840 --> 00:01:55,350
in a target right comma okay so that
that's a little bit different than

88
00:01:55,350 --> 00:01:55,360
that's a little bit different than
 

89
00:01:55,360 --> 00:01:57,990
that's a little bit different than
string.5 but basically different numbers

90
00:01:57,990 --> 00:01:58,000
string.5 but basically different numbers
 

91
00:01:58,000 --> 00:01:58,870
string.5 but basically different numbers
are and let's

92
00:01:58,870 --> 00:01:58,880
are and let's
 

93
00:01:58,880 --> 00:02:02,230
are and let's
let's implement here okay first of all

94
00:02:02,230 --> 00:02:02,240
let's implement here okay first of all
 

95
00:02:02,240 --> 00:02:03,429
let's implement here okay first of all
we need to check if s

96
00:02:03,429 --> 00:02:03,439
we need to check if s
 

97
00:02:03,439 --> 00:02:05,270
we need to check if s
is a string type so we can use the type

98
00:02:05,270 --> 00:02:05,280
is a string type so we can use the type
 

99
00:02:05,280 --> 00:02:06,789
is a string type so we can use the type
function array

100
00:02:06,789 --> 00:02:06,799
function array
 

101
00:02:06,799 --> 00:02:10,389
function array
if type yeah this is type

102
00:02:10,389 --> 00:02:10,399
if type yeah this is type
 

103
00:02:10,399 --> 00:02:13,910
if type yeah this is type
s okay if it is not equal

104
00:02:13,910 --> 00:02:13,920
s okay if it is not equal
 

105
00:02:13,920 --> 00:02:15,990
s okay if it is not equal
str if it's not a string with which the

106
00:02:15,990 --> 00:02:16,000
str if it's not a string with which the
 

107
00:02:16,000 --> 00:02:17,990
str if it's not a string with which the
exception we can do this

108
00:02:17,990 --> 00:02:18,000
exception we can do this
 

109
00:02:18,000 --> 00:02:21,750
exception we can do this
raise exception right it raises

110
00:02:21,750 --> 00:02:21,760
raise exception right it raises
 

111
00:02:21,760 --> 00:02:22,869
raise exception right it raises
exception raising

112
00:02:22,869 --> 00:02:22,879
exception raising
 

113
00:02:22,879 --> 00:02:25,750
exception raising
et cetera means something goes wrong

114
00:02:25,750 --> 00:02:25,760
et cetera means something goes wrong
 

115
00:02:25,760 --> 00:02:26,790
et cetera means something goes wrong
right

116
00:02:26,790 --> 00:02:26,800
right
 

117
00:02:26,800 --> 00:02:28,949
right
something goes wrong because look we are

118
00:02:28,949 --> 00:02:28,959
something goes wrong because look we are
 

119
00:02:28,959 --> 00:02:30,390
something goes wrong because look we are
designing this function

120
00:02:30,390 --> 00:02:30,400
designing this function
 

121
00:02:30,400 --> 00:02:32,470
designing this function
to find a character in a string but you

122
00:02:32,470 --> 00:02:32,480
to find a character in a string but you
 

123
00:02:32,480 --> 00:02:33,589
to find a character in a string but you
have given me

124
00:02:33,589 --> 00:02:33,599
have given me
 

125
00:02:33,599 --> 00:02:36,070
have given me
not a string type right so it means that

126
00:02:36,070 --> 00:02:36,080
not a string type right so it means that
 

127
00:02:36,080 --> 00:02:37,110
not a string type right so it means that
this function

128
00:02:37,110 --> 00:02:37,120
this function
 

129
00:02:37,120 --> 00:02:39,270
this function
cannot continue because i don't know how

130
00:02:39,270 --> 00:02:39,280
cannot continue because i don't know how
 

131
00:02:39,280 --> 00:02:40,630
cannot continue because i don't know how
to handle

132
00:02:40,630 --> 00:02:40,640
to handle
 

133
00:02:40,640 --> 00:02:43,509
to handle
when s is not a string type okay so

134
00:02:43,509 --> 00:02:43,519
when s is not a string type okay so
 

135
00:02:43,519 --> 00:02:45,270
when s is not a string type okay so
raise exception

136
00:02:45,270 --> 00:02:45,280
raise exception
 

137
00:02:45,280 --> 00:02:47,509
raise exception
and you can define exceptions okay can't

138
00:02:47,509 --> 00:02:47,519
and you can define exceptions okay can't
 

139
00:02:47,519 --> 00:02:50,070
and you can define exceptions okay can't
do it or whatever yeah whatever that's

140
00:02:50,070 --> 00:02:50,080
do it or whatever yeah whatever that's
 

141
00:02:50,080 --> 00:02:50,309
do it or whatever yeah whatever that's
it

142
00:02:50,309 --> 00:02:50,319
it
 

143
00:02:50,319 --> 00:02:52,869
it
and then we want to iterate how how can

144
00:02:52,869 --> 00:02:52,879
and then we want to iterate how how can
 

145
00:02:52,879 --> 00:02:53,990
and then we want to iterate how how can
we find it

146
00:02:53,990 --> 00:02:54,000
we find it
 

147
00:02:54,000 --> 00:02:56,070
we find it
all right how can we find it i'm going

148
00:02:56,070 --> 00:02:56,080
all right how can we find it i'm going
 

149
00:02:56,080 --> 00:03:00,630
all right how can we find it i'm going
through going to from which direction

150
00:03:00,630 --> 00:03:00,640

 

151
00:03:00,640 --> 00:03:02,869

left to right left right okay so then we

152
00:03:02,869 --> 00:03:02,879
left to right left right okay so then we
 

153
00:03:02,879 --> 00:03:05,670
left to right left right okay so then we
need to fall

154
00:03:05,670 --> 00:03:05,680
need to fall
 

155
00:03:05,680 --> 00:03:07,990
need to fall
and for what we want to get the index

156
00:03:07,990 --> 00:03:08,000
and for what we want to get the index
 

157
00:03:08,000 --> 00:03:09,509
and for what we want to get the index
and then get the value at the same time

158
00:03:09,509 --> 00:03:09,519
and then get the value at the same time
 

159
00:03:09,519 --> 00:03:11,430
and then get the value at the same time
so which function are we using

160
00:03:11,430 --> 00:03:11,440
so which function are we using
 

161
00:03:11,440 --> 00:03:14,710
so which function are we using
we use a function to return

162
00:03:14,710 --> 00:03:14,720
we use a function to return
 

163
00:03:14,720 --> 00:03:16,550
we use a function to return
to return the index and the value do you

164
00:03:16,550 --> 00:03:16,560
to return the index and the value do you
 

165
00:03:16,560 --> 00:03:18,070
to return the index and the value do you
remember what function is there

166
00:03:18,070 --> 00:03:18,080
remember what function is there
 

167
00:03:18,080 --> 00:03:23,670
remember what function is there
called e e star with e

168
00:03:23,670 --> 00:03:23,680

 

169
00:03:23,680 --> 00:03:26,869

what e e

170
00:03:26,869 --> 00:03:26,879
what e e
 

171
00:03:26,879 --> 00:03:30,550
what e e
new neuron enumerate yeah so look

172
00:03:30,550 --> 00:03:30,560
new neuron enumerate yeah so look
 

173
00:03:30,560 --> 00:03:33,750
new neuron enumerate yeah so look
for index and a value in

174
00:03:33,750 --> 00:03:33,760
for index and a value in
 

175
00:03:33,760 --> 00:03:37,190
for index and a value in
innumeral way the numerator

176
00:03:37,190 --> 00:03:37,200
innumeral way the numerator
 

177
00:03:37,200 --> 00:03:40,869
innumeral way the numerator
one innumerable

178
00:03:40,869 --> 00:03:40,879
one innumerable
 

179
00:03:40,879 --> 00:03:44,550
one innumerable
one what do we do

180
00:03:44,550 --> 00:03:44,560
one what do we do
 

181
00:03:44,560 --> 00:03:47,990
one what do we do
if the value equal equal

182
00:03:47,990 --> 00:03:48,000
if the value equal equal
 

183
00:03:48,000 --> 00:03:51,430
if the value equal equal
the target right target yeah

184
00:03:51,430 --> 00:03:51,440
the target right target yeah
 

185
00:03:51,440 --> 00:03:53,110
the target right target yeah
now we need to return the index which is

186
00:03:53,110 --> 00:03:53,120
now we need to return the index which is
 

187
00:03:53,120 --> 00:03:54,869
now we need to return the index which is
what

188
00:03:54,869 --> 00:03:54,879
what
 

189
00:03:54,879 --> 00:03:58,630
what
the second index which is what

190
00:03:58,630 --> 00:03:58,640

 

191
00:03:58,640 --> 00:04:01,670

which is doing that index i and if we

192
00:04:01,670 --> 00:04:01,680
which is doing that index i and if we
 

193
00:04:01,680 --> 00:04:03,270
which is doing that index i and if we
can't find it at the end we need to

194
00:04:03,270 --> 00:04:03,280
can't find it at the end we need to
 

195
00:04:03,280 --> 00:04:05,110
can't find it at the end we need to
return one

196
00:04:05,110 --> 00:04:05,120
return one
 

197
00:04:05,120 --> 00:04:07,990
return one
minus one yeah let's see what's the term

198
00:04:07,990 --> 00:04:08,000
minus one yeah let's see what's the term
 

199
00:04:08,000 --> 00:04:09,589
minus one yeah let's see what's the term
complexity

200
00:04:09,589 --> 00:04:09,599
complexity
 

201
00:04:09,599 --> 00:04:14,789
complexity
um and what's new

202
00:04:14,789 --> 00:04:14,799
um and what's new
 

203
00:04:14,799 --> 00:04:16,469
um and what's new
the number of characters in the given

204
00:04:16,469 --> 00:04:16,479
the number of characters in the given
 

205
00:04:16,479 --> 00:04:17,990
the number of characters in the given
string right yeah

206
00:04:17,990 --> 00:04:18,000
string right yeah
 

207
00:04:18,000 --> 00:04:20,229
string right yeah
okay so that should be it okay can you

208
00:04:20,229 --> 00:04:20,239
okay so that should be it okay can you
 

209
00:04:20,239 --> 00:04:22,550
okay so that should be it okay can you
write it that's it

210
00:04:22,550 --> 00:04:22,560
write it that's it
 

211
00:04:22,560 --> 00:04:24,629
write it that's it
that's it come on your turn and that's

212
00:04:24,629 --> 00:04:24,639
that's it come on your turn and that's
 

213
00:04:24,639 --> 00:04:25,990
that's it come on your turn and that's
it

214
00:04:25,990 --> 00:04:26,000
it
 

215
00:04:26,000 --> 00:04:29,430
it
that's it for today

216
00:04:29,430 --> 00:04:29,440
that's it for today
 

217
00:04:29,440 --> 00:04:32,390
that's it for today
for iv is the index is a value and i'm

218
00:04:32,390 --> 00:04:32,400
for iv is the index is a value and i'm
 

219
00:04:32,400 --> 00:04:33,030
for iv is the index is a value and i'm
going to find

220
00:04:33,030 --> 00:04:33,040
going to find
 

221
00:04:33,040 --> 00:04:39,830
going to find
if y v v is what if what

222
00:04:39,830 --> 00:04:39,840
if y v v is what if what
 

223
00:04:39,840 --> 00:05:08,950
if y v v is what if what
the target

224
00:05:08,950 --> 00:05:08,960

 

225
00:05:08,960 --> 00:05:11,029

what do we do if we find it if we find

226
00:05:11,029 --> 00:05:11,039
what do we do if we find it if we find
 

227
00:05:11,039 --> 00:05:12,310
what do we do if we find it if we find
it and what do we do

228
00:05:12,310 --> 00:05:12,320
it and what do we do
 

229
00:05:12,320 --> 00:05:16,230
it and what do we do
return the unit which one is the index

230
00:05:16,230 --> 00:05:16,240
return the unit which one is the index
 

231
00:05:16,240 --> 00:05:21,189
return the unit which one is the index
return but

232
00:05:21,189 --> 00:05:21,199

 

233
00:05:21,199 --> 00:05:24,390

i i put it right and if we can't find it

234
00:05:24,390 --> 00:05:24,400
i i put it right and if we can't find it
 

235
00:05:24,400 --> 00:05:25,830
i i put it right and if we can't find it
what happened

236
00:05:25,830 --> 00:05:25,840
what happened
 

237
00:05:25,840 --> 00:05:32,950
what happened
if we can't find it whatever

238
00:05:32,950 --> 00:05:32,960

 

239
00:05:32,960 --> 00:05:35,749

what's the time complexity what's that

240
00:05:35,749 --> 00:05:35,759
what's the time complexity what's that
 

241
00:05:35,759 --> 00:05:39,830
what's the time complexity what's that
space movement

242
00:05:39,830 --> 00:05:39,840
space movement
 

243
00:05:39,840 --> 00:05:44,720
space movement
good job bye

