1
00:00:00,240 --> 00:00:05,040
hello mr and mr rhino all right

2
00:00:02,879 --> 00:00:07,120
yeah okay so yeah we talked about the

3
00:00:05,040 --> 00:00:09,360
binary tree before you find on the tree

4
00:00:07,120 --> 00:00:12,080
final tree what's pine on the tree any

5
00:00:09,360 --> 00:00:16,040
anybody yes

6
00:00:12,080 --> 00:00:16,040
look this is the final tree

7
00:00:16,110 --> 00:00:19,329
[Music]

8
00:00:20,240 --> 00:00:24,080
how do we define a binary why this is

9
00:00:22,800 --> 00:00:27,279
the binary

10
00:00:24,080 --> 00:00:29,279
question because yes

11
00:00:27,279 --> 00:00:30,560
i know you know primary but what is the

12
00:00:29,279 --> 00:00:32,239
financing if you want to tell your

13
00:00:30,560 --> 00:00:34,239
friend what's the binary in computer

14
00:00:32,239 --> 00:00:36,960
science data structure how would you

15
00:00:34,239 --> 00:00:36,960
describe it

16
00:00:39,360 --> 00:00:43,600
like that's one answer yet but it

17
00:00:41,520 --> 00:00:45,360
doesn't have to be numbers right i put a

18
00:00:43,600 --> 00:00:46,079
number just for the simplicity it could

19
00:00:45,360 --> 00:00:48,160
be

20
00:00:46,079 --> 00:00:50,879
the names it could be objects it could

21
00:00:48,160 --> 00:00:53,680
be anything right it could be me yeah

22
00:00:50,879 --> 00:00:56,239
every subject okay so playing games oh

23
00:00:53,680 --> 00:00:58,239
yeah yeah so listen yeah the binary tree

24
00:00:56,239 --> 00:01:00,320
is the data structure what's the data

25
00:00:58,239 --> 00:01:01,440
association data structure is easy to

26
00:01:00,320 --> 00:01:03,600
instruction

27
00:01:01,440 --> 00:01:06,159
it's for computer it's in computers how

28
00:01:03,600 --> 00:01:08,640
do we store data yeah we use the data

29
00:01:06,159 --> 00:01:10,320
structure this is binary tree why is

30
00:01:08,640 --> 00:01:13,360
that because if you look upside down

31
00:01:10,320 --> 00:01:16,000
it's like a tree and binary means two

32
00:01:13,360 --> 00:01:18,400
means that that for any node

33
00:01:16,000 --> 00:01:21,040
the maximum number of kids

34
00:01:18,400 --> 00:01:23,280
is two that's binary finally two right

35
00:01:21,040 --> 00:01:25,360
the binary tree is also it's a tree

36
00:01:23,280 --> 00:01:27,920
three is a graph right especially the

37
00:01:25,360 --> 00:01:30,720
final tree right it has the maximum two

38
00:01:27,920 --> 00:01:33,920
kids and the note without

39
00:01:30,720 --> 00:01:35,119
any kids we call it loot the note we

40
00:01:33,920 --> 00:01:37,680
allow

41
00:01:35,119 --> 00:01:40,000
any children we call it

42
00:01:37,680 --> 00:01:42,000
leaves okay so you need spinach what

43
00:01:40,000 --> 00:01:43,520
note are the leaves how many leaves

44
00:01:42,000 --> 00:01:44,880
knows do we have here

45
00:01:43,520 --> 00:01:46,240
one two

46
00:01:44,880 --> 00:01:47,600
three notes

47
00:01:46,240 --> 00:01:50,000
three

48
00:01:47,600 --> 00:01:54,759
what's leave you said

49
00:01:50,000 --> 00:01:54,759
okay so why do you say one two three

50
00:02:05,920 --> 00:02:08,920
uh

51
00:02:13,599 --> 00:02:18,800
okay so we are given this final tree and

52
00:02:16,239 --> 00:02:20,840
each note it has this unique number okay

53
00:02:18,800 --> 00:02:23,120
unique this thing number

54
00:02:20,840 --> 00:02:25,200
right unique

55
00:02:23,120 --> 00:02:26,720
so every now is different and we also

56
00:02:25,200 --> 00:02:27,599
given the target

57
00:02:26,720 --> 00:02:30,319
okay

58
00:02:27,599 --> 00:02:32,640
right for example k equals three

59
00:02:30,319 --> 00:02:36,160
okay so can you tell me which is the

60
00:02:32,640 --> 00:02:38,720
closest leaf node to k equals 3

61
00:02:36,160 --> 00:02:40,319
which no which leaf now is the closest

62
00:02:38,720 --> 00:02:43,120
to 0 3

63
00:02:40,319 --> 00:02:44,160
7 yeah obviously and how about if i give

64
00:02:43,120 --> 00:02:45,120
you

65
00:02:44,160 --> 00:02:47,599
6

66
00:02:45,120 --> 00:02:49,840
that's a tricky one right 6.

67
00:02:47,599 --> 00:02:52,480
this is a very unbecause if what

68
00:02:49,840 --> 00:02:54,959
happened if we already given the note uh

69
00:02:52,480 --> 00:02:56,480
you know which itself is a leaf note

70
00:02:54,959 --> 00:02:58,159
should we return itself or should we

71
00:02:56,480 --> 00:03:00,560
find another leaf right

72
00:02:58,159 --> 00:03:03,440
i think he should return itself

73
00:03:00,560 --> 00:03:04,800
but turn itself yes because

74
00:03:03,440 --> 00:03:07,280
because

75
00:03:04,800 --> 00:03:10,400
closest leaf node okay so we turn over

76
00:03:07,280 --> 00:03:13,040
linearly this node to the target k

77
00:03:10,400 --> 00:03:14,560
so what happens if the target is already

78
00:03:13,040 --> 00:03:16,480
a different node

79
00:03:14,560 --> 00:03:18,879
right so we just return itself yes

80
00:03:16,480 --> 00:03:18,879
you're right

81
00:03:24,159 --> 00:03:28,159
right it's the root

82
00:03:26,480 --> 00:03:30,959
it's also a leaf

83
00:03:28,159 --> 00:03:33,840
okay so we return six and how about if i

84
00:03:30,959 --> 00:03:36,159
have these five if i giving you k equals

85
00:03:33,840 --> 00:03:40,799
five so which note is the

86
00:03:36,159 --> 00:03:43,680
closest note if not to five

87
00:03:40,799 --> 00:03:46,560
eight hey if i have another leaf node

88
00:03:43,680 --> 00:03:48,080
here like nine and then i give you k

89
00:03:46,560 --> 00:03:50,000
equals four

90
00:03:48,080 --> 00:03:52,080
so which leaf note is

91
00:03:50,000 --> 00:03:53,680
the closest to four

92
00:03:52,080 --> 00:03:56,319
eight

93
00:03:53,680 --> 00:03:56,319
how about nine

94
00:03:56,890 --> 00:04:01,840
[Music]

95
00:03:59,519 --> 00:04:04,319
okay you're measuring okay okay this is

96
00:04:01,840 --> 00:04:07,760
not really good

97
00:04:04,319 --> 00:04:09,040
okay okay good and this is that

98
00:04:07,760 --> 00:04:11,120
and

99
00:04:09,040 --> 00:04:13,920
this is

100
00:04:11,120 --> 00:04:16,479
i see i see okay okay very creative okay

101
00:04:13,920 --> 00:04:18,079
so in this case you can return a or nine

102
00:04:16,479 --> 00:04:20,639
doesn't matter we are not measuring on

103
00:04:18,079 --> 00:04:22,560
the actual distance okay good yeah i'll

104
00:04:20,639 --> 00:04:24,960
return it yeah

105
00:04:22,560 --> 00:04:27,440
ela will be okay okay what's your source

106
00:04:24,960 --> 00:04:31,199
above is

107
00:04:27,440 --> 00:04:33,680
looking at all of the yeah

108
00:04:31,199 --> 00:04:34,479
yeah i didn't find all of the leafs now

109
00:04:33,680 --> 00:04:37,600
yeah

110
00:04:34,479 --> 00:04:39,680
897 in this case and then

111
00:04:37,600 --> 00:04:41,840
and then

112
00:04:39,680 --> 00:04:44,800
just look just calculate the distance to

113
00:04:41,840 --> 00:04:47,759
it yeah okay that is a very intuitive

114
00:04:44,800 --> 00:04:47,759
way that's very good

115
00:04:48,880 --> 00:04:54,560
intuitive is for human we look at this

116
00:04:52,320 --> 00:04:56,479
we have a very powerful brain we can

117
00:04:54,560 --> 00:04:58,240
look at it we can get the answer

118
00:04:56,479 --> 00:05:00,960
straight away because it's future

119
00:04:58,240 --> 00:05:03,759
depending on how big is your brain yeah

120
00:05:00,960 --> 00:05:03,759
it's just there right

121
00:05:04,000 --> 00:05:08,320
the computers are dumb right so we have

122
00:05:06,400 --> 00:05:10,479
to tell the computer how do we solve

123
00:05:08,320 --> 00:05:12,560
this problem your approach is okay for

124
00:05:10,479 --> 00:05:15,759
humans you know if you ask mommy

125
00:05:12,560 --> 00:05:17,680
mom look at it like that it'll be very

126
00:05:15,759 --> 00:05:20,400
easy for mommy to figure out which is

127
00:05:17,680 --> 00:05:22,560
the closest leaf to the cake but if we

128
00:05:20,400 --> 00:05:24,400
implement this kind of idea in a

129
00:05:22,560 --> 00:05:26,960
computer if you ask computer to do this

130
00:05:24,400 --> 00:05:28,639
kind of thing then you you'll be complex

131
00:05:26,960 --> 00:05:30,960
it'll be difficult for computers to do

132
00:05:28,639 --> 00:05:33,039
it right because we have to you know

133
00:05:30,960 --> 00:05:34,880
implement these algorithms

134
00:05:33,039 --> 00:05:36,560
it's not trivial to implement we are

135
00:05:34,880 --> 00:05:39,199
given the loot right we're given this

136
00:05:36,560 --> 00:05:41,039
load according to your agreement find

137
00:05:39,199 --> 00:05:43,680
the least the final leaves we need to do

138
00:05:41,039 --> 00:05:45,199
the deficiency of processes right yeah

139
00:05:43,680 --> 00:05:47,360
and finally

140
00:05:45,199 --> 00:05:49,600
and and then if we get a collection of

141
00:05:47,360 --> 00:05:52,639
the leaves then we have to calculate the

142
00:05:49,600 --> 00:05:55,919
distance calculate the distance

143
00:05:52,639 --> 00:05:59,360
for all the leaves to the k right

144
00:05:55,919 --> 00:06:01,520
and also also we need to find out uh the

145
00:05:59,360 --> 00:06:03,039
k where is the k right so

146
00:06:01,520 --> 00:06:05,120
in order to do this

147
00:06:03,039 --> 00:06:07,280
it's not easy how do we calculate the

148
00:06:05,120 --> 00:06:09,280
distance between two nodes in a binary

149
00:06:07,280 --> 00:06:11,280
tree you know for binary tree the tricky

150
00:06:09,280 --> 00:06:12,880
part is that once you are given the root

151
00:06:11,280 --> 00:06:13,759
you cannot visit the kids from the

152
00:06:12,880 --> 00:06:15,440
parent

153
00:06:13,759 --> 00:06:18,000
but you cannot go vice versa in order to

154
00:06:15,440 --> 00:06:20,479
do that we we can convert it to a graph

155
00:06:18,000 --> 00:06:22,639
remember we talk about this right so the

156
00:06:20,479 --> 00:06:24,240
loot children yeah left and right right

157
00:06:22,639 --> 00:06:26,160
it has two points pointing the left to

158
00:06:24,240 --> 00:06:28,160
the right but we want to pitch the

159
00:06:26,160 --> 00:06:30,479
reverse direction if we are given this

160
00:06:28,160 --> 00:06:32,560
root two we want to be able to reference

161
00:06:30,479 --> 00:06:35,520
the parent so in this case we convert

162
00:06:32,560 --> 00:06:36,800
into a graph suppose we we have already

163
00:06:35,520 --> 00:06:39,600
have this kind of graph and then we

164
00:06:36,800 --> 00:06:41,919
calculate distance between any two nodes

165
00:06:39,600 --> 00:06:44,160
what's the traversal agreement if we

166
00:06:41,919 --> 00:06:46,610
want to traverse a graph

167
00:06:44,160 --> 00:06:49,769
and find the shortest distance

168
00:06:46,610 --> 00:06:49,769
[Music]

169
00:06:51,599 --> 00:06:56,479
level by level when we found a node it's

170
00:06:53,840 --> 00:06:57,280
a shortage distance right yeah because

171
00:06:56,479 --> 00:06:58,720
look

172
00:06:57,280 --> 00:07:00,479
it's preferences she never buy level

173
00:06:58,720 --> 00:07:03,120
only found it it's a shortage that

174
00:07:00,479 --> 00:07:04,560
search may not be the shortest distance

175
00:07:03,120 --> 00:07:06,639
in this graph we have given these like

176
00:07:04,560 --> 00:07:10,160
unique numbers here so first of all

177
00:07:06,639 --> 00:07:12,560
convert the graph yeah so step cl

178
00:07:10,160 --> 00:07:15,120
convert the tree to the graph 3 to the

179
00:07:12,560 --> 00:07:16,720
graph graph we can use adjacent metric

180
00:07:15,120 --> 00:07:18,319
or adjection this yeah we talk about

181
00:07:16,720 --> 00:07:20,319
that how do we store the graph right

182
00:07:18,319 --> 00:07:21,039
graph is more like a

183
00:07:20,319 --> 00:07:23,919
g

184
00:07:21,039 --> 00:07:26,080
g is a very powerful graph is a very

185
00:07:23,919 --> 00:07:27,919
powerful data structure with the

186
00:07:26,080 --> 00:07:30,160
collection it's a collection of vertices

187
00:07:27,919 --> 00:07:32,720
and edges and vertices and edges the

188
00:07:30,160 --> 00:07:34,400
vertex edges and for the graph we can

189
00:07:32,720 --> 00:07:37,440
have these

190
00:07:34,400 --> 00:07:39,440
uh directed right directed a cyclical

191
00:07:37,440 --> 00:07:41,520
with a direction or we if we don't have

192
00:07:39,440 --> 00:07:43,680
a directions we call it

193
00:07:41,520 --> 00:07:45,759
undirected graph for the graph you can

194
00:07:43,680 --> 00:07:48,720
have cycles in it right you can have

195
00:07:45,759 --> 00:07:51,520
different components buffalo tree it

196
00:07:48,720 --> 00:07:53,520
says to be one piece and one component

197
00:07:51,520 --> 00:07:55,440
you can't put the two two trees that

198
00:07:53,520 --> 00:07:57,440
would be called a forest right and you

199
00:07:55,440 --> 00:08:00,080
cannot have cycles the tree does not

200
00:07:57,440 --> 00:08:01,759
have cycles yeah but even so we it means

201
00:08:00,080 --> 00:08:04,400
that we can convert the tree to a graph

202
00:08:01,759 --> 00:08:06,160
but not vice versa right sometimes the

203
00:08:04,400 --> 00:08:08,479
the graph is not a tree so that's why we

204
00:08:06,160 --> 00:08:10,319
cannot convert it backwards but for

205
00:08:08,479 --> 00:08:12,400
definitely tree is a graph so we can

206
00:08:10,319 --> 00:08:14,000
convert a tree to a block for to convert

207
00:08:12,400 --> 00:08:16,560
three to graph we can use the different

208
00:08:14,000 --> 00:08:18,960
search references as well right so once

209
00:08:16,560 --> 00:08:21,280
we convert this graph then we can do

210
00:08:18,960 --> 00:08:23,120
this all right this is the improvement

211
00:08:21,280 --> 00:08:25,120
to your angle you are saying that find

212
00:08:23,120 --> 00:08:27,520
the leaves right find the leaves do the

213
00:08:25,120 --> 00:08:28,800
perfect search each right i'm taking the

214
00:08:27,520 --> 00:08:30,960
distance right

215
00:08:28,800 --> 00:08:32,880
so why not start with this k and do the

216
00:08:30,960 --> 00:08:33,919
pressure search until it hits one of the

217
00:08:32,880 --> 00:08:36,000
leaves

218
00:08:33,919 --> 00:08:38,159
you'll be quicker right because in this

219
00:08:36,000 --> 00:08:40,560
case i just have to do one thing one one

220
00:08:38,159 --> 00:08:42,800
process right makes sense

221
00:08:40,560 --> 00:08:45,760
so i do this first search

222
00:08:42,800 --> 00:08:48,240
yeah five six two and then the next one

223
00:08:45,760 --> 00:08:49,680
a okay i found it a is the shortest

224
00:08:48,240 --> 00:08:51,600
result but

225
00:08:49,680 --> 00:08:54,320
according to your angular how do you do

226
00:08:51,600 --> 00:08:56,320
it i do this breakfast search here

227
00:08:54,320 --> 00:08:59,360
distance to here two

228
00:08:56,320 --> 00:09:00,959
okay i i notice down two nine distance

229
00:08:59,360 --> 00:09:04,000
here two

230
00:09:00,959 --> 00:09:05,600
here distance one two three four four so

231
00:09:04,000 --> 00:09:07,519
i have to do

232
00:09:05,600 --> 00:09:09,839
three times of personal search in order

233
00:09:07,519 --> 00:09:11,760
to find the shortest distance right

234
00:09:09,839 --> 00:09:13,760
and if we reverse it

235
00:09:11,760 --> 00:09:15,920
if we start refreshing with from the

236
00:09:13,760 --> 00:09:18,000
sauce we hit the leaves and we stop

237
00:09:15,920 --> 00:09:20,080
that's the closest

238
00:09:18,000 --> 00:09:20,959
my approach is better right but yours is

239
00:09:20,080 --> 00:09:23,440
good

240
00:09:20,959 --> 00:09:26,080
that's the first try okay correct me if

241
00:09:23,440 --> 00:09:28,959
you spot any mistake okay i cannot

242
00:09:26,080 --> 00:09:32,800
guarantee the code i write on y bar is

243
00:09:28,959 --> 00:09:34,320
100 correct which means

244
00:09:32,800 --> 00:09:36,959
okay like g

245
00:09:34,320 --> 00:09:36,959
g e

246
00:09:41,120 --> 00:09:44,240
means that

247
00:09:42,160 --> 00:09:46,640
g for example g1

248
00:09:44,240 --> 00:09:48,080
is at least two three

249
00:09:46,640 --> 00:09:51,120
it means that

250
00:09:48,080 --> 00:09:52,720
no one connects to two and no one clicks

251
00:09:51,120 --> 00:09:54,160
to three okay that's what it actually

252
00:09:52,720 --> 00:09:55,440
means okay

253
00:09:54,160 --> 00:09:58,000
so

254
00:09:55,440 --> 00:09:59,680
so we use the definition define default

255
00:09:58,000 --> 00:10:00,880
search definition is quicker to write

256
00:09:59,680 --> 00:10:01,920
than the process search you want to

257
00:10:00,880 --> 00:10:04,240
traversing

258
00:10:01,920 --> 00:10:05,680
just the graph for converting the tree

259
00:10:04,240 --> 00:10:07,440
to the part

260
00:10:05,680 --> 00:10:09,360
so in order to do the use we need to

261
00:10:07,440 --> 00:10:10,640
have a parameter route the camera knob

262
00:10:09,360 --> 00:10:12,959
and it's parent

263
00:10:10,640 --> 00:10:15,440
when we traverse the tree

264
00:10:12,959 --> 00:10:18,240
because it does search from the root we

265
00:10:15,440 --> 00:10:20,640
can find out its parent right so we can

266
00:10:18,240 --> 00:10:24,720
just add it backwards a link right so

267
00:10:20,640 --> 00:10:26,320
look if not root we just repent

268
00:10:24,720 --> 00:10:27,920
okay and then we just do this type of

269
00:10:26,320 --> 00:10:30,320
search loop

270
00:10:27,920 --> 00:10:32,079
turn left okay what's the parent of a

271
00:10:30,320 --> 00:10:34,959
louder left

272
00:10:32,079 --> 00:10:38,320
exactly yeah and what if i i'm going to

273
00:10:34,959 --> 00:10:38,320
travel the number by three

274
00:10:38,959 --> 00:10:43,440
yeah wow

275
00:10:40,640 --> 00:10:46,800
okay and then look if parent even has a

276
00:10:43,440 --> 00:10:46,800
parent then we get a link

277
00:10:50,880 --> 00:10:57,200
and can you guess what's next

278
00:10:53,519 --> 00:10:59,200
right and g1 look i have a loot

279
00:10:57,200 --> 00:11:00,480
i have a parent

280
00:10:59,200 --> 00:11:04,079
so

281
00:11:00,480 --> 00:11:05,839
so i'm adding a link g loot upon parents

282
00:11:04,079 --> 00:11:07,920
this direction g

283
00:11:05,839 --> 00:11:10,640
parent parent dot

284
00:11:07,920 --> 00:11:12,480
append right okay so and at the same

285
00:11:10,640 --> 00:11:14,880
time we should note the

286
00:11:12,480 --> 00:11:16,640
what are the leaves what are these notes

287
00:11:14,880 --> 00:11:18,560
okay so i'm going to put a leaf note

288
00:11:16,640 --> 00:11:21,120
here leaf

289
00:11:18,560 --> 00:11:24,240
leaves equals a set okay

290
00:11:21,120 --> 00:11:27,600
so what counts is a leaf note

291
00:11:24,240 --> 00:11:31,839
if it does not have any kids right yeah

292
00:11:27,600 --> 00:11:31,839
now we just say if not do don't left

293
00:11:32,800 --> 00:11:36,720
and not do the right right if it doesn't

294
00:11:35,279 --> 00:11:38,720
have any

295
00:11:36,720 --> 00:11:42,240
children

296
00:11:38,720 --> 00:11:44,079
then the leaves don't add okay because

297
00:11:42,240 --> 00:11:45,680
it does not have any duplicate numbers

298
00:11:44,079 --> 00:11:47,360
we can use the set yeah oh we're going

299
00:11:45,680 --> 00:11:48,399
to use at least it doesn't matter leave

300
00:11:47,360 --> 00:11:51,279
the add

301
00:11:48,399 --> 00:11:53,600
load of value okay that's a leaf node we

302
00:11:51,279 --> 00:11:56,240
might just be able to

303
00:11:53,600 --> 00:11:58,720
store the values inside because it's

304
00:11:56,240 --> 00:12:01,040
unique to g root of value

305
00:11:58,720 --> 00:12:03,040
parent of value current of value load of

306
00:12:01,040 --> 00:12:04,720
value okay so now we have this graph now

307
00:12:03,040 --> 00:12:06,480
we do this press approach

308
00:12:04,720 --> 00:12:07,519
how do we implement the preferences by

309
00:12:06,480 --> 00:12:11,200
the way

310
00:12:07,519 --> 00:12:15,279
okay qtq yeah we talk about this look so

311
00:12:11,200 --> 00:12:16,320
one just a little bit summary okay four

312
00:12:15,279 --> 00:12:17,839
five

313
00:12:16,320 --> 00:12:20,480
six seven

314
00:12:17,839 --> 00:12:22,000
so we have a q double and q q first in

315
00:12:20,480 --> 00:12:24,399
first out right

316
00:12:22,000 --> 00:12:26,800
and we use the dq double ndq means that

317
00:12:24,399 --> 00:12:27,839
we can we can attend and pop in both

318
00:12:26,800 --> 00:12:30,399
sides

319
00:12:27,839 --> 00:12:32,000
we can use the list in python as a queue

320
00:12:30,399 --> 00:12:34,399
right exactly but

321
00:12:32,000 --> 00:12:36,720
the problem with the list is

322
00:12:34,399 --> 00:12:38,639
is the operation on the left hand side

323
00:12:36,720 --> 00:12:40,480
is very expensive it's linear so we use

324
00:12:38,639 --> 00:12:41,680
the eq

325
00:12:40,480 --> 00:12:44,399
to achieve

326
00:12:41,680 --> 00:12:47,040
one constant the faster operation on

327
00:12:44,399 --> 00:12:48,480
both sides a pen pop

328
00:12:47,040 --> 00:12:51,040
a pen left

329
00:12:48,480 --> 00:12:52,720
top left okay we talk about this when we

330
00:12:51,040 --> 00:12:53,600
want to do this operation on the left we

331
00:12:52,720 --> 00:12:56,079
have to

332
00:12:53,600 --> 00:12:58,240
put the surface left otherwise right

333
00:12:56,079 --> 00:13:00,560
before it's on the right so look

334
00:12:58,240 --> 00:13:02,480
first of all we put a little e1 in we

335
00:13:00,560 --> 00:13:04,839
take it take everything out right or

336
00:13:02,480 --> 00:13:08,480
take one knob out push its kit it's two

337
00:13:04,839 --> 00:13:10,800
three yeah so we can take everything out

338
00:13:08,480 --> 00:13:13,839
and append that kit or we take one out

339
00:13:10,800 --> 00:13:14,800
two it's kid is four five put it back to

340
00:13:13,839 --> 00:13:17,519
the queue

341
00:13:14,800 --> 00:13:20,399
three it's keep is six seven put it back

342
00:13:17,519 --> 00:13:23,200
for you okay so every time we take one

343
00:13:20,399 --> 00:13:25,360
note out or we take everything out we

344
00:13:23,200 --> 00:13:27,519
push their kids back to the queue

345
00:13:25,360 --> 00:13:29,440
they're two ways if we take everything

346
00:13:27,519 --> 00:13:32,000
out of the queue and then we append

347
00:13:29,440 --> 00:13:34,560
their kids back to give that guarantees

348
00:13:32,000 --> 00:13:37,680
that at any time all the notes in the

349
00:13:34,560 --> 00:13:40,560
queue belongs to the same level okay

350
00:13:37,680 --> 00:13:42,720
q equals dq at the beginning we put the

351
00:13:40,560 --> 00:13:43,760
kr k

352
00:13:42,720 --> 00:13:45,120
k is

353
00:13:43,760 --> 00:13:46,720
the target we

354
00:13:45,120 --> 00:13:48,880
want to find k

355
00:13:46,720 --> 00:13:50,560
because we're converting to a to graph

356
00:13:48,880 --> 00:13:52,800
then we need to use the hash set to

357
00:13:50,560 --> 00:13:54,560
remember the notes we visited right

358
00:13:52,800 --> 00:13:57,040
usually for the definition breakfast

359
00:13:54,560 --> 00:13:58,160
search on the tree we don't need to have

360
00:13:57,040 --> 00:14:00,560
these uh

361
00:13:58,160 --> 00:14:02,480
hash table to remember the notes we're

362
00:14:00,560 --> 00:14:05,440
only traveling from the parents to the

363
00:14:02,480 --> 00:14:08,320
kids we don't go back right but after we

364
00:14:05,440 --> 00:14:09,279
convert it to a graph we can go both

365
00:14:08,320 --> 00:14:12,000
ways

366
00:14:09,279 --> 00:14:14,240
right so for example one go to two and

367
00:14:12,000 --> 00:14:16,480
two go to one one go to two two go to

368
00:14:14,240 --> 00:14:19,040
one we don't want that right it's a

369
00:14:16,480 --> 00:14:21,680
waste of time just to do the cycles

370
00:14:19,040 --> 00:14:24,720
so to avoid that we use this notebook to

371
00:14:21,680 --> 00:14:26,959
put down the notes we have visited

372
00:14:24,720 --> 00:14:28,320
in a notebook in a headset okay

373
00:14:26,959 --> 00:14:30,720
so seeing

374
00:14:28,320 --> 00:14:34,399
equal sent visited

375
00:14:30,720 --> 00:14:37,760
y r q okay and with current equals q dot

376
00:14:34,399 --> 00:14:39,920
pop left if the current is in the leaves

377
00:14:37,760 --> 00:14:42,320
right if we follow this node we just

378
00:14:39,920 --> 00:14:44,720
written current then we just find out

379
00:14:42,320 --> 00:14:47,120
what its next note connected to it so

380
00:14:44,720 --> 00:14:48,639
for n in g

381
00:14:47,120 --> 00:14:50,639
current

382
00:14:48,639 --> 00:14:54,240
but before we append it back to the q we

383
00:14:50,639 --> 00:14:55,519
need to find out have we visited right

384
00:14:54,240 --> 00:14:56,839
so if

385
00:14:55,519 --> 00:15:01,519
and

386
00:14:56,839 --> 00:15:03,279
in or if n not in sin if and not in sin

387
00:15:01,519 --> 00:15:07,199
then c

388
00:15:03,279 --> 00:15:08,880
dot at n and q dot append when we put it

389
00:15:07,199 --> 00:15:11,040
back to the key we need to remember the

390
00:15:08,880 --> 00:15:13,120
node we are visiting so let's uh take a

391
00:15:11,040 --> 00:15:15,440
look at this time connective

392
00:15:13,120 --> 00:15:18,079
for converting the tree to the graph we

393
00:15:15,440 --> 00:15:20,560
need to visit all the nodes obviously so

394
00:15:18,079 --> 00:15:23,120
each each node visited once

395
00:15:20,560 --> 00:15:25,120
oh and time here one space is we're

396
00:15:23,120 --> 00:15:29,279
using this dictionary right how many

397
00:15:25,120 --> 00:15:31,519
edges for a binary tree the maximum

398
00:15:29,279 --> 00:15:32,880
look if there are three notes how many

399
00:15:31,519 --> 00:15:34,480
edges

400
00:15:32,880 --> 00:15:36,399
two right

401
00:15:34,480 --> 00:15:37,680
yeah for the three because we can't put

402
00:15:36,399 --> 00:15:40,560
it yeah

403
00:15:37,680 --> 00:15:42,639
this is the maximum number of edges for

404
00:15:40,560 --> 00:15:44,880
one two three four five six seven seven

405
00:15:42,639 --> 00:15:47,600
notes right so how many edges one two

406
00:15:44,880 --> 00:15:50,000
three four five six so if the end note

407
00:15:47,600 --> 00:15:52,160
there are n minus one edges right

408
00:15:50,000 --> 00:15:54,800
the space complexity for storing three

409
00:15:52,160 --> 00:15:56,720
as a graph is also immediate fine

410
00:15:54,800 --> 00:15:59,199
because it's a tree it's not a complex

411
00:15:56,720 --> 00:16:01,440
graph for graph is not a tree for n

412
00:15:59,199 --> 00:16:03,519
nodes how many edges

413
00:16:01,440 --> 00:16:06,480
therefore knows how many edges

414
00:16:03,519 --> 00:16:08,800
the complete graph okay i can put look

415
00:16:06,480 --> 00:16:11,279
how many notes on the edge one two three

416
00:16:08,800 --> 00:16:13,920
four five six edges

417
00:16:11,279 --> 00:16:15,120
right so every time i put another note i

418
00:16:13,920 --> 00:16:18,079
can have uh

419
00:16:15,120 --> 00:16:20,959
n minus one edges okay let me just put

420
00:16:18,079 --> 00:16:24,959
this in the table right so one note zero

421
00:16:20,959 --> 00:16:27,519
edges two notes one edges three notes

422
00:16:24,959 --> 00:16:31,440
three notes

423
00:16:27,519 --> 00:16:31,440
three notes three edges four notes

424
00:16:32,160 --> 00:16:37,040
how many edges six edges right

425
00:16:34,720 --> 00:16:39,600
five notes

426
00:16:37,040 --> 00:16:40,399
finals 10 edges look at do you see this

427
00:16:39,600 --> 00:16:41,839
uh

428
00:16:40,399 --> 00:16:44,000
people in

429
00:16:41,839 --> 00:16:46,480
15 edges right

430
00:16:44,000 --> 00:16:48,720
plus two plus three plus four plus five

431
00:16:46,480 --> 00:16:51,600
okay so the next note is what seven

432
00:16:48,720 --> 00:16:55,199
ounce is 21 edges how do we get this

433
00:16:51,600 --> 00:16:58,800
number one plus two plus

434
00:16:55,199 --> 00:17:01,920
three plus four plus here

435
00:16:58,800 --> 00:17:05,120
here n minus one right so this is the

436
00:17:01,920 --> 00:17:08,640
this is the formula so n minus 1 plus 1

437
00:17:05,120 --> 00:17:11,280
times n minus 1 divided by 2 okay so we

438
00:17:08,640 --> 00:17:13,120
got the square right the space

439
00:17:11,280 --> 00:17:15,600
complexity will be o n square right

440
00:17:13,120 --> 00:17:16,880
performance 3 is o n because for the

441
00:17:15,600 --> 00:17:18,880
tree

442
00:17:16,880 --> 00:17:21,120
we don't have cycles coming back to this

443
00:17:18,880 --> 00:17:24,720
uh for the breakfast search

444
00:17:21,120 --> 00:17:26,880
obviously oh and space owen time right i

445
00:17:24,720 --> 00:17:28,319
want space scene okay

446
00:17:26,880 --> 00:17:30,000
yeah i talked a little bit too much

447
00:17:28,319 --> 00:17:31,679
today okay okay so what have you learned

448
00:17:30,000 --> 00:17:34,000
today what's the problem and how do we

449
00:17:31,679 --> 00:17:37,120
solve it and how many steps are we

450
00:17:34,000 --> 00:17:39,360
solving it come on the last question

451
00:17:37,120 --> 00:17:39,360
guys

452
00:17:40,000 --> 00:17:44,000
what's the problem three

453
00:17:42,080 --> 00:17:46,320
yeah we have three what are we doing

454
00:17:44,000 --> 00:17:48,160
with the tree

455
00:17:46,320 --> 00:17:50,160
yeah we have given okay so we're given

456
00:17:48,160 --> 00:17:52,080
the final tree with the unique numbers

457
00:17:50,160 --> 00:17:55,440
and we also given that no okay we want

458
00:17:52,080 --> 00:17:57,039
to find out the closest leaf node to k

459
00:17:55,440 --> 00:17:59,440
and how do we solve it first of all we

460
00:17:57,039 --> 00:18:01,600
need to convert a tree into a graph and

461
00:17:59,440 --> 00:18:04,160
then we do this breakfast search

462
00:18:01,600 --> 00:18:05,440
on the formula node and then we can find

463
00:18:04,160 --> 00:18:07,440
out we can stop

464
00:18:05,440 --> 00:18:08,960
once we found out the leaf node because

465
00:18:07,440 --> 00:18:10,160
that's the closest using the buffer

466
00:18:08,960 --> 00:18:12,559
search okay

467
00:18:10,160 --> 00:18:15,679
yeah for you know for processors to work

468
00:18:12,559 --> 00:18:18,320
the edges is the weight is all is

469
00:18:15,679 --> 00:18:20,320
uniform it's all one right so it's the

470
00:18:18,320 --> 00:18:22,080
cost of those traveling from one node to

471
00:18:20,320 --> 00:18:24,400
another in the graph

472
00:18:22,080 --> 00:18:27,200
is one it's all equal so that's why we

473
00:18:24,400 --> 00:18:28,880
can apply the preferences to attend the

474
00:18:27,200 --> 00:18:30,160
shortest distance from the note to the

475
00:18:28,880 --> 00:18:32,320
leaf okay

476
00:18:30,160 --> 00:18:34,000
okay let's turn space complexities on

477
00:18:32,320 --> 00:18:35,679
because we're using that

478
00:18:34,000 --> 00:18:38,080
breakfast search and we're using the

479
00:18:35,679 --> 00:18:40,640
deficiencies to traverse uh the tree to

480
00:18:38,080 --> 00:18:43,039
convert a tree into a graph and that's

481
00:18:40,640 --> 00:18:45,200
going to take old on because all the

482
00:18:43,039 --> 00:18:47,360
notes are visited exactly once and then

483
00:18:45,200 --> 00:18:49,360
similar for the breakfast search yeah in

484
00:18:47,360 --> 00:18:51,120
worst case all the notes will be visited

485
00:18:49,360 --> 00:18:52,640
exactly once okay that's it for today

486
00:18:51,120 --> 00:18:55,640
bye-bye

487
00:18:52,640 --> 00:18:55,640
bye-bye

488
00:18:57,360 --> 00:18:59,440
you

