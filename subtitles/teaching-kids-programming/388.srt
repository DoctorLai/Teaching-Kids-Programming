1
00:00:00,480 --> 00:00:03,439
hello hello

2
00:00:03,679 --> 00:00:07,839
are you all right yeah okay

3
00:00:05,680 --> 00:00:09,679
okay so we're given a real numbers like

4
00:00:07,839 --> 00:00:10,719
one two

5
00:00:09,679 --> 00:00:14,880
two

6
00:00:10,719 --> 00:00:16,480
one three four okay so this is array

7
00:00:14,880 --> 00:00:19,680
numbers yeah

8
00:00:16,480 --> 00:00:22,240
and then we also given a k integer

9
00:00:19,680 --> 00:00:24,800
like two

10
00:00:22,240 --> 00:00:25,760
can we find any two distinct index you

11
00:00:24,800 --> 00:00:26,800
know

12
00:00:25,760 --> 00:00:29,599
this thing

13
00:00:26,800 --> 00:00:30,960
b two and two i haven't finished the

14
00:00:29,599 --> 00:00:32,960
this thing how do you describe this

15
00:00:30,960 --> 00:00:33,760
thing do i

16
00:00:32,960 --> 00:00:35,920
do

17
00:00:33,760 --> 00:00:40,160
this thing this thing means that you

18
00:00:35,920 --> 00:00:41,360
need yeah index distinct free and full i

19
00:00:40,160 --> 00:00:44,879
and j

20
00:00:41,360 --> 00:00:45,920
such such what a array i

21
00:00:44,879 --> 00:00:48,160
equal

22
00:00:45,920 --> 00:00:51,280
array j

23
00:00:48,160 --> 00:00:54,399
and also the distance distance

24
00:00:51,280 --> 00:00:55,440
absolute value i minus j is smaller or

25
00:00:54,399 --> 00:00:58,320
equal k

26
00:00:55,440 --> 00:01:00,800
okay yeah so we want to we have to find

27
00:00:58,320 --> 00:01:04,239
out if we can find two index two values

28
00:01:00,800 --> 00:01:06,560
yeah two unique two values so two two

29
00:01:04,239 --> 00:01:07,439
different values okay two different

30
00:01:06,560 --> 00:01:09,439
index

31
00:01:07,439 --> 00:01:11,040
and the values isn't set for number two

32
00:01:09,439 --> 00:01:13,680
and two this is the same

33
00:01:11,040 --> 00:01:16,960
one and one this is the same right and

34
00:01:13,680 --> 00:01:19,439
the distance i and j

35
00:01:16,960 --> 00:01:22,240
yeah the index distance between them is

36
00:01:19,439 --> 00:01:24,560
smaller than equal to k for example two

37
00:01:22,240 --> 00:01:27,040
so look this one and this one yeah it's

38
00:01:24,560 --> 00:01:30,000
okay right we find it because look two

39
00:01:27,040 --> 00:01:32,320
and two the index difference is one and

40
00:01:30,000 --> 00:01:33,680
the value is the same so you can true

41
00:01:32,320 --> 00:01:35,360
okay

42
00:01:33,680 --> 00:01:37,360
yeah make sense

43
00:01:35,360 --> 00:01:39,600
how can we do this problem i mean this

44
00:01:37,360 --> 00:01:42,000
is a simple array problem so we want to

45
00:01:39,600 --> 00:01:44,720
find as long as we want to find two

46
00:01:42,000 --> 00:01:46,159
index well it can do what what what we

47
00:01:44,720 --> 00:01:47,759
can do about it

48
00:01:46,159 --> 00:01:50,720
about the index we want to find out if

49
00:01:47,759 --> 00:01:53,960
left index pair right i and j so we can

50
00:01:50,720 --> 00:01:53,960
do what

51
00:01:56,479 --> 00:02:02,399
two pointers yes we can do pointers but

52
00:01:59,840 --> 00:02:04,479
most intuitively the i and j we want to

53
00:02:02,399 --> 00:02:07,280
find the pair we want to find such pair

54
00:02:04,479 --> 00:02:09,360
index pair i and j so given

55
00:02:07,280 --> 00:02:11,520
as advancing in array okay so there are

56
00:02:09,360 --> 00:02:12,879
an anime in the race so what can we do

57
00:02:11,520 --> 00:02:15,440
about it

58
00:02:12,879 --> 00:02:15,440
what can we do

59
00:02:17,440 --> 00:02:23,520
we can do what the first thing coming to

60
00:02:19,920 --> 00:02:25,040
my your mind is what

61
00:02:23,520 --> 00:02:27,280
yeah we can prove also what's the time

62
00:02:25,040 --> 00:02:29,680
come back stage

63
00:02:27,280 --> 00:02:30,800
oh n square down yeah we talk about that

64
00:02:29,680 --> 00:02:32,560
a lot

65
00:02:30,800 --> 00:02:34,400
and then the second approach as you said

66
00:02:32,560 --> 00:02:36,400
two points yeah two points that works

67
00:02:34,400 --> 00:02:38,560
yeah but how can we do this two pointer

68
00:02:36,400 --> 00:02:38,560
thing

69
00:02:39,360 --> 00:02:41,920
how do how can we do

70
00:02:40,959 --> 00:02:44,319
i mean

71
00:02:41,920 --> 00:02:46,640
the the thing is that we want to find

72
00:02:44,319 --> 00:02:48,400
out if there are

73
00:02:46,640 --> 00:02:50,879
we want to find out what if there are

74
00:02:48,400 --> 00:02:53,840
two some elements which the distance is

75
00:02:50,879 --> 00:02:56,640
less than k right yeah two or one this

76
00:02:53,840 --> 00:02:59,680
one so does that they're storing the

77
00:02:56,640 --> 00:03:02,159
previous index help like some element

78
00:02:59,680 --> 00:03:06,080
for example like if i i'm here

79
00:03:02,159 --> 00:03:08,400
right the the the the previous index of

80
00:03:06,080 --> 00:03:11,360
one is not existent so let's find out so

81
00:03:08,400 --> 00:03:15,280
we stole the first the one the the last

82
00:03:11,360 --> 00:03:17,519
one uh the last index for one is zero

83
00:03:15,280 --> 00:03:19,680
the last index for two

84
00:03:17,519 --> 00:03:23,040
is none but we store it okay

85
00:03:19,680 --> 00:03:24,720
which is one okay now the second two

86
00:03:23,040 --> 00:03:28,640
we are at second two

87
00:03:24,720 --> 00:03:28,640
so what's the last index of two

88
00:03:30,720 --> 00:03:34,959
one one now i'm at index

89
00:03:34,080 --> 00:03:36,640
two

90
00:03:34,959 --> 00:03:37,599
two minus one

91
00:03:36,640 --> 00:03:39,360
one

92
00:03:37,599 --> 00:03:40,319
it's less than

93
00:03:39,360 --> 00:03:43,519
two

94
00:03:40,319 --> 00:03:44,840
so we found it right so as long as we

95
00:03:43,519 --> 00:03:48,799
walk through the

96
00:03:44,840 --> 00:03:50,720
arrays and then keep updating the

97
00:03:48,799 --> 00:03:53,439
index for the last

98
00:03:50,720 --> 00:03:56,159
occurrence of that element and then we

99
00:03:53,439 --> 00:03:57,439
can check by the wrong way right so

100
00:03:56,159 --> 00:03:59,439
that way we can

101
00:03:57,439 --> 00:04:00,959
solve this problem all right so this

102
00:03:59,439 --> 00:04:03,519
time complexity if you're going through

103
00:04:00,959 --> 00:04:06,239
that one's little bit o and linear it's

104
00:04:03,519 --> 00:04:08,000
much quicker than this o n square proof

105
00:04:06,239 --> 00:04:10,000
of thing okay and then the way you talk

106
00:04:08,000 --> 00:04:11,680
about the two pointer is it's so it's

107
00:04:10,000 --> 00:04:13,040
quite interesting yeah it's the third

108
00:04:11,680 --> 00:04:14,720
method which i'm going to talk about

109
00:04:13,040 --> 00:04:16,799
here so

110
00:04:14,720 --> 00:04:17,759
so let's say we want to find out let's

111
00:04:16,799 --> 00:04:20,479
look

112
00:04:17,759 --> 00:04:22,560
so so look the k right so let's talk

113
00:04:20,479 --> 00:04:24,720
about because we want to find out if

114
00:04:22,560 --> 00:04:27,280
there are elements within

115
00:04:24,720 --> 00:04:29,520
the same within this k equals 2 right

116
00:04:27,280 --> 00:04:32,400
the distance so how about we just

117
00:04:29,520 --> 00:04:35,440
maintain a window of size k

118
00:04:32,400 --> 00:04:38,160
right so we we we maintain the size k

119
00:04:35,440 --> 00:04:40,720
and now we move we move right so we use

120
00:04:38,160 --> 00:04:43,759
the set to content to store all the

121
00:04:40,720 --> 00:04:46,240
elements in in the k size window and and

122
00:04:43,759 --> 00:04:48,720
now we're just maintaining that and

123
00:04:46,240 --> 00:04:52,720
we just shift it moving moving moving

124
00:04:48,720 --> 00:04:55,360
okay and now we check if this element is

125
00:04:52,720 --> 00:04:58,160
in in

126
00:04:55,360 --> 00:04:59,040
it's in uh

127
00:04:58,160 --> 00:05:01,440
okay

128
00:04:59,040 --> 00:05:04,880
yeah okay so let's quickly write down

129
00:05:01,440 --> 00:05:04,880
the three approaches

130
00:05:07,280 --> 00:05:11,120
the first approach profoundly

131
00:05:09,440 --> 00:05:15,759
know for the profiling is quite simple

132
00:05:11,120 --> 00:05:15,759
yeah let's say uh check duplicate

133
00:05:18,000 --> 00:05:23,360
this array okay and then first of all we

134
00:05:20,560 --> 00:05:24,639
want to find out that length is length

135
00:05:23,360 --> 00:05:25,919
a-r-r

136
00:05:24,639 --> 00:05:28,320
and i will just tell you how do we

137
00:05:25,919 --> 00:05:29,840
project for i

138
00:05:28,320 --> 00:05:31,759
in

139
00:05:29,840 --> 00:05:32,880
range

140
00:05:31,759 --> 00:05:35,120
and right

141
00:05:32,880 --> 00:05:36,840
and then for j

142
00:05:35,120 --> 00:05:39,600
in

143
00:05:36,840 --> 00:05:42,080
range you can start with i plus one to

144
00:05:39,600 --> 00:05:44,560
your n or you can

145
00:05:42,080 --> 00:05:46,880
you can iterate uh we can iterate the j

146
00:05:44,560 --> 00:05:49,680
up to i it doesn't matter okay so either

147
00:05:46,880 --> 00:05:53,759
you have this i j player or j i pairs

148
00:05:49,680 --> 00:05:57,600
and i will just check if a r r

149
00:05:53,759 --> 00:05:57,600
i equals a r j

150
00:05:57,919 --> 00:06:02,400
n

151
00:05:59,199 --> 00:06:05,280
okay so now this j is less than i so i

152
00:06:02,400 --> 00:06:08,400
minus j is smaller or k

153
00:06:05,280 --> 00:06:08,400
him return true right

154
00:06:08,800 --> 00:06:12,960
and if we sound fine it returns false

155
00:06:10,479 --> 00:06:14,800
yeah simple

156
00:06:12,960 --> 00:06:17,680
right you see this proof of thing is

157
00:06:14,800 --> 00:06:19,680
quite intuitive right look

158
00:06:17,680 --> 00:06:22,080
intuitive yeah

159
00:06:19,680 --> 00:06:24,080
there are n elements in the array

160
00:06:22,080 --> 00:06:26,960
the i index

161
00:06:24,080 --> 00:06:30,639
going up to n the j index

162
00:06:26,960 --> 00:06:32,400
going up to i and if the both elements

163
00:06:30,639 --> 00:06:35,120
because i and j are different right look

164
00:06:32,400 --> 00:06:39,120
i and j are different distinct

165
00:06:35,120 --> 00:06:41,919
and if i uh equal and an i minus j

166
00:06:39,120 --> 00:06:43,840
because i is bigger than j i minus j is

167
00:06:41,919 --> 00:06:46,479
smaller than k

168
00:06:43,840 --> 00:06:49,840
why do i not put the abs here do i need

169
00:06:46,479 --> 00:06:49,840
to put the abs here

170
00:06:51,360 --> 00:06:55,280
do i need to put the abs what's abs

171
00:06:55,360 --> 00:06:59,520
value

172
00:06:56,479 --> 00:07:02,800
but now i i know i is bigger than j so

173
00:06:59,520 --> 00:07:04,319
abs i minus j is the same as i minus j

174
00:07:02,800 --> 00:07:06,000
right yeah

175
00:07:04,319 --> 00:07:07,520
it's a positive number i know so it's

176
00:07:06,000 --> 00:07:09,599
written to allow

177
00:07:07,520 --> 00:07:12,319
okay the first approach okay now the

178
00:07:09,599 --> 00:07:14,960
second approach

179
00:07:12,319 --> 00:07:17,280
define okay i'm not going to write

180
00:07:14,960 --> 00:07:19,039
different okay so now i have a position

181
00:07:17,280 --> 00:07:21,280
position is a

182
00:07:19,039 --> 00:07:24,000
dictionary okay i'm using this

183
00:07:21,280 --> 00:07:27,280
dictionary to store the index for the

184
00:07:24,000 --> 00:07:31,120
la for the for the element last uh the

185
00:07:27,280 --> 00:07:32,319
last index of the element okay so now i

186
00:07:31,120 --> 00:07:36,160
follow

187
00:07:32,319 --> 00:07:37,120
the index the value index value

188
00:07:36,160 --> 00:07:41,800
in

189
00:07:37,120 --> 00:07:41,800
enumerate okay let's enumerate

190
00:07:55,440 --> 00:08:01,360
yeah we're done okay now look if

191
00:07:59,120 --> 00:08:04,560
look if the

192
00:08:01,360 --> 00:08:06,000
now this value yeah if this value

193
00:08:04,560 --> 00:08:09,680
appears

194
00:08:06,000 --> 00:08:12,479
before right in partition and also

195
00:08:09,680 --> 00:08:13,360
the its value is index right its index

196
00:08:12,479 --> 00:08:14,879
is v

197
00:08:13,360 --> 00:08:18,160
position v yeah

198
00:08:14,879 --> 00:08:19,440
but now the index is i i minus position

199
00:08:18,160 --> 00:08:21,360
v

200
00:08:19,440 --> 00:08:23,520
is smaller than k

201
00:08:21,360 --> 00:08:26,080
then we return

202
00:08:23,520 --> 00:08:27,280
return true right now we now we need to

203
00:08:26,080 --> 00:08:30,639
put the

204
00:08:27,280 --> 00:08:32,080
so we now we we want to put the

205
00:08:30,639 --> 00:08:35,680
index

206
00:08:32,080 --> 00:08:37,360
index uh i for the value v so we do what

207
00:08:35,680 --> 00:08:38,640
plus

208
00:08:37,360 --> 00:08:43,039
v

209
00:08:38,640 --> 00:08:43,039
equals i right and then return to

210
00:08:43,919 --> 00:08:47,839
okay you see

211
00:08:45,839 --> 00:08:52,880
is it all right

212
00:08:47,839 --> 00:08:55,279
i index v is very innumerate all right

213
00:08:52,880 --> 00:08:57,200
okay and then look the value has

214
00:08:55,279 --> 00:08:58,800
appeared before

215
00:08:57,200 --> 00:09:00,800
and it's index

216
00:08:58,800 --> 00:09:02,720
because it has appear before the index

217
00:09:00,800 --> 00:09:05,680
is position v right and the current

218
00:09:02,720 --> 00:09:07,600
index is i i minus position v

219
00:09:05,680 --> 00:09:09,279
is the distance if it's smaller than k

220
00:09:07,600 --> 00:09:11,839
return true

221
00:09:09,279 --> 00:09:14,080
right if not i need to remember

222
00:09:11,839 --> 00:09:18,320
the index for the current value v so i

223
00:09:14,080 --> 00:09:19,920
do this position v equals i return true

224
00:09:18,320 --> 00:09:20,800
if we can find it

225
00:09:19,920 --> 00:09:22,640
right

226
00:09:20,800 --> 00:09:24,880
is that okay right

227
00:09:22,640 --> 00:09:27,279
okay the tank and leg stay away right

228
00:09:24,880 --> 00:09:29,519
you're just going through once

229
00:09:27,279 --> 00:09:32,720
space completely yeah

230
00:09:29,519 --> 00:09:32,720
what's the space on this thing

231
00:09:34,399 --> 00:09:37,360
we're using a hashtag

232
00:09:36,560 --> 00:09:40,720
uh

233
00:09:37,360 --> 00:09:42,320
this is not the dictionary hashtag

234
00:09:40,720 --> 00:09:44,800
now the third method

235
00:09:42,320 --> 00:09:47,040
so the method the the size okay let's do

236
00:09:44,800 --> 00:09:50,360
this okay i'm gonna write it here

237
00:09:47,040 --> 00:09:50,360
so far

238
00:09:52,000 --> 00:09:55,200
we have uh

239
00:09:53,279 --> 00:09:56,560
let's say we have uh

240
00:09:55,200 --> 00:09:59,600
employee

241
00:09:56,560 --> 00:10:01,120
so we want to we want to store this uh

242
00:09:59,600 --> 00:10:02,959
data so

243
00:10:01,120 --> 00:10:04,800
in a hash table okay we want to use the

244
00:10:02,959 --> 00:10:07,440
hash table to store

245
00:10:04,800 --> 00:10:09,200
a headset to store the numbers in this

246
00:10:07,440 --> 00:10:12,399
in a window so let's say

247
00:10:09,200 --> 00:10:14,640
data into a set

248
00:10:12,399 --> 00:10:15,440
now i understand for i

249
00:10:14,640 --> 00:10:19,600
v

250
00:10:15,440 --> 00:10:21,279
in enumerate okay this is the same

251
00:10:19,600 --> 00:10:22,640
enumerability what's immunology in

252
00:10:21,279 --> 00:10:24,560
english

253
00:10:22,640 --> 00:10:26,160
what does it mean

254
00:10:24,560 --> 00:10:28,320
i don't know you don't know in human

255
00:10:26,160 --> 00:10:30,000
right what does it mean

256
00:10:28,320 --> 00:10:32,480
it means

257
00:10:30,000 --> 00:10:36,160
okay that's a very good answer yeah

258
00:10:32,480 --> 00:10:36,959
yeah if numerous things okay okay now

259
00:10:36,160 --> 00:10:40,240
look

260
00:10:36,959 --> 00:10:42,240
so now look if i is bigger than k okay

261
00:10:40,240 --> 00:10:43,680
if i is bigger than k then what do we do

262
00:10:42,240 --> 00:10:45,680
because now

263
00:10:43,680 --> 00:10:47,680
if if bigger than k and then i need to

264
00:10:45,680 --> 00:10:48,720
remove we need to remove

265
00:10:47,680 --> 00:10:51,440
the

266
00:10:48,720 --> 00:10:54,160
now look this is the k side

267
00:10:51,440 --> 00:10:56,959
this is a k size window right if i is

268
00:10:54,160 --> 00:10:58,959
bigger than that if i is here

269
00:10:56,959 --> 00:11:01,040
i is here then i need to remove this

270
00:10:58,959 --> 00:11:04,320
from the window right

271
00:11:01,040 --> 00:11:05,680
so now i just need to do a data

272
00:11:04,320 --> 00:11:07,680
don't remove

273
00:11:05,680 --> 00:11:09,760
i need to remove

274
00:11:07,680 --> 00:11:12,399
a r

275
00:11:09,760 --> 00:11:13,600
i minus k minus 1 okay

276
00:11:12,399 --> 00:11:16,480
right

277
00:11:13,600 --> 00:11:19,440
that's the that's this element

278
00:11:16,480 --> 00:11:21,760
i minus k minus one falls out of the

279
00:11:19,440 --> 00:11:23,760
window right look just imagine we have a

280
00:11:21,760 --> 00:11:25,839
window moving window size with k and

281
00:11:23,760 --> 00:11:28,640
moving moving moving moving

282
00:11:25,839 --> 00:11:29,760
so when i moving then i need to ignore

283
00:11:28,640 --> 00:11:31,360
the

284
00:11:29,760 --> 00:11:33,519
the element here outside the window

285
00:11:31,360 --> 00:11:35,760
right that's what it does

286
00:11:33,519 --> 00:11:37,600
and then now i just need to check if we

287
00:11:35,760 --> 00:11:40,399
in data

288
00:11:37,600 --> 00:11:42,720
if we still have this state any v in the

289
00:11:40,399 --> 00:11:43,600
data will return true

290
00:11:42,720 --> 00:11:47,440
all right

291
00:11:43,600 --> 00:11:51,120
then otherwise we just state our dot

292
00:11:47,440 --> 00:11:54,839
a add v okay and then we turn wow three

293
00:11:51,120 --> 00:11:56,480
times what return four

294
00:11:54,839 --> 00:11:58,000
okay

295
00:11:56,480 --> 00:12:00,240
what's the time complexity if you look

296
00:11:58,000 --> 00:12:04,160
at this

297
00:12:00,240 --> 00:12:04,160
if you look at this this problem

298
00:12:04,240 --> 00:12:07,060
all right right what's the term

299
00:12:05,680 --> 00:12:10,150
convexity

300
00:12:07,060 --> 00:12:10,150
[Music]

301
00:12:11,760 --> 00:12:15,040
right what's the space complexity

302
00:12:13,920 --> 00:12:17,040
when

303
00:12:15,040 --> 00:12:19,440
oh when we are using the data do you

304
00:12:17,040 --> 00:12:20,399
understand this approach look

305
00:12:19,440 --> 00:12:23,040
let's

306
00:12:20,399 --> 00:12:25,279
come on come on

307
00:12:23,040 --> 00:12:27,279
i'm going to use write an example okay

308
00:12:25,279 --> 00:12:28,320
like two

309
00:12:27,279 --> 00:12:30,320
one

310
00:12:28,320 --> 00:12:31,760
three

311
00:12:30,320 --> 00:12:33,120
two

312
00:12:31,760 --> 00:12:34,000
five

313
00:12:33,120 --> 00:12:36,959
six

314
00:12:34,000 --> 00:12:39,839
okay this is the array

315
00:12:36,959 --> 00:12:42,480
and now we are looking for

316
00:12:39,839 --> 00:12:46,800
if we can we can find to some element

317
00:12:42,480 --> 00:12:47,839
when the index is smaller than one

318
00:12:46,800 --> 00:12:50,639
three

319
00:12:47,839 --> 00:12:51,680
smaller or equal than three

320
00:12:50,639 --> 00:12:53,440
okay

321
00:12:51,680 --> 00:12:54,240
array is this number

322
00:12:53,440 --> 00:12:55,920
right

323
00:12:54,240 --> 00:12:57,680
so this is simple yeah the first

324
00:12:55,920 --> 00:12:58,800
approach group

325
00:12:57,680 --> 00:12:59,839
yeah

326
00:12:58,800 --> 00:13:03,200
i

327
00:12:59,839 --> 00:13:04,160
and then j here three moving i

328
00:13:03,200 --> 00:13:07,200
j

329
00:13:04,160 --> 00:13:08,160
i j or or the other way is what i

330
00:13:07,200 --> 00:13:09,680
j

331
00:13:08,160 --> 00:13:12,800
i j

332
00:13:09,680 --> 00:13:15,600
i j i j so basically we have proof

333
00:13:12,800 --> 00:13:17,279
within the pairs of i j this is easier

334
00:13:15,600 --> 00:13:19,920
yeah we don't need to talk too much

335
00:13:17,279 --> 00:13:21,760
about it it's slow it's intuitive it's

336
00:13:19,920 --> 00:13:24,000
straightforward right you

337
00:13:21,760 --> 00:13:25,760
it works if the data

338
00:13:24,000 --> 00:13:28,320
even the numbers

339
00:13:25,760 --> 00:13:29,839
the number of numbers is small right so

340
00:13:28,320 --> 00:13:31,279
we can prove it

341
00:13:29,839 --> 00:13:32,320
yeah how do you say the number of

342
00:13:31,279 --> 00:13:34,320
numbers

343
00:13:32,320 --> 00:13:38,000
do you have better way of saying that

344
00:13:34,320 --> 00:13:39,600
the data the data set is more right

345
00:13:38,000 --> 00:13:42,160
yeah this one

346
00:13:39,600 --> 00:13:45,920
the second approach we're using the this

347
00:13:42,160 --> 00:13:49,040
headset uh the dictionary the table

348
00:13:45,920 --> 00:13:51,839
the the half table so we're using test

349
00:13:49,040 --> 00:13:54,079
table to remember that index for the

350
00:13:51,839 --> 00:13:56,160
previous numbers okay so now look the

351
00:13:54,079 --> 00:13:58,720
position here number two

352
00:13:56,160 --> 00:14:01,720
we're at two right i equals zero v is

353
00:13:58,720 --> 00:14:01,720
two

354
00:14:02,079 --> 00:14:06,880
is to appear before now right so i i put

355
00:14:05,040 --> 00:14:10,000
it here position two

356
00:14:06,880 --> 00:14:12,560
equals the index is zero okay now

357
00:14:10,000 --> 00:14:14,240
look this is position

358
00:14:12,560 --> 00:14:17,360
okay position

359
00:14:14,240 --> 00:14:19,839
okay now is one appear before no

360
00:14:17,360 --> 00:14:21,839
all right so i put it there one

361
00:14:19,839 --> 00:14:23,760
position is one

362
00:14:21,839 --> 00:14:26,880
it's three appeared before

363
00:14:23,760 --> 00:14:28,240
no i put a three position is zero one

364
00:14:26,880 --> 00:14:31,440
two

365
00:14:28,240 --> 00:14:34,000
it's two appear before yes okay what's

366
00:14:31,440 --> 00:14:37,279
the what's its value yellow what's color

367
00:14:34,000 --> 00:14:39,920
index cl one two but zero one two three

368
00:14:37,279 --> 00:14:42,639
yeah three minus zero

369
00:14:39,920 --> 00:14:46,320
less than equal and three between two

370
00:14:42,639 --> 00:14:47,760
you got it yeah you got it okay now this

371
00:14:46,320 --> 00:14:49,199
approach

372
00:14:47,760 --> 00:14:52,000
this approach

373
00:14:49,199 --> 00:14:54,560
i must state a set yeah a set contains

374
00:14:52,000 --> 00:14:56,240
the store's unique numbers

375
00:14:54,560 --> 00:14:59,360
yeah

376
00:14:56,240 --> 00:15:02,240
set okay so for example set theta equals

377
00:14:59,360 --> 00:15:05,279
this empty theta dot f1

378
00:15:02,240 --> 00:15:08,240
is one theta dot at two

379
00:15:05,279 --> 00:15:09,920
is two theta f of minus one minus one

380
00:15:08,240 --> 00:15:13,720
theta at two

381
00:15:09,920 --> 00:15:13,720
theta dot f two one

382
00:15:16,260 --> 00:15:21,519
[Music]

383
00:15:19,279 --> 00:15:25,480
minus one now this is a set yeah if i

384
00:15:21,519 --> 00:15:25,480
adding another two will happen

385
00:15:32,880 --> 00:15:36,399
because set contains only unique number

386
00:15:34,800 --> 00:15:37,839
it won't make a difference because two

387
00:15:36,399 --> 00:15:40,800
is already there that's that's a

388
00:15:37,839 --> 00:15:42,480
different set yeah it doesn't store the

389
00:15:40,800 --> 00:15:44,240
duplicate it's all the unique elements

390
00:15:42,480 --> 00:15:46,959
so it doesn't matter okay let's do this

391
00:15:44,240 --> 00:15:47,839
say that okay now i v

392
00:15:46,959 --> 00:15:49,360
i

393
00:15:47,839 --> 00:15:51,040
i is zero

394
00:15:49,360 --> 00:15:52,240
v is two

395
00:15:51,040 --> 00:15:55,199
right

396
00:15:52,240 --> 00:15:57,680
if i index this index is needs to be

397
00:15:55,199 --> 00:16:01,759
bigger than what then three yeah uh what

398
00:15:57,680 --> 00:16:02,720
is what's the yeah k equals here 0 1 2 3

399
00:16:01,759 --> 00:16:04,399
here

400
00:16:02,720 --> 00:16:07,120
so when i

401
00:16:04,399 --> 00:16:08,399
when the index is here we need to go to

402
00:16:07,120 --> 00:16:11,279
go into this

403
00:16:08,399 --> 00:16:12,720
right otherwise we just do it we just

404
00:16:11,279 --> 00:16:14,399
don't okay

405
00:16:12,720 --> 00:16:16,720
uh

406
00:16:14,399 --> 00:16:18,959
so okay but probably this is not a very

407
00:16:16,720 --> 00:16:22,480
good example because the the duplicate

408
00:16:18,959 --> 00:16:25,360
value is is here even before the window

409
00:16:22,480 --> 00:16:27,440
okay zero one two three okay

410
00:16:25,360 --> 00:16:30,560
okay so this is the window size window

411
00:16:27,440 --> 00:16:33,360
so you're already there so look if v in

412
00:16:30,560 --> 00:16:34,160
data not then i do this two

413
00:16:33,360 --> 00:16:36,480
one

414
00:16:34,160 --> 00:16:38,959
three this is the data another two two

415
00:16:36,480 --> 00:16:41,040
is already in data so i return two okay

416
00:16:38,959 --> 00:16:46,079
so probably i need if i

417
00:16:41,040 --> 00:16:46,079
if what if i remem i move these two

418
00:16:46,480 --> 00:16:48,720
uh

419
00:16:49,040 --> 00:16:53,360
no no no uh

420
00:16:51,199 --> 00:16:54,240
two

421
00:16:53,360 --> 00:16:56,000
three

422
00:16:54,240 --> 00:16:59,040
okay and then k

423
00:16:56,000 --> 00:17:01,759
let's say k equals uh

424
00:16:59,040 --> 00:17:03,519
two right k equals two and then lead

425
00:17:01,759 --> 00:17:05,600
this way

426
00:17:03,519 --> 00:17:06,959
k equals 2 then

427
00:17:05,600 --> 00:17:09,679
no no no

428
00:17:06,959 --> 00:17:12,000
but it can't find any okay 3 2 then in

429
00:17:09,679 --> 00:17:13,360
this case it's uncomforting okay now

430
00:17:12,000 --> 00:17:14,959
theta

431
00:17:13,360 --> 00:17:20,079
theta

432
00:17:14,959 --> 00:17:23,360
2 0 1 2 so i needs to be here to

433
00:17:20,079 --> 00:17:24,799
to allow to enter in this right right i

434
00:17:23,360 --> 00:17:28,160
bigger than k okay

435
00:17:24,799 --> 00:17:30,840
if we in data no data is empty data at

436
00:17:28,160 --> 00:17:35,280
the beginning is empty

437
00:17:30,840 --> 00:17:39,039
okay data at two okay

438
00:17:35,280 --> 00:17:40,000
okay one is one in the data no so i have

439
00:17:39,039 --> 00:17:42,880
a one

440
00:17:40,000 --> 00:17:44,480
three in the data no okay now here

441
00:17:42,880 --> 00:17:45,360
look we are we are arriving at this

442
00:17:44,480 --> 00:17:48,080
point

443
00:17:45,360 --> 00:17:50,160
is more than k right it's more than k

444
00:17:48,080 --> 00:17:51,840
so we need to remove

445
00:17:50,160 --> 00:17:54,320
these

446
00:17:51,840 --> 00:17:57,200
we need to remove these

447
00:17:54,320 --> 00:18:00,880
from from that set so i remove it and i

448
00:17:57,200 --> 00:18:02,960
check if 2 is in in here

449
00:18:00,880 --> 00:18:05,600
it's not right because i just remove it

450
00:18:02,960 --> 00:18:08,559
because this value is already 4

451
00:18:05,600 --> 00:18:11,200
is already far be far away so we need to

452
00:18:08,559 --> 00:18:13,520
remove it from the set from the window

453
00:18:11,200 --> 00:18:14,960
all right and then i need to add it to

454
00:18:13,520 --> 00:18:17,200
here

455
00:18:14,960 --> 00:18:20,240
okay again

456
00:18:17,200 --> 00:18:22,720
now i need to remove one from the window

457
00:18:20,240 --> 00:18:23,520
and add a five then i need to remove

458
00:18:22,720 --> 00:18:26,480
three

459
00:18:23,520 --> 00:18:30,559
from the window and add six so

460
00:18:26,480 --> 00:18:33,760
at any time the data stores the elements

461
00:18:30,559 --> 00:18:36,240
in the k in the case right so why is

462
00:18:33,760 --> 00:18:39,200
that because the numbers

463
00:18:36,240 --> 00:18:40,640
in the in the set in the window is less

464
00:18:39,200 --> 00:18:43,840
than k

465
00:18:40,640 --> 00:18:45,760
steps away right so then we can check if

466
00:18:43,840 --> 00:18:47,200
it's in the data and return true why

467
00:18:45,760 --> 00:18:49,120
this is quite obvious

468
00:18:47,200 --> 00:18:51,679
otherwise we add it right so every time

469
00:18:49,120 --> 00:18:53,280
we remove these what's this what's this

470
00:18:51,679 --> 00:18:55,679
number

471
00:18:53,280 --> 00:18:57,840
what's this number

472
00:18:55,679 --> 00:19:00,160
so i'm here what's this number

473
00:18:57,840 --> 00:19:01,679
that's two yeah i'm here what's this

474
00:19:00,160 --> 00:19:03,600
number

475
00:19:01,679 --> 00:19:07,120
oh that's right

476
00:19:03,600 --> 00:19:08,640
i'm here this is the one what's here

477
00:19:07,120 --> 00:19:12,799
i'm here what's the

478
00:19:08,640 --> 00:19:12,799
number to remove if k equals 2

479
00:19:17,280 --> 00:19:22,559
k equals 2 what's the number

480
00:19:19,840 --> 00:19:25,120
i minus 2 minus 1 what's the i minus 2

481
00:19:22,559 --> 00:19:25,120
minus one

482
00:19:27,919 --> 00:19:34,320
yeah so what's this what's this window

483
00:19:30,559 --> 00:19:34,320
about one two

484
00:19:34,640 --> 00:19:40,960
what i'm asking is that

485
00:19:38,160 --> 00:19:44,880
i am an i

486
00:19:40,960 --> 00:19:46,320
and k i this data store the data stores

487
00:19:44,880 --> 00:19:49,039
the numbers

488
00:19:46,320 --> 00:19:50,960
within the k step

489
00:19:49,039 --> 00:19:53,520
so i have to remove

490
00:19:50,960 --> 00:19:55,600
this number what's this number

491
00:19:53,520 --> 00:19:58,799
so i'm here what what's number what

492
00:19:55,600 --> 00:20:00,480
numbers i should remove from the data

493
00:19:58,799 --> 00:20:02,400
i'm here what numbers you have to move

494
00:20:00,480 --> 00:20:04,400
they have two two

495
00:20:02,400 --> 00:20:06,799
yeah i'm here what number should i do

496
00:20:04,400 --> 00:20:06,799
say that

497
00:20:11,840 --> 00:20:16,559
what's the number i should remove yeah

498
00:20:13,840 --> 00:20:18,400
exactly like you see because look

499
00:20:16,559 --> 00:20:21,360
it's like a trend

500
00:20:18,400 --> 00:20:24,480
moving right this is a size k

501
00:20:21,360 --> 00:20:27,600
when i move one step from to the right

502
00:20:24,480 --> 00:20:30,080
so this is the number i need to

503
00:20:27,600 --> 00:20:32,320
remove it from the window am i right

504
00:20:30,080 --> 00:20:33,200
yeah make sense

505
00:20:32,320 --> 00:20:36,080
yeah

506
00:20:33,200 --> 00:20:38,400
okay ryan doesn't make sense

507
00:20:36,080 --> 00:20:40,240
okay so which one you think is better

508
00:20:38,400 --> 00:20:42,240
it's the best

509
00:20:40,240 --> 00:20:43,360
there are three blue problem this one

510
00:20:42,240 --> 00:20:45,360
this one

511
00:20:43,360 --> 00:20:47,200
definitely not blue

512
00:20:45,360 --> 00:20:49,120
that's the very good answer but how

513
00:20:47,200 --> 00:20:50,559
about these two which one do you have

514
00:20:49,120 --> 00:20:52,640
preference

515
00:20:50,559 --> 00:20:54,720
or you say it's the same

516
00:20:52,640 --> 00:20:56,640
it's the same because it's the same yeah

517
00:20:54,720 --> 00:20:58,320
just different way of thinking

518
00:20:56,640 --> 00:21:00,480
this is useful

519
00:20:58,320 --> 00:21:03,120
hashtag to store the numbers with the

520
00:21:00,480 --> 00:21:07,200
window k size k this one we're

521
00:21:03,120 --> 00:21:08,559
remembering the index of last appearing

522
00:21:07,200 --> 00:21:10,960
the number

523
00:21:08,559 --> 00:21:13,039
yeah the last index of the number and we

524
00:21:10,960 --> 00:21:15,600
can just do the calculation

525
00:21:13,039 --> 00:21:17,600
okay and this one because look we

526
00:21:15,600 --> 00:21:19,919
because the data

527
00:21:17,600 --> 00:21:22,240
yeah the numbers in the data are less

528
00:21:19,919 --> 00:21:24,720
than k that's not an equal k so i don't

529
00:21:22,240 --> 00:21:27,360
need to do this if uh

530
00:21:24,720 --> 00:21:29,440
i don't i don't need to do this

531
00:21:27,360 --> 00:21:31,840
i minus i don't need to check the index

532
00:21:29,440 --> 00:21:33,919
here because all the index in the data

533
00:21:31,840 --> 00:21:36,640
all the data in the all the numbers in

534
00:21:33,919 --> 00:21:38,799
the data are k less than k that's all

535
00:21:36,640 --> 00:21:41,120
then equal k so i just have to check the

536
00:21:38,799 --> 00:21:43,679
numbers in that right okay so this is

537
00:21:41,120 --> 00:21:45,840
two way of thinking okay a little bit of

538
00:21:43,679 --> 00:21:48,720
the day good job bye bye bye

539
00:21:45,840 --> 00:21:48,720
bye

