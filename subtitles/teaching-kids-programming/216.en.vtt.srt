1
00:00:00,080 --> 00:00:03,510

go hello hello mr all right

2
00:00:03,510 --> 00:00:03,520
go hello hello mr all right
 

3
00:00:03,520 --> 00:00:05,590
go hello hello mr all right
yeah okay so today we are going to talk

4
00:00:05,590 --> 00:00:05,600
yeah okay so today we are going to talk
 

5
00:00:05,600 --> 00:00:06,710
yeah okay so today we are going to talk
about the

6
00:00:06,710 --> 00:00:06,720
about the
 

7
00:00:06,720 --> 00:00:08,629
about the
binary tree how can we check if two

8
00:00:08,629 --> 00:00:08,639
binary tree how can we check if two
 

9
00:00:08,639 --> 00:00:10,709
binary tree how can we check if two
trees are the same final industries

10
00:00:10,709 --> 00:00:10,719
trees are the same final industries
 

11
00:00:10,719 --> 00:00:15,829
trees are the same final industries
right just check can you stand up

12
00:00:15,829 --> 00:00:15,839
right just check can you stand up
 

13
00:00:15,839 --> 00:00:18,310
right just check can you stand up
yeah so at least two minutes three

14
00:00:18,310 --> 00:00:18,320
yeah so at least two minutes three
 

15
00:00:18,320 --> 00:00:19,590
yeah so at least two minutes three
percent

16
00:00:19,590 --> 00:00:19,600
percent
 

17
00:00:19,600 --> 00:00:22,390
percent
are these two five and two the same um

18
00:00:22,390 --> 00:00:22,400
are these two five and two the same um
 

19
00:00:22,400 --> 00:00:22,870
are these two five and two the same um
nine

20
00:00:22,870 --> 00:00:22,880
nine
 

21
00:00:22,880 --> 00:00:24,870
nine
why why is that oh because one hundred

22
00:00:24,870 --> 00:00:24,880
why why is that oh because one hundred
 

23
00:00:24,880 --> 00:00:26,310
why why is that oh because one hundred
three and one doesn't mean

24
00:00:26,310 --> 00:00:26,320
three and one doesn't mean
 

25
00:00:26,320 --> 00:00:28,390
three and one doesn't mean
okay so the number nodes are different

26
00:00:28,390 --> 00:00:28,400
okay so the number nodes are different
 

27
00:00:28,400 --> 00:00:29,669
okay so the number nodes are different
so they're definitely not a

28
00:00:29,669 --> 00:00:29,679
so they're definitely not a
 

29
00:00:29,679 --> 00:00:32,630
so they're definitely not a
equal same binary okay how how about

30
00:00:32,630 --> 00:00:32,640
equal same binary okay how how about
 

31
00:00:32,640 --> 00:00:33,990
equal same binary okay how how about
this

32
00:00:33,990 --> 00:00:34,000
this
 

33
00:00:34,000 --> 00:00:37,270
this
i like the same no why is that nice

34
00:00:37,270 --> 00:00:37,280
i like the same no why is that nice
 

35
00:00:37,280 --> 00:00:42,950
i like the same no why is that nice
sorry sorry which one come on

36
00:00:42,950 --> 00:00:42,960

 

37
00:00:42,960 --> 00:00:45,110

this no the values is different so so

38
00:00:45,110 --> 00:00:45,120
this no the values is different so so
 

39
00:00:45,120 --> 00:00:46,310
this no the values is different so so
there are two things we need to check

40
00:00:46,310 --> 00:00:46,320
there are two things we need to check
 

41
00:00:46,320 --> 00:00:48,389
there are two things we need to check
the values yeah the values

42
00:00:48,389 --> 00:00:48,399
the values yeah the values
 

43
00:00:48,399 --> 00:00:52,069
the values yeah the values
the values of the the corresponding node

44
00:00:52,069 --> 00:00:52,079
the values of the the corresponding node
 

45
00:00:52,079 --> 00:00:53,910
the values of the the corresponding node
should be the same and the structure the

46
00:00:53,910 --> 00:00:53,920
should be the same and the structure the
 

47
00:00:53,920 --> 00:00:55,590
should be the same and the structure the
second thing is the structure yeah if

48
00:00:55,590 --> 00:00:55,600
second thing is the structure yeah if
 

49
00:00:55,600 --> 00:00:55,910
second thing is the structure yeah if
the

50
00:00:55,910 --> 00:00:55,920
the
 

51
00:00:55,920 --> 00:00:59,430
the
node if a tree has a left tree

52
00:00:59,430 --> 00:00:59,440
node if a tree has a left tree
 

53
00:00:59,440 --> 00:01:01,510
node if a tree has a left tree
and the other tree doesn't have left

54
00:01:01,510 --> 00:01:01,520
and the other tree doesn't have left
 

55
00:01:01,520 --> 00:01:03,750
and the other tree doesn't have left
tree it's not equal right all right

56
00:01:03,750 --> 00:01:03,760
tree it's not equal right all right
 

57
00:01:03,760 --> 00:01:06,950
tree it's not equal right all right
yeah okay so let's let's

58
00:01:06,950 --> 00:01:06,960
yeah okay so let's let's
 

59
00:01:06,960 --> 00:01:10,310
yeah okay so let's let's
implement it um using what kind of the

60
00:01:10,310 --> 00:01:10,320
implement it um using what kind of the
 

61
00:01:10,320 --> 00:01:12,149
implement it um using what kind of the
algorithm can we use to implement

62
00:01:12,149 --> 00:01:12,159
algorithm can we use to implement
 

63
00:01:12,159 --> 00:01:14,230
algorithm can we use to implement
to to check if two trees are the same or

64
00:01:14,230 --> 00:01:14,240
to to check if two trees are the same or
 

65
00:01:14,240 --> 00:01:15,270
to to check if two trees are the same or
not

66
00:01:15,270 --> 00:01:15,280
not
 

67
00:01:15,280 --> 00:01:19,590
not
um yeah the network sorry

68
00:01:19,590 --> 00:01:19,600
um yeah the network sorry
 

69
00:01:19,600 --> 00:01:21,830
um yeah the network sorry
differences definitely your preferences

70
00:01:21,830 --> 00:01:21,840
differences definitely your preferences
 

71
00:01:21,840 --> 00:01:23,830
differences definitely your preferences
both okay okay so that today we're

72
00:01:23,830 --> 00:01:23,840
both okay okay so that today we're
 

73
00:01:23,840 --> 00:01:25,990
both okay okay so that today we're
going to use the definitions because

74
00:01:25,990 --> 00:01:26,000
going to use the definitions because
 

75
00:01:26,000 --> 00:01:27,990
going to use the definitions because
it's easier to implement okay let's say

76
00:01:27,990 --> 00:01:28,000
it's easier to implement okay let's say
 

77
00:01:28,000 --> 00:01:31,990
it's easier to implement okay let's say
define and we're going to pass two

78
00:01:31,990 --> 00:01:32,000
define and we're going to pass two
 

79
00:01:32,000 --> 00:01:33,030
define and we're going to pass two
parameters yeah a

80
00:01:33,030 --> 00:01:33,040
parameters yeah a
 

81
00:01:33,040 --> 00:01:35,670
parameters yeah a
and b three okay and b column okay so

82
00:01:35,670 --> 00:01:35,680
and b three okay and b column okay so
 

83
00:01:35,680 --> 00:01:36,710
and b three okay and b column okay so
what should we check

84
00:01:36,710 --> 00:01:36,720
what should we check
 

85
00:01:36,720 --> 00:01:39,830
what should we check
first we shall check um the root yeah

86
00:01:39,830 --> 00:01:39,840
first we shall check um the root yeah
 

87
00:01:39,840 --> 00:01:40,630
first we shall check um the root yeah
the load of a

88
00:01:40,630 --> 00:01:40,640
the load of a
 

89
00:01:40,640 --> 00:01:43,670
the load of a
and b okay so what the if if one of them

90
00:01:43,670 --> 00:01:43,680
and b okay so what the if if one of them
 

91
00:01:43,680 --> 00:01:45,270
and b okay so what the if if one of them
is empty what happened

92
00:01:45,270 --> 00:01:45,280
is empty what happened
 

93
00:01:45,280 --> 00:01:48,550
is empty what happened
um and one of them is no yeah

94
00:01:48,550 --> 00:01:48,560
um and one of them is no yeah
 

95
00:01:48,560 --> 00:01:52,389
um and one of them is no yeah
if both names are empty okay so first of

96
00:01:52,389 --> 00:01:52,399
if both names are empty okay so first of
 

97
00:01:52,399 --> 00:01:53,670
if both names are empty okay so first of
all we need to check for

98
00:01:53,670 --> 00:01:53,680
all we need to check for
 

99
00:01:53,680 --> 00:01:56,709
all we need to check for
if both three are empty if a is

100
00:01:56,709 --> 00:01:56,719
if both three are empty if a is
 

101
00:01:56,719 --> 00:01:59,749
if both three are empty if a is
noun and

102
00:01:59,749 --> 00:01:59,759
noun and
 

103
00:01:59,759 --> 00:02:02,870
noun and
i what b is known so yeah what what do

104
00:02:02,870 --> 00:02:02,880
i what b is known so yeah what what do
 

105
00:02:02,880 --> 00:02:03,109
i what b is known so yeah what what do
you

106
00:02:03,109 --> 00:02:03,119
you
 

107
00:02:03,119 --> 00:02:06,149
you
put here b is none

108
00:02:06,149 --> 00:02:06,159
put here b is none
 

109
00:02:06,159 --> 00:02:09,910
put here b is none
what do you put here oh oh

110
00:02:09,910 --> 00:02:09,920
what do you put here oh oh
 

111
00:02:09,920 --> 00:02:13,430
what do you put here oh oh
yeah which were first and end first

112
00:02:13,430 --> 00:02:13,440
yeah which were first and end first
 

113
00:02:13,440 --> 00:02:16,949
yeah which were first and end first
and now we'll be turning one

114
00:02:16,949 --> 00:02:16,959

 

115
00:02:16,959 --> 00:02:19,270

if both are not written right yeah

116
00:02:19,270 --> 00:02:19,280
if both are not written right yeah
 

117
00:02:19,280 --> 00:02:19,990
if both are not written right yeah
because

118
00:02:19,990 --> 00:02:20,000
because
 

119
00:02:20,000 --> 00:02:22,309
because
empty equals empty okay and then one of

120
00:02:22,309 --> 00:02:22,319
empty equals empty okay and then one of
 

121
00:02:22,319 --> 00:02:24,070
empty equals empty okay and then one of
them is empty how can i write it

122
00:02:24,070 --> 00:02:24,080
them is empty how can i write it
 

123
00:02:24,080 --> 00:02:27,110
them is empty how can i write it
if at this point at this point what does

124
00:02:27,110 --> 00:02:27,120
if at this point at this point what does
 

125
00:02:27,120 --> 00:02:27,670
if at this point at this point what does
it mean

126
00:02:27,670 --> 00:02:27,680
it mean
 

127
00:02:27,680 --> 00:02:30,869
it mean
is is a

128
00:02:30,869 --> 00:02:30,879
is is a
 

129
00:02:30,879 --> 00:02:33,990
is is a
so not both three are not

130
00:02:33,990 --> 00:02:34,000
so not both three are not
 

131
00:02:34,000 --> 00:02:37,350
so not both three are not
empty at the center right so what should

132
00:02:37,350 --> 00:02:37,360
empty at the center right so what should
 

133
00:02:37,360 --> 00:02:39,190
empty at the center right so what should
i do if one of them is empty yeah

134
00:02:39,190 --> 00:02:39,200
i do if one of them is empty yeah
 

135
00:02:39,200 --> 00:02:42,390
i do if one of them is empty yeah
if a is now

136
00:02:42,390 --> 00:02:42,400

 

137
00:02:42,400 --> 00:02:45,509

b is now what should i put here

138
00:02:45,509 --> 00:02:45,519
b is now what should i put here
 

139
00:02:45,519 --> 00:02:49,509
b is now what should i put here
oh and then return what b10 yeah because

140
00:02:49,509 --> 00:02:49,519
oh and then return what b10 yeah because
 

141
00:02:49,519 --> 00:02:53,110
oh and then return what b10 yeah because
at this point if a is now then b is not

142
00:02:53,110 --> 00:02:53,120
at this point if a is now then b is not
 

143
00:02:53,120 --> 00:02:53,750
at this point if a is now then b is not
long right

144
00:02:53,750 --> 00:02:53,760
long right
 

145
00:02:53,760 --> 00:02:56,949
long right
if b is not a is not number right yeah

146
00:02:56,949 --> 00:02:56,959
if b is not a is not number right yeah
 

147
00:02:56,959 --> 00:03:00,309
if b is not a is not number right yeah
if a note compares to noun it's false

148
00:03:00,309 --> 00:03:00,319
if a note compares to noun it's false
 

149
00:03:00,319 --> 00:03:01,190
if a note compares to noun it's false
right

150
00:03:01,190 --> 00:03:01,200
right
 

151
00:03:01,200 --> 00:03:02,710
right
okay then at this point what should we

152
00:03:02,710 --> 00:03:02,720
okay then at this point what should we
 

153
00:03:02,720 --> 00:03:05,750
okay then at this point what should we
do what should we check next

154
00:03:05,750 --> 00:03:05,760
do what should we check next
 

155
00:03:05,760 --> 00:03:09,190
do what should we check next
we shall check the rate the value yeah

156
00:03:09,190 --> 00:03:09,200
we shall check the rate the value yeah
 

157
00:03:09,200 --> 00:03:14,630
we shall check the rate the value yeah
so how can i tell you if what

158
00:03:14,630 --> 00:03:14,640

 

159
00:03:14,640 --> 00:03:18,630

what if what return first can you tell

160
00:03:18,630 --> 00:03:18,640
what if what return first can you tell
 

161
00:03:18,640 --> 00:03:20,790
what if what return first can you tell
me

162
00:03:20,790 --> 00:03:20,800
me
 

163
00:03:20,800 --> 00:03:24,550
me
yeah it's what

164
00:03:24,550 --> 00:03:24,560

 

165
00:03:24,560 --> 00:03:27,830

the aim is a a

166
00:03:27,830 --> 00:03:27,840
the aim is a a
 

167
00:03:27,840 --> 00:03:39,350
the aim is a a
what the value the value what

168
00:03:39,350 --> 00:03:39,360

 

169
00:03:39,360 --> 00:03:42,229

and then now so these three at this

170
00:03:42,229 --> 00:03:42,239
and then now so these three at this
 

171
00:03:42,239 --> 00:03:43,270
and then now so these three at this
point a and b

172
00:03:43,270 --> 00:03:43,280
point a and b
 

173
00:03:43,280 --> 00:03:45,509
point a and b
the root is the same here right what

174
00:03:45,509 --> 00:03:45,519
the root is the same here right what
 

175
00:03:45,519 --> 00:03:46,309
the root is the same here right what
should i check

176
00:03:46,309 --> 00:03:46,319
should i check
 

177
00:03:46,319 --> 00:03:49,910
should i check
what should i check now

178
00:03:49,910 --> 00:03:49,920

 

179
00:03:49,920 --> 00:03:51,830

the left and the right and how can we

180
00:03:51,830 --> 00:03:51,840
the left and the right and how can we
 

181
00:03:51,840 --> 00:03:54,869
the left and the right and how can we
check the left and right

182
00:03:54,869 --> 00:03:54,879

 

183
00:03:54,879 --> 00:03:58,390

um what's the word how can we check if

184
00:03:58,390 --> 00:03:58,400
um what's the word how can we check if
 

185
00:03:58,400 --> 00:03:58,949
um what's the word how can we check if
we

186
00:03:58,949 --> 00:03:58,959
we
 

187
00:03:58,959 --> 00:04:03,429
we
what how can we three

188
00:04:03,429 --> 00:04:03,439
what how can we three
 

189
00:04:03,439 --> 00:04:05,110
what how can we three
how can we check the left tree and the

190
00:04:05,110 --> 00:04:05,120
how can we check the left tree and the
 

191
00:04:05,120 --> 00:04:07,670
how can we check the left tree and the
right tree

192
00:04:07,670 --> 00:04:07,680
right tree
 

193
00:04:07,680 --> 00:04:11,509
right tree
so what should we do now um

194
00:04:11,509 --> 00:04:11,519

 

195
00:04:11,519 --> 00:04:14,550

what should we do we show because the

196
00:04:14,550 --> 00:04:14,560
what should we do we show because the
 

197
00:04:14,560 --> 00:04:16,550
what should we do we show because the
tree is recursionally defined yeah

198
00:04:16,550 --> 00:04:16,560
tree is recursionally defined yeah
 

199
00:04:16,560 --> 00:04:17,349
tree is recursionally defined yeah
because

200
00:04:17,349 --> 00:04:17,359
because
 

201
00:04:17,359 --> 00:04:19,110
because
yeah yeah the question so we are calling

202
00:04:19,110 --> 00:04:19,120
yeah yeah the question so we are calling
 

203
00:04:19,120 --> 00:04:21,349
yeah yeah the question so we are calling
this function to check the level right

204
00:04:21,349 --> 00:04:21,359
this function to check the level right
 

205
00:04:21,359 --> 00:04:26,070
this function to check the level right
yeah how can we write it return

206
00:04:26,070 --> 00:04:26,080
yeah how can we write it return
 

207
00:04:26,080 --> 00:04:29,990
yeah how can we write it return
something and something can you tell me

208
00:04:29,990 --> 00:04:30,000

 

209
00:04:30,000 --> 00:04:31,990

i need something involved the same

210
00:04:31,990 --> 00:04:32,000
i need something involved the same
 

211
00:04:32,000 --> 00:04:33,270
i need something involved the same
calling the same

212
00:04:33,270 --> 00:04:33,280
calling the same
 

213
00:04:33,280 --> 00:04:36,390
calling the same
written what come on you've checked in

214
00:04:36,390 --> 00:04:36,400
written what come on you've checked in
 

215
00:04:36,400 --> 00:04:36,950
written what come on you've checked in
the rules

216
00:04:36,950 --> 00:04:36,960
the rules
 

217
00:04:36,960 --> 00:04:54,830
the rules
ready yeah we want to call it

218
00:04:54,830 --> 00:04:54,840

 

219
00:04:54,840 --> 00:04:56,320

is

220
00:04:56,320 --> 00:04:56,330
is
 

221
00:04:56,330 --> 00:05:04,200
is
[Music]

222
00:05:04,200 --> 00:05:04,210

 

223
00:05:04,210 --> 00:05:09,110

[Music]

224
00:05:09,110 --> 00:05:09,120

 

225
00:05:09,120 --> 00:05:11,270

three and the right trig we are checking

226
00:05:11,270 --> 00:05:11,280
three and the right trig we are checking
 

227
00:05:11,280 --> 00:05:12,310
three and the right trig we are checking
we are comparing the

228
00:05:12,310 --> 00:05:12,320
we are comparing the
 

229
00:05:12,320 --> 00:05:13,909
we are comparing the
both the left three yeah we don't know

230
00:05:13,909 --> 00:05:13,919
both the left three yeah we don't know
 

231
00:05:13,919 --> 00:05:15,830
both the left three yeah we don't know
how big the left tree is but we're

232
00:05:15,830 --> 00:05:15,840
how big the left tree is but we're
 

233
00:05:15,840 --> 00:05:16,390
how big the left tree is but we're
calling

234
00:05:16,390 --> 00:05:16,400
calling
 

235
00:05:16,400 --> 00:05:18,230
calling
this recursion function to check that

236
00:05:18,230 --> 00:05:18,240
this recursion function to check that
 

237
00:05:18,240 --> 00:05:19,590
this recursion function to check that
three and then we just write it

238
00:05:19,590 --> 00:05:19,600
three and then we just write it
 

239
00:05:19,600 --> 00:05:24,150
three and then we just write it
both needs to be the same right yeah

240
00:05:24,150 --> 00:05:24,160
both needs to be the same right yeah
 

241
00:05:24,160 --> 00:05:27,830
both needs to be the same right yeah
why this is working because look a tree

242
00:05:27,830 --> 00:05:27,840
why this is working because look a tree
 

243
00:05:27,840 --> 00:05:30,469
why this is working because look a tree
two trees are equal if the notes are

244
00:05:30,469 --> 00:05:30,479
two trees are equal if the notes are
 

245
00:05:30,479 --> 00:05:31,110
two trees are equal if the notes are
equal

246
00:05:31,110 --> 00:05:31,120
equal
 

247
00:05:31,120 --> 00:05:33,830
equal
and their left trees are equal and then

248
00:05:33,830 --> 00:05:33,840
and their left trees are equal and then
 

249
00:05:33,840 --> 00:05:35,430
and their left trees are equal and then
both their right trees are equal am

250
00:05:35,430 --> 00:05:35,440
both their right trees are equal am
 

251
00:05:35,440 --> 00:05:35,909
both their right trees are equal am
right

252
00:05:35,909 --> 00:05:35,919
right
 

253
00:05:35,919 --> 00:05:39,189
right
doesn't make sense yeah is this is the

254
00:05:39,189 --> 00:05:39,199
doesn't make sense yeah is this is the
 

255
00:05:39,199 --> 00:05:42,469
doesn't make sense yeah is this is the
what's the time complexity if that

256
00:05:42,469 --> 00:05:42,479
what's the time complexity if that
 

257
00:05:42,479 --> 00:05:45,270
what's the time complexity if that
if there are any nodes in a and m nodes

258
00:05:45,270 --> 00:05:45,280
if there are any nodes in a and m nodes
 

259
00:05:45,280 --> 00:05:45,990
if there are any nodes in a and m nodes
in b

260
00:05:45,990 --> 00:05:46,000
in b
 

261
00:05:46,000 --> 00:05:51,990
in b
what's the time complexity

262
00:05:51,990 --> 00:05:52,000
what's the time complexity
 

263
00:05:52,000 --> 00:05:54,230
what's the time complexity
do we need to check and then if the node

264
00:05:54,230 --> 00:05:54,240
do we need to check and then if the node
 

265
00:05:54,240 --> 00:05:55,270
do we need to check and then if the node
is one

266
00:05:55,270 --> 00:05:55,280
is one
 

267
00:05:55,280 --> 00:05:57,510
is one
there's one node in one tree and then a

268
00:05:57,510 --> 00:05:57,520
there's one node in one tree and then a
 

269
00:05:57,520 --> 00:05:59,189
there's one node in one tree and then a
minion node in

270
00:05:59,189 --> 00:05:59,199
minion node in
 

271
00:05:59,199 --> 00:06:01,909
minion node in
in the second tree so how many nodes do

272
00:06:01,909 --> 00:06:01,919
in the second tree so how many nodes do
 

273
00:06:01,919 --> 00:06:02,710
in the second tree so how many nodes do
we need to check

274
00:06:02,710 --> 00:06:02,720
we need to check
 

275
00:06:02,720 --> 00:06:13,430
we need to check
how about minimum

276
00:06:13,430 --> 00:06:13,440

 

277
00:06:13,440 --> 00:06:15,350

we just need to check the minimum yeah

278
00:06:15,350 --> 00:06:15,360
we just need to check the minimum yeah
 

279
00:06:15,360 --> 00:06:17,189
we just need to check the minimum yeah
if we if

280
00:06:17,189 --> 00:06:17,199
if we if
 

281
00:06:17,199 --> 00:06:19,510
if we if
we don't need to check one million no

282
00:06:19,510 --> 00:06:19,520
we don't need to check one million no
 

283
00:06:19,520 --> 00:06:21,749
we don't need to check one million no
why because it will tell us first

284
00:06:21,749 --> 00:06:21,759
why because it will tell us first
 

285
00:06:21,759 --> 00:06:24,629
why because it will tell us first
once the one tree is finished yeah but

286
00:06:24,629 --> 00:06:24,639
once the one tree is finished yeah but
 

287
00:06:24,639 --> 00:06:26,150
once the one tree is finished yeah but
in the worst case yeah

288
00:06:26,150 --> 00:06:26,160
in the worst case yeah
 

289
00:06:26,160 --> 00:06:29,060
in the worst case yeah
yeah uh what's a space complexity

290
00:06:29,060 --> 00:06:29,070
yeah uh what's a space complexity
 

291
00:06:29,070 --> 00:06:32,150
yeah uh what's a space complexity
[Music]

292
00:06:32,150 --> 00:06:32,160
[Music]
 

293
00:06:32,160 --> 00:06:34,629
[Music]
it's the same yeah is that the same

294
00:06:34,629 --> 00:06:34,639
it's the same yeah is that the same
 

295
00:06:34,639 --> 00:06:35,189
it's the same yeah is that the same
minimum

296
00:06:35,189 --> 00:06:35,199
minimum
 

297
00:06:35,199 --> 00:06:38,550
minimum
yeah minimum because of the

298
00:06:38,550 --> 00:06:38,560
yeah minimum because of the
 

299
00:06:38,560 --> 00:06:42,150
yeah minimum because of the
because of what because of the recursion

300
00:06:42,150 --> 00:06:42,160
because of what because of the recursion
 

301
00:06:42,160 --> 00:06:43,990
because of what because of the recursion
because yeah usually the computer

302
00:06:43,990 --> 00:06:44,000
because yeah usually the computer
 

303
00:06:44,000 --> 00:06:46,469
because yeah usually the computer
maintains stack yeah we're done yeah

304
00:06:46,469 --> 00:06:46,479
maintains stack yeah we're done yeah
 

305
00:06:46,479 --> 00:06:49,430
maintains stack yeah we're done yeah
and we can implement it using uh not not

306
00:06:49,430 --> 00:06:49,440
and we can implement it using uh not not
 

307
00:06:49,440 --> 00:06:50,950
and we can implement it using uh not not
notification we can use the

308
00:06:50,950 --> 00:06:50,960
notification we can use the
 

309
00:06:50,960 --> 00:06:53,350
notification we can use the
stack thingy but it will be more

310
00:06:53,350 --> 00:06:53,360
stack thingy but it will be more
 

311
00:06:53,360 --> 00:06:55,350
stack thingy but it will be more
complicated we can talk about it maybe

312
00:06:55,350 --> 00:06:55,360
complicated we can talk about it maybe
 

313
00:06:55,360 --> 00:06:56,150
complicated we can talk about it maybe
tomorrow or

314
00:06:56,150 --> 00:06:56,160
tomorrow or
 

315
00:06:56,160 --> 00:06:59,189
tomorrow or
the day after tomorrow okay yeah to

316
00:06:59,189 --> 00:06:59,199
the day after tomorrow okay yeah to
 

317
00:06:59,199 --> 00:07:00,629
the day after tomorrow okay yeah to
maintain we maintain a stack by

318
00:07:00,629 --> 00:07:00,639
maintain we maintain a stack by
 

319
00:07:00,639 --> 00:07:02,950
maintain we maintain a stack by
ourselves but it will be a lot easier if

320
00:07:02,950 --> 00:07:02,960
ourselves but it will be a lot easier if
 

321
00:07:02,960 --> 00:07:03,350
ourselves but it will be a lot easier if
we

322
00:07:03,350 --> 00:07:03,360
we
 

323
00:07:03,360 --> 00:07:05,350
we
using the recursion because the computer

324
00:07:05,350 --> 00:07:05,360
using the recursion because the computer
 

325
00:07:05,360 --> 00:07:06,629
using the recursion because the computer
generated the stack

326
00:07:06,629 --> 00:07:06,639
generated the stack
 

327
00:07:06,639 --> 00:07:08,150
generated the stack
maintain the stack for you when you do

328
00:07:08,150 --> 00:07:08,160
maintain the stack for you when you do
 

329
00:07:08,160 --> 00:07:09,909
maintain the stack for you when you do
this functional choice

330
00:07:09,909 --> 00:07:09,919
this functional choice
 

331
00:07:09,919 --> 00:07:11,589
this functional choice
return sam and the computer will just

332
00:07:11,589 --> 00:07:11,599
return sam and the computer will just
 

333
00:07:11,599 --> 00:07:13,589
return sam and the computer will just
put a stack generally stack and put it

334
00:07:13,589 --> 00:07:13,599
put a stack generally stack and put it
 

335
00:07:13,599 --> 00:07:16,150
put a stack generally stack and put it
called color functioning does it make

336
00:07:16,150 --> 00:07:16,160
called color functioning does it make
 

337
00:07:16,160 --> 00:07:16,870
called color functioning does it make
sense

338
00:07:16,870 --> 00:07:16,880
sense
 

339
00:07:16,880 --> 00:07:20,390
sense
yeah okay

340
00:07:20,390 --> 00:07:20,400
yeah okay
 

341
00:07:20,400 --> 00:07:23,350
yeah okay
i can do it yeah if you understand you

342
00:07:23,350 --> 00:07:23,360
i can do it yeah if you understand you
 

343
00:07:23,360 --> 00:07:42,830
i can do it yeah if you understand you
can do it of course

344
00:07:42,830 --> 00:07:42,840

 

345
00:07:42,840 --> 00:07:45,749

yes

346
00:07:45,749 --> 00:07:45,759
yes
 

347
00:07:45,759 --> 00:07:50,070
yes
uh are you sure it's eight or left

348
00:07:50,070 --> 00:07:50,080

 

349
00:07:50,080 --> 00:07:52,629

yeah because we check both the left tree

350
00:07:52,629 --> 00:07:52,639
yeah because we check both the left tree
 

351
00:07:52,639 --> 00:07:53,110
yeah because we check both the left tree
and

352
00:07:53,110 --> 00:07:53,120
and
 

353
00:07:53,120 --> 00:07:57,990
and
right three yeah be done left yes

354
00:07:57,990 --> 00:07:58,000
right three yeah be done left yes
 

355
00:07:58,000 --> 00:08:03,909
right three yeah be done left yes
okay and then what

356
00:08:03,909 --> 00:08:03,919

 

357
00:08:03,919 --> 00:08:06,390

yeah it's n and what does n mean both

358
00:08:06,390 --> 00:08:06,400
yeah it's n and what does n mean both
 

359
00:08:06,400 --> 00:08:24,830
yeah it's n and what does n mean both
needs to be true in order to be true

360
00:08:24,830 --> 00:08:24,840

 

361
00:08:24,840 --> 00:08:31,830

so

362
00:08:31,830 --> 00:08:31,840

 

363
00:08:31,840 --> 00:08:34,630

yeah that's it for today good job we're

364
00:08:34,630 --> 00:08:34,640
yeah that's it for today good job we're
 

365
00:08:34,640 --> 00:08:36,149
yeah that's it for today good job we're
done very well done

366
00:08:36,149 --> 00:08:36,159
done very well done
 

367
00:08:36,159 --> 00:08:41,839
done very well done
say bye to people

