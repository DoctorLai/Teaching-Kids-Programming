1
00:00:00,080 --> 00:00:05,920
hello mr mr ryan i right yeah and mrs

2
00:00:03,360 --> 00:00:06,960
chesley okay okay so yeah what's

3
00:00:05,920 --> 00:00:10,160
underground

4
00:00:06,960 --> 00:00:11,519
an anagram is two words that use the

5
00:00:10,160 --> 00:00:13,840
same letters

6
00:00:11,519 --> 00:00:17,600
n a n h

7
00:00:13,840 --> 00:00:19,359
g r a m s underground okay so can you

8
00:00:17,600 --> 00:00:21,680
give me an example of the endocrine two

9
00:00:19,359 --> 00:00:24,000
elegance

10
00:00:21,680 --> 00:00:28,480
rice rice

11
00:00:24,000 --> 00:00:29,359
listen and silent listen eat tea

12
00:00:28,480 --> 00:00:30,960
and

13
00:00:29,359 --> 00:00:32,160
eight

14
00:00:30,960 --> 00:00:34,239
e t

15
00:00:32,160 --> 00:00:37,920
okay that's a very good example eight

16
00:00:34,239 --> 00:00:39,440
eighty yeah okay so basically a and a

17
00:00:37,920 --> 00:00:42,239
yeah yeah that's enough

18
00:00:39,440 --> 00:00:44,399
basically these these words are elegant

19
00:00:42,239 --> 00:00:46,000
because they use send a number

20
00:00:44,399 --> 00:00:47,760
of characters and

21
00:00:46,000 --> 00:00:48,480
yeah each character is the same number

22
00:00:47,760 --> 00:00:53,199
okay

23
00:00:48,480 --> 00:00:54,719
yeah so look for example kt e1 a1s t1 ea

24
00:00:53,199 --> 00:00:57,039
e1 a1

25
00:00:54,719 --> 00:00:57,600
c1

26
00:00:57,039 --> 00:01:00,079
ones e1

27
00:00:57,600 --> 00:01:02,079
ones okay and listen right as well just

28
00:01:00,079 --> 00:01:05,840
different order if you so

29
00:01:02,079 --> 00:01:07,119
in if we sort those anagrams

30
00:01:05,840 --> 00:01:10,159
what happens

31
00:01:07,119 --> 00:01:10,840
if we solve the energy what do we get

32
00:01:10,159 --> 00:01:15,040
we

33
00:01:10,840 --> 00:01:19,360
get of anagrams so what let's put it in

34
00:01:15,040 --> 00:01:21,119
our way so if we solve these emigrants

35
00:01:19,360 --> 00:01:23,920
what do we get for this one if we

36
00:01:21,119 --> 00:01:25,759
started you know a e t

37
00:01:23,920 --> 00:01:28,240
if we saw this

38
00:01:25,759 --> 00:01:30,960
a e t if we saw this

39
00:01:28,240 --> 00:01:32,799
a you see do you see one again

40
00:01:30,960 --> 00:01:34,479
so if we saw this

41
00:01:32,799 --> 00:01:35,360
c

42
00:01:34,479 --> 00:01:37,920
or

43
00:01:35,360 --> 00:01:40,240
e i r okay

44
00:01:37,920 --> 00:01:42,640
so so basically we're saying that if the

45
00:01:40,240 --> 00:01:45,360
n ones we sorted and we're gonna send

46
00:01:42,640 --> 00:01:48,079
num some words same string okay

47
00:01:45,360 --> 00:01:50,240
yeah so today's question would be

48
00:01:48,079 --> 00:01:52,240
we are given a list of words

49
00:01:50,240 --> 00:01:53,520
and we have to grieve that unique yeah

50
00:01:52,240 --> 00:01:55,920
we want to grow back

51
00:01:53,520 --> 00:01:57,600
how do we do that i mean dictionary we

52
00:01:55,920 --> 00:02:00,479
use dictionary yeah so we use the

53
00:01:57,600 --> 00:02:01,600
dictionary before dictionary the keys

54
00:02:00,479 --> 00:02:04,399
keys

55
00:02:01,600 --> 00:02:06,640
we can do it with the sorted salty yeah

56
00:02:04,399 --> 00:02:08,800
because we said if we saw the endergon

57
00:02:06,640 --> 00:02:10,479
we got the same thing yeah yeah so you

58
00:02:08,800 --> 00:02:12,400
the keys will be sorted and the value

59
00:02:10,479 --> 00:02:14,640
will be the least of the

60
00:02:12,400 --> 00:02:15,599
the end ones belong to the same group

61
00:02:14,640 --> 00:02:17,680
okay

62
00:02:15,599 --> 00:02:19,760
yeah make sense yeah

63
00:02:17,680 --> 00:02:21,760
so before this generally the default

64
00:02:19,760 --> 00:02:23,760
type will be the list

65
00:02:21,760 --> 00:02:25,200
so define

66
00:02:23,760 --> 00:02:26,959
group

67
00:02:25,200 --> 00:02:28,560
anagram

68
00:02:26,959 --> 00:02:31,200
underground okay

69
00:02:28,560 --> 00:02:32,959
and i'm given this word so first of all

70
00:02:31,200 --> 00:02:35,200
we have this data

71
00:02:32,959 --> 00:02:36,480
equals d4 additionally before

72
00:02:35,200 --> 00:02:38,239
additionally

73
00:02:36,480 --> 00:02:39,519
we'll talk about that lots of time this

74
00:02:38,239 --> 00:02:41,920
is a

75
00:02:39,519 --> 00:02:43,920
class from the collections yeah from

76
00:02:41,920 --> 00:02:46,000
collections into deposition and our

77
00:02:43,920 --> 00:02:47,120
default type will be the list list of

78
00:02:46,000 --> 00:02:51,120
words

79
00:02:47,120 --> 00:02:53,360
now we go through this word w in what

80
00:02:51,120 --> 00:02:56,400
because it is worse and then look

81
00:02:53,360 --> 00:02:58,560
this is where okay and we

82
00:02:56,400 --> 00:03:00,239
what do we do we salt it so that's a

83
00:02:58,560 --> 00:03:03,040
salty version

84
00:03:00,239 --> 00:03:04,400
salty w then we can you change it to

85
00:03:03,040 --> 00:03:07,360
tupper yeah

86
00:03:04,400 --> 00:03:09,760
to make it flexible yeah

87
00:03:07,360 --> 00:03:12,159
because the keys needs to be hashable

88
00:03:09,760 --> 00:03:14,720
but a pen

89
00:03:12,159 --> 00:03:16,720
right a pen doubly and now we just need

90
00:03:14,720 --> 00:03:19,200
to return

91
00:03:16,720 --> 00:03:20,720
return data value yeah because that's

92
00:03:19,200 --> 00:03:22,640
the thing we are going to return return

93
00:03:20,720 --> 00:03:23,840
the list so basically we're going to

94
00:03:22,640 --> 00:03:27,040
return this

95
00:03:23,840 --> 00:03:27,040
data values

96
00:03:27,120 --> 00:03:31,760
what's data value so it'll be something

97
00:03:28,879 --> 00:03:35,200
like e a t

98
00:03:31,760 --> 00:03:38,000
ate okay and then it will be

99
00:03:35,200 --> 00:03:40,239
a list of the energon so different the

100
00:03:38,000 --> 00:03:42,239
subways will be a group for the energon

101
00:03:40,239 --> 00:03:45,480
so they'll be listen

102
00:03:42,239 --> 00:03:45,480
and sign

103
00:03:46,799 --> 00:03:52,560
the keys the keys will be the salty

104
00:03:48,959 --> 00:03:55,920
version salty version of the energy yeah

105
00:03:52,560 --> 00:03:58,239
what's the time complexity for this one

106
00:03:55,920 --> 00:04:00,319
yeah no why is it going look at it

107
00:03:58,239 --> 00:04:02,000
again

108
00:04:00,319 --> 00:04:04,000
okay so you're part of this look we are

109
00:04:02,000 --> 00:04:06,879
going through like if there are n words

110
00:04:04,000 --> 00:04:10,239
so n word yeah and let's say the maximum

111
00:04:06,879 --> 00:04:10,239
length will be k okay

112
00:04:12,080 --> 00:04:16,400
not quite because we have assorted so if

113
00:04:14,400 --> 00:04:17,199
we're saying the length will be k for

114
00:04:16,400 --> 00:04:20,560
the

115
00:04:17,199 --> 00:04:24,000
follow words so this part

116
00:04:20,560 --> 00:04:25,440
come on don't guess this part takes okay

117
00:04:24,000 --> 00:04:29,199
log k

118
00:04:25,440 --> 00:04:31,840
if the k is the length of the w is k

119
00:04:29,199 --> 00:04:33,040
but we have w we have n times so we

120
00:04:31,840 --> 00:04:36,479
times n

121
00:04:33,040 --> 00:04:40,400
okay so o n times k locate okay

122
00:04:36,479 --> 00:04:40,400
yeah because we have something here yes

123
00:04:40,479 --> 00:04:43,280
so

124
00:04:41,199 --> 00:04:44,320
the other approach the other approach is

125
00:04:43,280 --> 00:04:45,919
slightly

126
00:04:44,320 --> 00:04:47,199
different right

127
00:04:45,919 --> 00:04:49,199
the thing

128
00:04:47,199 --> 00:04:51,040
come on the thing this is uh slow

129
00:04:49,199 --> 00:04:53,440
because we have the salting here so we

130
00:04:51,040 --> 00:04:55,600
need to stop each word right

131
00:04:53,440 --> 00:04:57,600
so we can count

132
00:04:55,600 --> 00:04:59,440
the the other way to check if two

133
00:04:57,600 --> 00:05:01,600
strings are underground we just need to

134
00:04:59,440 --> 00:05:02,960
count right we will use the counter

135
00:05:01,600 --> 00:05:04,720
counter

136
00:05:02,960 --> 00:05:06,479
counter we basically if we want to check

137
00:05:04,720 --> 00:05:08,560
string a and b if they are underground

138
00:05:06,479 --> 00:05:10,720
we just say retain counter a equals

139
00:05:08,560 --> 00:05:12,720
equal count b right yeah we'll talk

140
00:05:10,720 --> 00:05:14,080
about that but the thing is this counter

141
00:05:12,720 --> 00:05:16,400
is an object

142
00:05:14,080 --> 00:05:19,600
right so how do we put it

143
00:05:16,400 --> 00:05:22,560
uh put in it as a key so we can just do

144
00:05:19,600 --> 00:05:24,800
this we can just really see we can have

145
00:05:22,560 --> 00:05:27,440
this if it's a

146
00:05:24,800 --> 00:05:29,199
if these words are low order case and we

147
00:05:27,440 --> 00:05:31,759
have 26

148
00:05:29,199 --> 00:05:34,639
yeah we have we have 26 characters and

149
00:05:31,759 --> 00:05:36,560
we want to talk let's create an array

150
00:05:34,639 --> 00:05:40,000
and then we can do this

151
00:05:36,560 --> 00:05:41,600
for c in w

152
00:05:40,000 --> 00:05:44,400
d

153
00:05:41,600 --> 00:05:47,520
o r d c

154
00:05:44,400 --> 00:05:48,639
minus 97 plus equals one and then this

155
00:05:47,520 --> 00:05:50,400
thing

156
00:05:48,639 --> 00:05:51,520
theta

157
00:05:50,400 --> 00:05:56,240
that's

158
00:05:51,520 --> 00:05:58,639
tata we convert this to tata topper d

159
00:05:56,240 --> 00:06:01,280
dot append this is the same

160
00:05:58,639 --> 00:06:03,680
okay so let me explain this d

161
00:06:01,280 --> 00:06:04,800
this is an array of 26

162
00:06:03,680 --> 00:06:08,479
this is the

163
00:06:04,800 --> 00:06:10,479
this is an array of 26 elements

164
00:06:08,479 --> 00:06:11,680
representing the counter the number of

165
00:06:10,479 --> 00:06:14,080
times that

166
00:06:11,680 --> 00:06:16,960
for each alphabetic lowercase character

167
00:06:14,080 --> 00:06:18,880
used okay and we go through each word

168
00:06:16,960 --> 00:06:21,120
and then we update what's our d

169
00:06:18,880 --> 00:06:21,120
this

170
00:06:22,639 --> 00:06:26,960
yeah we talked about asking

171
00:06:24,800 --> 00:06:28,639
what's the asking of the

172
00:06:26,960 --> 00:06:30,639
uppercase a

173
00:06:28,639 --> 00:06:34,319
um i forgot

174
00:06:30,639 --> 00:06:37,120
65 what's the lowercase a 97.

175
00:06:34,319 --> 00:06:40,000
okay so that ort is converting a

176
00:06:37,120 --> 00:06:42,479
character to is to the number to asking

177
00:06:40,000 --> 00:06:46,560
code minus 97 right because the

178
00:06:42,479 --> 00:06:48,400
lowercase a is 97 minus 97 yellow so it

179
00:06:46,560 --> 00:06:49,919
corresponds to the first

180
00:06:48,400 --> 00:06:53,280
element okay

181
00:06:49,919 --> 00:06:55,599
yeah so look so instead of sorting we

182
00:06:53,280 --> 00:06:57,919
count we do the counting and then we

183
00:06:55,599 --> 00:07:00,000
convert this counting this is a real

184
00:06:57,919 --> 00:07:01,520
converted to the chapter then we can do

185
00:07:00,000 --> 00:07:03,840
use it as a key

186
00:07:01,520 --> 00:07:06,080
through dictionary right so the time

187
00:07:03,840 --> 00:07:09,599
context is that if they are

188
00:07:06,080 --> 00:07:12,880
n words and each word is k

189
00:07:09,599 --> 00:07:14,319
so this time complexity is all n times k

190
00:07:12,880 --> 00:07:16,639
okay

191
00:07:14,319 --> 00:07:19,280
the space complexity for both cases all

192
00:07:16,639 --> 00:07:21,120
n times k right because m was k yeah

193
00:07:19,280 --> 00:07:22,560
just dictionary okay

194
00:07:21,120 --> 00:07:24,479
you guys what have you learned today so

195
00:07:22,560 --> 00:07:26,400
what come on right

196
00:07:24,479 --> 00:07:27,919
now

197
00:07:26,400 --> 00:07:31,199
what am i

198
00:07:27,919 --> 00:07:33,440
doing with this energy

199
00:07:31,199 --> 00:07:36,080
yeah and how do we do it what we talk

200
00:07:33,440 --> 00:07:38,800
about very important data structure here

201
00:07:36,080 --> 00:07:38,800
we use what

202
00:07:39,680 --> 00:07:44,720
dictionary yeah key value pairs the keys

203
00:07:42,720 --> 00:07:46,639
will be important to group the endograms

204
00:07:44,720 --> 00:07:50,479
right because each the each enneagram

205
00:07:46,639 --> 00:07:52,479
group has the unique keys so we can sort

206
00:07:50,479 --> 00:07:54,720
it yeah we can sort of any ones in the

207
00:07:52,479 --> 00:07:55,599
same group and then they all produce the

208
00:07:54,720 --> 00:07:58,240
same

209
00:07:55,599 --> 00:08:00,319
same key right or we can count it right

210
00:07:58,240 --> 00:08:01,840
we can count we can do the counting for

211
00:08:00,319 --> 00:08:03,520
the characters yeah

212
00:08:01,840 --> 00:08:05,680
so we which one do you think is better

213
00:08:03,520 --> 00:08:07,840
okay so look these two come time

214
00:08:05,680 --> 00:08:10,240
complexity this one is o n times k the

215
00:08:07,840 --> 00:08:12,400
first one we are you using sourcing it

216
00:08:10,240 --> 00:08:16,000
will be o n times k

217
00:08:12,400 --> 00:08:16,000
log k which one is better

218
00:08:17,120 --> 00:08:23,479
okay that's it for today bye bye

219
00:08:19,199 --> 00:08:23,479
bye bye good job

220
00:08:26,639 --> 00:08:28,720
you

