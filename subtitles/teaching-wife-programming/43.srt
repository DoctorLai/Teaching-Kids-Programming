1
00:00:00,566 --> 00:00:01,366
哎 大家好

2
00:00:01,366 --> 00:00:02,966
今天我们来讲第43课

3
00:00:02,966 --> 00:00:05,866
我们来讲一个二进制的问题

4
00:00:05,866 --> 00:00:07,300
就是二进制数

5
00:00:07,566 --> 00:00:09,100
把它这个数字

6
00:00:09,100 --> 00:00:12,100
按二进制的形式给那个连接起来

7
00:00:12,100 --> 00:00:13,966
立扣的1680题

8
00:00:14,133 --> 00:00:14,933
给定一个n

9
00:00:14,933 --> 00:00:19,466
然后我们把1到n的这个自然数的2进制

10
00:00:19,466 --> 00:00:20,533
给它连在1起

11
00:00:20,533 --> 00:00:22,000
比如说这个3吗

12
00:00:22,000 --> 00:00:24,000
n等于3 那么它123吗

13
00:00:24,000 --> 00:00:25,800
1的二进制是1

14
00:00:26,033 --> 00:00:28,800
2的二进制是10, 3的二进制是11

15
00:00:28,800 --> 00:00:29,933
我们讲过二进制吧 对吧

16
00:00:29,933 --> 00:00:31,966
把二进制跟十进制转换

17
00:00:31,966 --> 00:00:34,166
就是二进制 就0和1吗

18
00:00:34,166 --> 00:00:36,933
我们简单复习一下, 你看这1

19
00:00:37,166 --> 00:00:39,433
然后10, 11, 100, 是吧

20
00:00:39,799 --> 00:00:42,133
101, 110, 111对吧

21
00:00:42,199 --> 00:00:44,666
就像我们10进制里一样 加1

22
00:00:44,666 --> 00:00:46,333
然后 进位 对吧

23
00:00:46,333 --> 00:00:47,933
我们9是加1变成10 进位

24
00:00:47,933 --> 00:00:51,933
它是1加变成2的时候 就进位, 对不对?

25
00:00:51,933 --> 00:00:52,733
嗯

26
00:00:53,066 --> 00:00:54,499
2的n次方 对吧

27
00:00:54,599 --> 00:00:57,999
它的有个属性就是1后面n个0吗 对吧

28
00:00:58,233 --> 00:01:01,100
1就是2的0次方, 2的0次方

29
00:01:03,033 --> 00:01:05,533
然后10就是2的一次方, 是吧

30
00:01:05,699 --> 00:01:08,033
然后100就是2的2次方

31
00:01:08,233 --> 00:01:10,799
下面就1000就是2的三次方, 是吧?

32
00:01:10,833 --> 00:01:12,899
你可以看出这个2的n次方

33
00:01:12,899 --> 00:01:16,566
它就是1个1后面有n个0就是n次方

34
00:01:16,599 --> 00:01:17,499
这就二进制嘛

35
00:01:17,533 --> 00:01:19,399
因为我们把二进制换成十进制

36
00:01:19,399 --> 00:01:20,166
十进制的时候

37
00:01:20,166 --> 00:01:21,866
比如说 我随便取一个二进制

38
00:01:21,966 --> 00:01:23,766
这二进制等于多少十进制呢?

39
00:01:23,766 --> 00:01:25,666
那实际上相当于这个

40
00:01:25,766 --> 00:01:27,466
最右边这个位是1吗

41
00:01:27,466 --> 00:01:28,799
对吧 然后 这个是2

42
00:01:29,066 --> 00:01:30,266
这个是4

43
00:01:30,366 --> 00:01:31,566
每次 Double - 8

44
00:01:31,566 --> 00:01:32,699
然后16对吧

45
00:01:32,699 --> 00:01:34,099
那如果是1的话

46
00:01:34,266 --> 00:01:35,699
它就是代表是

47
00:01:35,899 --> 00:01:38,866
那位上面的权重, 对不对

48
00:01:38,866 --> 00:01:40,199
那我就把它相加起来

49
00:01:40,266 --> 00:01:42,733
比如说举一个简单例子 就是110, 是吧

50
00:01:42,733 --> 00:01:44,733
就是2的第一个1

51
00:01:44,733 --> 00:01:46,100
2的后面有两位

52
00:01:46,100 --> 00:01:48,600
就2的2次方 加上 第二个1是

53
00:01:49,166 --> 00:01:50,766
2的1次方, 是吧?

54
00:01:51,066 --> 00:01:53,700
嗯 那这个就相当于6 对不对

55
00:01:53,933 --> 00:01:56,499
那十进制转的二进制 我们也讲过

56
00:01:56,499 --> 00:01:57,666
就是除以二

57
00:01:57,899 --> 00:01:59,133
比如说7好了

58
00:01:59,133 --> 00:02:01,499
7怎么变成二进制呢

59
00:02:01,933 --> 00:02:03,933
这7/2等于3

60
00:02:04,099 --> 00:02:09,166
余数为1, 3/2等于1, 余数为1

61
00:02:09,166 --> 00:02:12,099
1/2等于0 余数为1

62
00:02:12,133 --> 00:02:13,099
当等于0的时候

63
00:02:13,099 --> 00:02:15,933
我们就把这个余数 从后面往前面写

64
00:02:15,933 --> 00:02:17,099
就是111 (二进制)

65
00:02:17,099 --> 00:02:18,066
这个是简单

66
00:02:18,066 --> 00:02:18,466
复习一下

67
00:02:18,566 --> 00:02:20,733
十进制跟二进制的转换

68
00:02:20,799 --> 00:02:22,266
讲的这1题就是

69
00:02:22,266 --> 00:02:23,999
就是给定比如说n等于3

70
00:02:24,433 --> 00:02:27,666
那n等于3, 就是123, 对吧?

71
00:02:27,666 --> 00:02:30,299
这3个数, 那1的2进制就是1

72
00:02:30,299 --> 00:02:31,599
2的二进制就是10

73
00:02:31,599 --> 00:02:33,333
3的二进制就是100

74
00:02:33,666 --> 00:02:35,533
那我们这样把它连起来

75
00:02:36,399 --> 00:02:38,866
那我们就要算这个数的10进制

76
00:02:38,999 --> 00:02:40,599
题目就是这个意思

77
00:02:40,999 --> 00:02:41,799
对吧

78
00:02:41,933 --> 00:02:45,466
那这题你想它每一步 都非常清楚嘛

79
00:02:45,466 --> 00:02:47,066
对吧, 所以我们就可以按照它的步骤

80
00:02:47,066 --> 00:02:48,799
按照它的步骤来做吗 是吧

81
00:02:48,799 --> 00:02:49,833
我们首先把

82
00:02:50,266 --> 00:02:51,899
这个123对吧

83
00:02:51,899 --> 00:02:54,233
然后给它变成二进制对吧

84
00:02:54,466 --> 00:02:57,666
然后再把它合起来, 字符串给合并起来

85
00:02:57,666 --> 00:03:00,866
然后最后面把它给转换成十进制 是吧

86
00:03:00,866 --> 00:03:01,699
这是一种方法

87
00:03:01,699 --> 00:03:02,799
我们现在就来写

88
00:03:02,999 --> 00:03:04,799
那怎么转换成二进制呢?

89
00:03:04,799 --> 00:03:06,666
那Python里面有一个叫Bin函数

90
00:03:06,666 --> 00:03:08,533
bin(3) 它会等于多少呢?

91
00:03:08,599 --> 00:03:09,433
0b11

92
00:03:09,433 --> 00:03:11,833
它会有一个prefix - 0b 对不对

93
00:03:12,299 --> 00:03:13,766
是不是

94
00:03:14,033 --> 00:03:15,533
0b11 是吧

95
00:03:15,533 --> 00:03:18,066
就是 你看 比如说 再来一个15

96
00:03:18,233 --> 00:03:20,099
那它是应该是

97
00:03:20,966 --> 00:03:22,299
0b1111 是吧

98
00:03:22,433 --> 00:03:24,266
对 所以它就会有个的 0b 对吧?

99
00:03:24,366 --> 00:03:26,733
0b就是它的 prefix 前缀 对吧

100
00:03:26,766 --> 00:03:28,399
那我就可以用这个 bin 函数

101
00:03:28,399 --> 00:03:29,766
来把一个整型

102
00:03:29,966 --> 00:03:32,499
整数, 十进制的整数变成是一个

103
00:03:32,599 --> 00:03:33,833
二进制的字符串

104
00:03:33,833 --> 00:03:36,033
然后我把前面的 0b 给去掉, 对吧

105
00:03:36,166 --> 00:03:37,133
arr 等于

106
00:03:37,733 --> 00:03:39,033
我可以 怎么直接写呢?

107
00:03:39,033 --> 00:03:40,333
bin(i)

108
00:03:40,999 --> 00:03:42,766
bin(i)

109
00:03:42,766 --> 00:03:45,699
然后是 for i in range n

110
00:03:45,833 --> 00:03:46,866
Bin 它是有 0b 吗

111
00:03:47,033 --> 00:03:49,400
那所以我要把 0b 去掉就是2

112
00:03:49,500 --> 00:03:50,433
从第二个索引

113
00:03:50,499 --> 00:03:52,599
也就是第三个字符到结尾

114
00:03:52,700 --> 00:03:54,733
实际上就相当于是把0b去掉

115
00:03:55,000 --> 00:03:55,766
如果n等于3的话

116
00:03:55,766 --> 00:03:59,566
它实际上是会变成 ["1", "10", "11"]

117
00:04:00,033 --> 00:04:01,966
1, 是吧, 对, 然后

118
00:04:02,099 --> 00:04:03,433
然后2到结尾的话

119
00:04:03,433 --> 00:04:05,399
它实际上它前面会是0b

120
00:04:05,399 --> 00:04:06,433
0b10, 对吧

121
00:04:06,433 --> 00:04:08,733
我加了这个, 就把 0b 去掉

122
00:04:08,799 --> 00:04:11,466
然后我现在是要把这个字符串数组

123
00:04:11,466 --> 00:04:13,366
数组里面的字符串给拼接起来

124
00:04:13,499 --> 00:04:15,133
那我就可以用一个 join 函数

125
00:04:15,233 --> 00:04:17,466
join 就是把数组或列表里的元素 按照

126
00:04:17,699 --> 00:04:20,299
按照这个前面指定的这个分隔符号给合起来

127
00:04:20,299 --> 00:04:23,066
如果你前面是一个点号或者加号的话

128
00:04:23,066 --> 00:04:23,933
如果是加号的话

129
00:04:23,933 --> 00:04:26,666
它实际上是变成1+10+11

130
00:04:26,833 --> 00:04:30,333
如果 是点号 它就是1.10.1是吧

131
00:04:30,333 --> 00:04:33,266
那如果是空字符串就是11011

132
00:04:33,599 --> 00:04:34,533
然后把它变成这样

133
00:04:34,533 --> 00:04:36,933
然后我这样完之后我再把它变成整数

134
00:04:36,933 --> 00:04:37,499
用int函数转换成整数

135
00:04:37,533 --> 00:04:38,566
第2个参数指定的是

136
00:04:38,600 --> 00:04:40,733
那就是二进制 我就指定2

137
00:04:41,100 --> 00:04:43,066
那它这个结尾是要

138
00:04:43,300 --> 00:04:45,366
除以这个10的9次方加7

139
00:04:45,600 --> 00:04:46,133
int函数

140
00:04:46,266 --> 00:04:48,766
会把前面这个字符串给转成整型

141
00:04:48,766 --> 00:04:50,866
那第2个参数 指定它的那个

142
00:04:50,866 --> 00:04:51,566
哪一个进制

143
00:04:51,566 --> 00:04:53,166
我们就指定二进制

144
00:04:53,433 --> 00:04:55,899
然后它的结尾是 这个数可能很大

145
00:04:55,899 --> 00:04:58,233
所以它要MOD 10的9次方加7

146
00:04:58,699 --> 00:05:01,466
那就是MOD 10的9次方

147
00:05:02,033 --> 00:05:03,066
加7 对吧

148
00:05:03,066 --> 00:05:05,399
10的9次方 你看两个星号 就是几次方

149
00:05:05,399 --> 00:05:06,199
对吧

150
00:05:07,166 --> 00:05:09,499
或者你可以用这个 Pow

151
00:05:09,499 --> 00:05:12,499
Pow(10, 9) 这个也是一样的 这个函数是一样的

152
00:05:12,633 --> 00:05:14,199
那我们就 return 它就好了

153
00:05:14,199 --> 00:05:15,566
看一下 能不能过

154
00:05:15,999 --> 00:05:17,433
再检查一下

155
00:05:17,999 --> 00:05:20,399
应该是先跑一下测试用例

156
00:05:21,333 --> 00:05:23,966
咦 Output 27

157
00:05:24,366 --> 00:05:25,933
哎为什么是27 等一下

158
00:05:26,233 --> 00:05:28,033
range 1到n嘛

159
00:05:28,033 --> 00:05:30,099
n加1是 1到n吗 是吧

160
00:05:30,266 --> 00:05:32,566
然后我这边 哦不对 我这边应该是

161
00:05:32,666 --> 00:05:34,366
哎呀 我这 你看 这应该是arr嘛

162
00:05:34,366 --> 00:05:35,166
是吧

163
00:05:35,599 --> 00:05:38,399
没有看代码就直接提交了 是吧

164
00:05:39,200 --> 00:05:40,733
这个少一个括号

165
00:05:42,533 --> 00:05:43,566
跑一下

166
00:05:45,233 --> 00:05:46,033
哎

167
00:05:46,466 --> 00:05:48,333
哎这说啥了

168
00:05:48,633 --> 00:05:50,566
再括号又括到前面去

169
00:05:52,333 --> 00:05:53,233
对这样

170
00:05:55,500 --> 00:05:56,300
咦

171
00:05:57,800 --> 00:05:58,600
哈哈

172
00:05:59,600 --> 00:06:00,933
int对

173
00:06:01,233 --> 00:06:02,033
哎呀

174
00:06:02,633 --> 00:06:04,200
括号括错了 这个

175
00:06:04,633 --> 00:06:06,933
这样的应该就对了吧, 再不对...

176
00:06:07,000 --> 00:06:09,566
崩溃 对吧 你看跑过3个测试用例

177
00:06:09,833 --> 00:06:12,333
By the way, 我这个立扣界面

178
00:06:12,333 --> 00:06:13,533
我这个是测试版 BETA

179
00:06:13,533 --> 00:06:15,033
新版 BETA版的

180
00:06:15,366 --> 00:06:17,200
这个这你看它这个很nice

181
00:06:17,233 --> 00:06:20,200
就能告你所有测试用例 过没过

182
00:06:20,300 --> 00:06:22,233
让我们跑一下 就跑一下

183
00:06:25,433 --> 00:06:27,800
它应该会很慢, 哎应过了吗

184
00:06:27,800 --> 00:06:29,433
对 过了 过了

185
00:06:29,633 --> 00:06:32,399
可能不是很快, BEAT 63%

186
00:06:33,033 --> 00:06:34,199
这里面的问题是什么呢?

187
00:06:34,199 --> 00:06:36,766
就是你看它外面的这个循环是n次

188
00:06:36,966 --> 00:06:38,599
对吧但是你这个 Bin 函数

189
00:06:38,599 --> 00:06:39,199
这个 Bin 函数

190
00:06:39,199 --> 00:06:40,999
它实际上是一个log N的操作

191
00:06:41,066 --> 00:06:44,033
所以它整个时间 复杂度 是 O(NLogN)

192
00:06:44,033 --> 00:06:45,099
对吧 就比较慢

193
00:06:45,199 --> 00:06:46,266
其实就可以用一行

194
00:06:46,266 --> 00:06:48,666
我其实就可以这么直接把它替换进去

195
00:06:49,199 --> 00:06:50,366
实际上1行就可以了

196
00:06:54,899 --> 00:06:55,699
过了

197
00:06:55,999 --> 00:06:58,966
对吧 这里面我们把它转成2进制

198
00:06:59,133 --> 00:07:02,899
主要的目的就是获得它的长度 对不对

199
00:07:03,066 --> 00:07:04,666
就这把它拼接起来 对吧

200
00:07:04,800 --> 00:07:07,300
但实际上我们可以这么理解 就是

201
00:07:08,000 --> 00:07:11,166
怎么说呢你看1哈 我这边10这1

202
00:07:11,433 --> 00:07:12,833
现在我们假设我们这

203
00:07:12,833 --> 00:07:13,833
假设这个值是1的时候

204
00:07:13,833 --> 00:07:16,466
那下一个参数, 下一个数字是10

205
00:07:16,466 --> 00:07:18,633
那10过来 它会发生什么呢

206
00:07:18,633 --> 00:07:20,566
它会把这个1往左挤两位吗

207
00:07:20,566 --> 00:07:22,999
是吧 嗯 它会挤两位吗 是吧

208
00:07:23,133 --> 00:07:26,033
那一个数在2进制里面被往左挤一位

209
00:07:26,033 --> 00:07:26,833
就是乘以二

210
00:07:26,833 --> 00:07:27,966
这个可以理解吧

211
00:07:28,533 --> 00:07:30,933
往左几两位就是乘以4对吧

212
00:07:30,933 --> 00:07:32,066
这个是2进制的属性

213
00:07:32,066 --> 00:07:34,399
如果往右1位就是除以二, 是不是?

214
00:07:34,466 --> 00:07:35,966
它往左挤两位

215
00:07:35,966 --> 00:07:38,433
我是可以给它把当前这个值给

216
00:07:38,799 --> 00:07:41,566
按照这个比如说这个位数是N次

217
00:07:41,599 --> 00:07:44,466
就X等于它的长度就2吧

218
00:07:44,466 --> 00:07:47,433
那它向左移两个位嘛 对吧

219
00:07:47,733 --> 00:07:48,966
然后再加上这个值嘛

220
00:07:48,966 --> 00:07:49,233
对吧

221
00:07:49,233 --> 00:07:51,199
那我们就可以进行这个操作 对不对

222
00:07:51,366 --> 00:07:53,166
比如说这个answer等于0, 是吧?

223
00:07:53,366 --> 00:07:57,166
然后for i in range从1开始到n加1

224
00:07:57,300 --> 00:08:00,100
1到n加1 实际是 1到n哈

225
00:08:00,300 --> 00:08:02,000
x等于这个 Bin 

226
00:08:02,000 --> 00:08:04,700
Bin 的这个 i 就是把它换成 二进制 好吧

227
00:08:04,700 --> 00:08:05,800
我们先换成 二进制

228
00:08:05,866 --> 00:08:06,966
我们要获得它的长度吧

229
00:08:06,966 --> 00:08:08,700
是吧 长度

230
00:08:08,933 --> 00:08:10,400
那这时候我是要减一个2吗

231
00:08:10,400 --> 00:08:12,600
因为它有个"0b" 的prefix 是吧

232
00:08:12,800 --> 00:08:15,466
然后我这时候我是不是要往左移

233
00:08:15,700 --> 00:08:16,933
左移x位吧

234
00:08:16,933 --> 00:08:19,366
刚才说那个一挤掉两位是不是

235
00:08:19,966 --> 00:08:21,600
然后我再加上

236
00:08:22,100 --> 00:08:23,533
它的现在这个值对吧

237
00:08:23,533 --> 00:08:24,933
当然我要取一个余

238
00:08:24,933 --> 00:08:28,000
取余就是刚才 MOD 10的9次方

239
00:08:28,266 --> 00:08:29,100
加7

240
00:08:30,100 --> 00:08:32,133
然后这样 return answer

241
00:08:32,133 --> 00:08:33,333
看一下 对不对

242
00:08:33,633 --> 00:08:35,700
哎过了, 我们跑一下, 试一下

243
00:08:36,233 --> 00:08:37,433
哎也过了

244
00:08:37,833 --> 00:08:39,733
虽然时间复杂度是一样的

245
00:08:39,733 --> 00:08:42,366
你看这题的时间复杂度是这边是n次

246
00:08:42,366 --> 00:08:44,533
然后 还是需要一个 Bin 函数

247
00:08:44,533 --> 00:08:45,933
O(NLogN) 对吧

248
00:08:45,933 --> 00:08:47,866
但跟刚才那个思路是不太一样

249
00:08:47,866 --> 00:08:48,866
刚才是说

250
00:08:49,133 --> 00:08:52,300
我暴力的把每一个数字给变成2进制

251
00:08:52,300 --> 00:08:54,366
然后把它拼接起来

252
00:08:54,366 --> 00:08:57,466
这里的关键是 我这个

253
00:08:57,600 --> 00:08:59,866
这个值我是向左移这个x位

254
00:08:59,866 --> 00:09:02,866
但是这个x位我是还是需要用这个 Bin 

255
00:09:03,066 --> 00:09:05,300
去获得它的那个

256
00:09:05,500 --> 00:09:06,266
嗯 长度吗

257
00:09:06,266 --> 00:09:09,166
对吧 是不是 但是 它是不一样的算法

258
00:09:09,299 --> 00:09:11,499
这里面这个 Bin 它实际上是非常耗时

259
00:09:11,533 --> 00:09:13,666
但是我们看一下这个

260
00:09:13,700 --> 00:09:20,633
规律吧: 1, 10, 11, 100, 101...

261
00:09:20,700 --> 00:09:23,300
第一个是1, 长度为1, 长度为2 是吧?

262
00:09:23,300 --> 00:09:24,733
你看1

263
00:09:25,000 --> 00:09:27,133
长度为1, 长度为2

264
00:09:27,466 --> 00:09:29,833
长度为2, 长度为3

265
00:09:30,200 --> 00:09:31,133
长度为3, 对吧

266
00:09:31,133 --> 00:09:32,233
这里也是长度为3

267
00:09:32,233 --> 00:09:33,433
你看一下有什么规律

268
00:09:33,433 --> 00:09:34,933
那长度为4, 你看

269
00:09:35,633 --> 00:09:36,800
是不是 你看我从1

270
00:09:36,800 --> 00:09:38,166
1变到2 对吧?

271
00:09:38,966 --> 00:09:40,333
是变成10是吧?

272
00:09:40,333 --> 00:09:43,733
你看从2变到3是100, 是吧?

273
00:09:43,733 --> 00:09:46,800
从3变到4就1000 是不是?

274
00:09:46,800 --> 00:09:47,233
是不是

275
00:09:47,233 --> 00:09:50,366
那我就可以说如果是2的n次方的时候

276
00:09:50,366 --> 00:09:51,866
我就把这个长度加1

277
00:09:52,033 --> 00:09:53,966
可以这么理解 你看吧 它都是递增的吧

278
00:09:53,966 --> 00:09:56,600
是吧, 当长度加1的时候

279
00:09:56,600 --> 00:09:58,066
那它是变成

280
00:09:58,666 --> 00:09:59,933
2的n次方是不是

281
00:09:59,933 --> 00:10:01,566
那我就实际上我就可以这么操作

282
00:10:01,566 --> 00:10:04,400
我就这边有一个 length 好吧 这个是x吧

283
00:10:04,400 --> 00:10:05,833
就刚才这个 x = 0

284
00:10:05,833 --> 00:10:07,266
如果 i 的长度是

285
00:10:07,500 --> 00:10:08,800
如果 i 是Power Of Two

286
00:10:08,866 --> 00:10:11,399
i 是那个2的 n 次方, 那么 x 就

287
00:10:11,466 --> 00:10:12,433
长度就加1

288
00:10:12,733 --> 00:10:13,366
对吧

289
00:10:13,366 --> 00:10:15,433
我们判断是不是2的n次方

290
00:10:15,499 --> 00:10:17,066
我们就有好多种算法

291
00:10:17,133 --> 00:10:19,066
判断一个数是不是2的n次方

292
00:10:19,133 --> 00:10:21,299
64是2的几次方?

293
00:10:21,366 --> 00:10:22,399
6次方是吧

294
00:10:23,366 --> 00:10:24,599
32是2的5次方

295
00:10:24,599 --> 00:10:25,933
16是2的4次方

296
00:10:26,166 --> 00:10:29,599
16给你一个16你怎么知道它是2的n次方

297
00:10:29,599 --> 00:10:31,233
17不是 为什么呢?

298
00:10:31,666 --> 00:10:32,266
怎么算呢?

299
00:10:32,266 --> 00:10:34,166
这有两种算法, 有好多种算法吧

300
00:10:34,166 --> 00:10:35,433
就是比较简单的算法

301
00:10:35,433 --> 00:10:36,266
就是 1

302
00:10:36,466 --> 00:10:39,166
每次 乘以2 乘以2 乘以2 乘以2 乘以2...

303
00:10:39,166 --> 00:10:41,066
直到这个值大于

304
00:10:41,166 --> 00:10:42,599
你要计算的这个数

305
00:10:42,733 --> 00:10:43,799
比如说16

306
00:10:44,233 --> 00:10:44,933
或者等于吗

307
00:10:44,933 --> 00:10:46,399
如果等于就是2的n次方

308
00:10:46,399 --> 00:10:48,633
如果大于, 就不是 2的n次方, 对不对?

309
00:10:49,199 --> 00:10:50,466
2的n次方, 对不对?

310
00:10:50,466 --> 00:10:51,099
或者是除以2

311
00:10:51,099 --> 00:10:53,866
除于2, 比如说, 你看16是不是2的 n 次方

312
00:10:53,999 --> 00:10:54,699
你除以2

313
00:10:54,699 --> 00:10:56,466
如果你一直能除, 除到1的话

314
00:10:56,466 --> 00:10:58,133
那它就是2的n次方, 对不对?

315
00:10:58,233 --> 00:11:00,499
如果比如7它是奇数, 它不能除以2

316
00:11:00,499 --> 00:11:01,899
那肯定不是2的n次方

317
00:11:01,999 --> 00:11:03,266
对吧, 这两种算法

318
00:11:03,733 --> 00:11:05,399
还有就你算它的 Log

319
00:11:05,433 --> 00:11:07,266
Log2函数 Log以2为底吗

320
00:11:07,266 --> 00:11:10,533
对不对 Log2

321
00:11:10,699 --> 00:11:12,866
你看这个 Log2

322
00:11:13,933 --> 00:11:17,633
就是这个log函数 如果是 Log(64, 2) 对吧

323
00:11:17,633 --> 00:11:19,266
那它肯定是一个整数

324
00:11:19,266 --> 00:11:20,833
如果不是的2的n次方

325
00:11:20,833 --> 00:11:23,599
它就是一个有带小数的, 对吧?

326
00:11:23,599 --> 00:11:24,666
那我们可以这么说

327
00:11:24,933 --> 00:11:27,399
if math.log(i, 2)

328
00:11:27,933 --> 00:11:30,699
如果是 is_integer, 这里有个 is_integer

329
00:11:30,699 --> 00:11:32,533
就是说如果它是一个整数

330
00:11:32,599 --> 00:11:33,433
它没有带小数

331
00:11:33,433 --> 00:11:34,299
那么就加一是吧

332
00:11:34,366 --> 00:11:35,433
哎这也是过了

333
00:11:35,633 --> 00:11:37,966
对吧, 但这个 Math 的判断

334
00:11:37,966 --> 00:11:40,766
它是就是取这个 Log 为底

335
00:11:41,233 --> 00:11:42,799
2为底的这个操作

336
00:11:42,799 --> 00:11:44,066
实际上它还不是最快的

337
00:11:44,066 --> 00:11:45,833
它是一个数学函数

338
00:11:45,833 --> 00:11:47,066
这个不是最快的

339
00:11:47,066 --> 00:11:48,533
这个还是可以优化的

340
00:11:48,599 --> 00:11:49,399
实际上是要判断

341
00:11:49,433 --> 00:11:51,366
这个数是不是1后面有n个0

342
00:11:51,399 --> 00:11:54,566
是吧, 2的N次方就是1后面有n个0

343
00:11:54,566 --> 00:11:55,633
那我比如说

344
00:11:56,066 --> 00:11:56,933
n个0吗是吧

345
00:11:56,933 --> 00:11:58,399
那我减1是不是0

346
00:11:58,399 --> 00:11:59,733
n个1呢是不是

347
00:12:00,433 --> 00:12:02,766
那我做一下那个 AND 的操作

348
00:12:02,766 --> 00:12:04,799
AND 的就是 & 的嘛

349
00:12:04,799 --> 00:12:07,866
就是A & B就是这个"与"操作

350
00:12:07,866 --> 00:12:09,999
就是说 两者都要为1才是1

351
00:12:09,999 --> 00:12:10,966
否则是0嘛

352
00:12:11,066 --> 00:12:12,366
那它AND操作 它就是0嘛

353
00:12:12,366 --> 00:12:14,399
是吧, 所以如果是整型的话

354
00:12:14,399 --> 00:12:16,199
要判判断它是不是2的n次方

355
00:12:16,199 --> 00:12:16,866
实际上可以

356
00:12:16,866 --> 00:12:19,566
比如说这个数字i的话就可以说i大于0

357
00:12:19,566 --> 00:12:21,233
i大于0 **并且**

358
00:12:21,999 --> 00:12:25,433
i AND i减1 要等于0

359
00:12:25,433 --> 00:12:27,933
它就是一个2的n次方

360
00:12:27,933 --> 00:12:29,933
那这时候因为i是从1开始

361
00:12:29,933 --> 00:12:32,199
所以我就前面那部分可 以不要了

362
00:12:32,199 --> 00:12:34,166
我们就把这个东西给抄进去

363
00:12:34,366 --> 00:12:36,433
就把这段给抄进去

364
00:12:37,099 --> 00:12:38,833
那这样应该是可以

365
00:12:39,133 --> 00:12:40,666
应该是可以过的

366
00:12:41,966 --> 00:12:43,500
哎再跑一下

367
00:12:46,466 --> 00:12:47,600
哎过了 你看

368
00:12:47,766 --> 00:12:49,033
BEAT 82%

369
00:12:49,166 --> 00:12:50,200
那就比较快了

370
00:12:50,200 --> 00:12:52,300
因为这个这时候的算法是O(N)嘛

371
00:12:52,333 --> 00:12:54,300
这里面实际上都是常数级别的

372
00:12:54,300 --> 00:12:56,733
我这个两个数进行"与"操作

373
00:12:56,733 --> 00:12:58,400
这计算机速度非常快

374
00:12:58,400 --> 00:13:01,900
那向左移也是 加也是, 加减乘除 取余

375
00:13:01,966 --> 00:13:03,266
其实都非常快的

376
00:13:03,266 --> 00:13:04,933
就比刚才那个要快很多

377
00:13:05,133 --> 00:13:06,600
是吧 那判断2的n次方

378
00:13:06,666 --> 00:13:07,799
还有一种比较笨的方法

379
00:13:07,800 --> 00:13:08,366
不推荐

380
00:13:08,466 --> 00:13:09,300
但是讲一下思路 就是

381
00:13:09,433 --> 00:13:10,666
比如说a

382
00:13:10,733 --> 00:13:15,300
我首先把 Log 2为底 取出来吧, 是吧

383
00:13:15,300 --> 00:13:16,800
log(i, 2)

384
00:13:17,333 --> 00:13:20,700
然后把它的整数部分给取出来

385
00:13:20,700 --> 00:13:23,800
那我若要判断如果2的a次方等于i

386
00:13:23,800 --> 00:13:25,333
再反过来判断一下 是吧

387
00:13:25,600 --> 00:13:27,000
然后x就加等于1

388
00:13:27,933 --> 00:13:30,266
是不是 我就 比如说64的2为底

389
00:13:30,266 --> 00:13:31,633
那它是等于6

390
00:13:31,633 --> 00:13:33,900
那我在2的6次方是不是等于64

391
00:13:33,900 --> 00:13:35,233
实际上就是这个意思

392
00:13:35,500 --> 00:13:37,866
不知道会不会过, 应该也是会过

393
00:13:39,800 --> 00:13:40,733
也是过了嘛

394
00:13:40,733 --> 00:13:43,333
但是它这个明显就是 BEAT 5%嘛

395
00:13:43,333 --> 00:13:45,466
对吧, 你看只 Beat 5%, 就很慢

396
00:13:45,566 --> 00:13:47,199
这两步就是特别特别慢

397
00:13:47,199 --> 00:13:48,833
就多此一举 这样子

398
00:13:49,733 --> 00:13:51,166
行 然后我们今天就讲了这个

399
00:13:51,166 --> 00:13:52,066
这么一个问题

400
00:13:52,233 --> 00:13:54,633
复习一下就是说给定一个自然数n

401
00:13:54,933 --> 00:13:56,299
我们要把1到n

402
00:13:56,299 --> 00:13:58,299
把1到n之间的自然数的二进制

403
00:13:58,633 --> 00:14:00,033
给它拼接起来

404
00:14:00,033 --> 00:14:02,199
然后再换成整数

405
00:14:02,633 --> 00:14:04,633
那这里面讲了几种算法

406
00:14:04,633 --> 00:14:06,933
两种算法 第一种就是最原始的

407
00:14:06,933 --> 00:14:08,433
就是按照题目的意思

408
00:14:08,666 --> 00:14:10,966
就是把它用 bin 函数变成2进制

409
00:14:10,966 --> 00:14:13,166
然后在字符串给拼接起来用那个join

410
00:14:13,266 --> 00:14:14,666
然后最后面用 int

411
00:14:14,700 --> 00:14:16,566
int 函数的第二个参数为2

412
00:14:16,666 --> 00:14:18,000
就把它转换成2进制

413
00:14:18,000 --> 00:14:20,700
这个是第1种算法, 第二种算法就是

414
00:14:20,866 --> 00:14:22,566
通过这个位移

415
00:14:22,566 --> 00:14:24,200
就是你想来一个整数

416
00:14:24,200 --> 00:14:26,800
比如说 1 后面来一个10

417
00:14:26,800 --> 00:14:30,100
那么实际上就是把 1 向左移两位

418
00:14:30,200 --> 00:14:33,633
你就要判断这个数是几位

419
00:14:33,633 --> 00:14:35,233
二进制是里面有几位嘛

420
00:14:35,366 --> 00:14:37,566
那这时候就可以用 Bin 函数

421
00:14:37,566 --> 00:14:38,000
Bin 函数

422
00:14:38,000 --> 00:14:40,000
因为我们用 Bin 函数就可能会比较慢

423
00:14:40,000 --> 00:14:41,700
所以我们就想了1种方法

424
00:14:41,700 --> 00:14:44,200
就是说如果它是2的n次方的话

425
00:14:44,333 --> 00:14:45,866
它的长度就会加一嘛

426
00:14:45,933 --> 00:14:48,699
64比63的2进制多了1位吗

427
00:14:48,700 --> 00:14:50,433
对吧 因为它每次 2的n次方的时候

428
00:14:50,433 --> 00:14:52,633
它实际上就是1后面有n个0

429
00:14:52,633 --> 00:14:55,733
那它之前那个数就是0后面有n个1

430
00:14:55,799 --> 00:14:57,466
怎么判断是2的n次方

431
00:14:57,600 --> 00:14:59,933
那这里面有几个算法就是乘以2

432
00:14:59,933 --> 00:15:01,700
一直乘以2或者一直除以2

433
00:15:01,900 --> 00:15:05,300
或者就是刚才说取2为底

434
00:15:05,500 --> 00:15:07,066
那判断它是不是一个整数

435
00:15:07,100 --> 00:15:08,800
那还有就是刚才讲的这个2进制

436
00:15:08,800 --> 00:15:09,466
2进制的方法

437
00:15:09,466 --> 00:15:11,133
因为1后面有n个0

438
00:15:11,233 --> 00:15:13,400
然后减1就是0后面有n个1

439
00:15:13,433 --> 00:15:15,899
那么把它做一下 AND 的操作

440
00:15:15,900 --> 00:15:16,866
它就是变成0

441
00:15:16,866 --> 00:15:18,933
那种算法是最优的

442
00:15:19,200 --> 00:15:22,033
行, 今天我们就讲到这, 有什么问题吗?

443
00:15:22,400 --> 00:15:23,466
那今天就这样

444
00:15:25,500 --> 00:15:27,600
希望大家喜欢我们的视频

445
00:15:27,866 --> 00:15:29,466
行 求点赞

446
00:15:29,466 --> 00:15:30,700
那就这样 拜拜

447
00:15:30,700 --> 00:15:31,666
拜拜 拜拜

